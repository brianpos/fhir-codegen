{
  "swagger": "2.0",
  "info": {
    "title": "FHIR R4:4.0.1",
    "version": "1.0.0"
  },
  "host": "hapi.fhir.org",
  "basePath": "/baseR4/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/Account/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a Account instance",
        "description": "VRead a Account instance",
        "operationId": "VReadAccount",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Account/{id}": {
      "get": {
        "summary": "Read a Account instance",
        "description": "Read a Account instance",
        "operationId": "ReadAccount",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Account": {
      "get": {
        "summary": "Search Accounts",
        "description": "Search across all Account instances",
        "operationId": "SearchGetAccount",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "owner",
            "description": "Entity managing the Account",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "Account number",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "period",
            "description": "Transaction window",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "subject",
            "description": "The entity that caused the expenses",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "type",
            "description": "E.g. patient, expense, depreciation",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "The entity that caused the expenses",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Human-readable label",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "status",
            "description": "active | inactive | entered-in-error | on-hold | unknown",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Account/_search": {
      "post": {
        "summary": "Search Accounts",
        "description": "Search across all Account instances",
        "operationId": "SearchPostAccount",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "owner",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "period",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "subject",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ActivityDefinition/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a ActivityDefinition instance",
        "description": "VRead a ActivityDefinition instance",
        "operationId": "VReadActivityDefinition",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ActivityDefinition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ActivityDefinition/{id}": {
      "get": {
        "summary": "Read a ActivityDefinition instance",
        "description": "Read a ActivityDefinition instance",
        "operationId": "ReadActivityDefinition",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ActivityDefinition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ActivityDefinition": {
      "get": {
        "summary": "Search ActivityDefinitions",
        "description": "Search across all ActivityDefinition instances",
        "operationId": "SearchGetActivityDefinition",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "The activity definition publication date",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "successor",
            "description": "What resource is being referenced",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type-value",
            "description": "A use context type and value assigned to the activity definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "jurisdiction",
            "description": "Intended jurisdiction for the activity definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "derived-from",
            "description": "What resource is being referenced",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "description",
            "description": "The description of the activity definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type",
            "description": "A type of use context assigned to the activity definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "predecessor",
            "description": "What resource is being referenced",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "composed-of",
            "description": "What resource is being referenced",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "title",
            "description": "The human-friendly name of the activity definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-quantity",
            "description": "A quantity- or range-valued use context assigned to the activity definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "depends-on",
            "description": "What resource is being referenced",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "effective",
            "description": "The time during which the activity definition is intended to be in use",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context",
            "description": "A use context assigned to the activity definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type-quantity",
            "description": "A use context type and quantity- or range-based value assigned to the activity definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "External identifier for the activity definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "version",
            "description": "The business version of the activity definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "url",
            "description": "The uri that identifies the activity definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Computationally friendly name of the activity definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "publisher",
            "description": "Name of the publisher of the activity definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "topic",
            "description": "Topics associated with the module",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "status",
            "description": "The current status of the activity definition",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ActivityDefinition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ActivityDefinition/_search": {
      "post": {
        "summary": "Search ActivityDefinitions",
        "description": "Search across all ActivityDefinition instances",
        "operationId": "SearchPostActivityDefinition",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "successor",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type-value",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "jurisdiction",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "derived-from",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "description",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "predecessor",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "composed-of",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "title",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "depends-on",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "effective",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "version",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "url",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "publisher",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "topic",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ActivityDefinition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/AdverseEvent/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a AdverseEvent instance",
        "description": "VRead a AdverseEvent instance",
        "operationId": "VReadAdverseEvent",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AdverseEvent"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/AdverseEvent/{id}": {
      "get": {
        "summary": "Read a AdverseEvent instance",
        "description": "Read a AdverseEvent instance",
        "operationId": "ReadAdverseEvent",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AdverseEvent"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/AdverseEvent": {
      "get": {
        "summary": "Search AdverseEvents",
        "description": "Search across all AdverseEvent instances",
        "operationId": "SearchGetAdverseEvent",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "When the event occurred",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "severity",
            "description": "mild | moderate | severe",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "recorder",
            "description": "Who recorded the adverse event",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "study",
            "description": "AdverseEvent.study",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "actuality",
            "description": "actual | potential",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "subject",
            "description": "Subject impacted by event",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "resultingcondition",
            "description": "Effect on the subject due to this event",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "substance",
            "description": "Refers to the specific entity that caused the adverse event",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "seriousness",
            "description": "Seriousness of the event",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "in": "query",
            "name": "location",
            "description": "Location where adverse event occurred",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "category",
            "description": "product-problem | product-quality | product-use-error | wrong-dose | incorrect-prescribing-information | wrong-technique | wrong-route-of-administration | wrong-rate | wrong-duration | wrong-time | expired-drug | medical-device-use-error | problem-different-manufacturer | unsafe-physical-environment",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "event",
            "description": "Type of the event itself in relation to the subject",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AdverseEvent"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/AdverseEvent/_search": {
      "post": {
        "summary": "Search AdverseEvents",
        "description": "Search across all AdverseEvent instances",
        "operationId": "SearchPostAdverseEvent",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "severity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "recorder",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "study",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "actuality",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "subject",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "resultingcondition",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "substance",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "seriousness",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "location",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "category",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "event",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AdverseEvent"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/AllergyIntolerance/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a AllergyIntolerance instance",
        "description": "VRead a AllergyIntolerance instance",
        "operationId": "VReadAllergyIntolerance",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AllergyIntolerance"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/AllergyIntolerance/{id}": {
      "get": {
        "summary": "Read a AllergyIntolerance instance",
        "description": "Read a AllergyIntolerance instance",
        "operationId": "ReadAllergyIntolerance",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AllergyIntolerance"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/AllergyIntolerance": {
      "get": {
        "summary": "Search AllergyIntolerances",
        "description": "Search across all AllergyIntolerance instances",
        "operationId": "SearchGetAllergyIntolerance",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Date first version of the resource instance was recorded* [CarePlan](careplan.html): Time period plan covers* [CareTeam](careteam.html): Time period team covers* [ClinicalImpression](clinicalimpression.html): When the assessment was documented* [Composition](composition.html): Composition editing time* [Consent](consent.html): When this Consent was created or indexed* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report* [Encounter](encounter.html): A date within the period the Encounter lasted* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period* [FamilyMemberHistory](familymemberhistory.html): When history was recorded or last updated* [Flag](flag.html): Time period when flag is active* [Immunization](immunization.html): Vaccination  (non)-Administration Date* [List](list.html): When the list was prepared* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period* [Procedure](procedure.html): When the procedure was performed* [RiskAssessment](riskassessment.html): When was assessment made?* [SupplyRequest](supplyrequest.html): When the request was made",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "code",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance* [Condition](condition.html): Code for the condition* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered* [DiagnosticReport](diagnosticreport.html): The code for the report, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code* [List](list.html): What the purpose of this list is* [Medication](medication.html): Returns medications for a specific code* [MedicationAdministration](medicationadministration.html): Return administrations of this medication code* [MedicationDispense](medicationdispense.html): Returns dispenses of this medicine code* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication code* [MedicationStatement](medicationstatement.html): Return statements of this medication code* [Observation](observation.html): The code of the observation type* [Procedure](procedure.html): A code to identify a  procedure* [ServiceRequest](servicerequest.html): What is being requested/ordered",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "verification-status",
            "description": "unconfirmed | confirmed | refuted | entered-in-error",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "criticality",
            "description": "low | high | unable-to-assess",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "clinical-status",
            "description": "active | inactive | resolved",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "type",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): allergy | intolerance - Underlying mechanism (if known)* [Composition](composition.html): Kind of composition (LOINC if possible)* [DocumentManifest](documentmanifest.html): Kind of document set* [DocumentReference](documentreference.html): Kind of document (LOINC if possible)* [Encounter](encounter.html): Specific type of encounter* [EpisodeOfCare](episodeofcare.html): Type/class  - e.g. specialist referral, disease management",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "severity",
            "description": "mild | moderate | severe (of event as a whole)",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "manifestation",
            "description": "Clinical symptoms/signs associated with the Event",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "recorder",
            "description": "Who recorded the sensitivity",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "onset",
            "description": "Date(/time) when manifestations showed",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "asserter",
            "description": "Source of the information about the allergy",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "route",
            "description": "How the subject was exposed to the substance",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "category",
            "description": "food | medication | environment | biologic",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "last-date",
            "description": "Date(/time) of last known occurrence of a reaction",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AllergyIntolerance"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/AllergyIntolerance/_search": {
      "post": {
        "summary": "Search AllergyIntolerances",
        "description": "Search across all AllergyIntolerance instances",
        "operationId": "SearchPostAllergyIntolerance",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "code",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "verification-status",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "criticality",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "clinical-status",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "severity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "manifestation",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "recorder",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "onset",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "asserter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "route",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "category",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "last-date",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AllergyIntolerance"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Appointment/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a Appointment instance",
        "description": "VRead a Appointment instance",
        "operationId": "VReadAppointment",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Appointment"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Appointment/{id}": {
      "get": {
        "summary": "Read a Appointment instance",
        "description": "Read a Appointment instance",
        "operationId": "ReadAppointment",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Appointment"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Appointment": {
      "get": {
        "summary": "Search Appointments",
        "description": "Search across all Appointment instances",
        "operationId": "SearchGetAppointment",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "Appointment date/time.",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "specialty",
            "description": "The specialty of a practitioner that would be required to perform the service requested in this appointment",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "service-category",
            "description": "A broad categorization of the service that is to be performed during this appointment",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "slot",
            "description": "The slots that this appointment is filling",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "reason-code",
            "description": "Coded reason this appointment is scheduled",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "based-on",
            "description": "The service request this appointment is allocated to assess",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "One of the individuals of the appointment is this patient",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "supporting-info",
            "description": "Additional information to support the appointment",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "An Identifier of the Appointment",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "practitioner",
            "description": "One of the individuals of the appointment is this practitioner",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "appointment-type",
            "description": "The style of appointment or patient that has been booked in the slot (not service type)",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "part-status",
            "description": "The Participation status of the subject, or other participant on the appointment. Can be used to locate participants that have not responded to meeting requests.",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "service-type",
            "description": "The specific service that is to be performed during this appointment",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "actor",
            "description": "Any one of the individuals participating in the appointment",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "reason-reference",
            "description": "Reason the appointment is to take place (resource)",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "in": "query",
            "name": "location",
            "description": "This location is listed in the participants of the appointment",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "status",
            "description": "The overall status of the appointment",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Appointment"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Appointment/_search": {
      "post": {
        "summary": "Search Appointments",
        "description": "Search across all Appointment instances",
        "operationId": "SearchPostAppointment",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "specialty",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "service-category",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "slot",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "reason-code",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "based-on",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "supporting-info",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "practitioner",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "appointment-type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "part-status",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "service-type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "actor",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "reason-reference",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "location",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Appointment"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/AppointmentResponse/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a AppointmentResponse instance",
        "description": "VRead a AppointmentResponse instance",
        "operationId": "VReadAppointmentResponse",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AppointmentResponse"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/AppointmentResponse/{id}": {
      "get": {
        "summary": "Read a AppointmentResponse instance",
        "description": "Read a AppointmentResponse instance",
        "operationId": "ReadAppointmentResponse",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AppointmentResponse"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/AppointmentResponse": {
      "get": {
        "summary": "Search AppointmentResponses",
        "description": "Search across all AppointmentResponse instances",
        "operationId": "SearchGetAppointmentResponse",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "identifier",
            "description": "An Identifier in this appointment response",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "practitioner",
            "description": "This Response is for this Practitioner",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "part-status",
            "description": "The participants acceptance status for this appointment",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "appointment",
            "description": "The appointment that the response is attached to",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "actor",
            "description": "The Person, Location/HealthcareService or Device that this appointment response replies for",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "This Response is for this Patient",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "in": "query",
            "name": "location",
            "description": "This Response is for this Location",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AppointmentResponse"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/AppointmentResponse/_search": {
      "post": {
        "summary": "Search AppointmentResponses",
        "description": "Search across all AppointmentResponse instances",
        "operationId": "SearchPostAppointmentResponse",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "practitioner",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "part-status",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "appointment",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "actor",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "location",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AppointmentResponse"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/AuditEvent/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a AuditEvent instance",
        "description": "VRead a AuditEvent instance",
        "operationId": "VReadAuditEvent",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuditEvent"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/AuditEvent/{id}": {
      "get": {
        "summary": "Read a AuditEvent instance",
        "description": "Read a AuditEvent instance",
        "operationId": "ReadAuditEvent",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuditEvent"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/AuditEvent": {
      "get": {
        "summary": "Search AuditEvents",
        "description": "Search across all AuditEvent instances",
        "operationId": "SearchGetAuditEvent",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "Time when the event was recorded",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "entity-type",
            "description": "Type of entity involved",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "agent",
            "description": "Identifier of who",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "entity-role",
            "description": "What role the entity played",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "source",
            "description": "The identity of source detecting the event",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "type",
            "description": "Type/identifier of event",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "altid",
            "description": "Alternative User identity",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "agent-name",
            "description": "Human friendly name for the agent",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "entity-name",
            "description": "Descriptor for entity",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "subtype",
            "description": "More specific type/id for the event",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "Identifier of who",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "action",
            "description": "Type of action performed during the event",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "outcome",
            "description": "Whether the event succeeded or failed",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "policy",
            "description": "Policy that authorized event",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "address",
            "description": "Identifier for the network access point of the user device",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "site",
            "description": "Logical source location within the enterprise",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "agent-role",
            "description": "Agent role in the event",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "entity",
            "description": "Specific instance of resource",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuditEvent"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/AuditEvent/_search": {
      "post": {
        "summary": "Search AuditEvents",
        "description": "Search across all AuditEvent instances",
        "operationId": "SearchPostAuditEvent",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "entity-type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "agent",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "entity-role",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "altid",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "agent-name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "entity-name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "subtype",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "action",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "outcome",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "policy",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "address",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "site",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "agent-role",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "entity",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuditEvent"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Basic/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a Basic instance",
        "description": "VRead a Basic instance",
        "operationId": "VReadBasic",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Basic"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Basic/{id}": {
      "get": {
        "summary": "Read a Basic instance",
        "description": "Read a Basic instance",
        "operationId": "ReadBasic",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Basic"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Basic": {
      "get": {
        "summary": "Search Basics",
        "description": "Search across all Basic instances",
        "operationId": "SearchGetBasic",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "identifier",
            "description": "Business identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "code",
            "description": "Kind of Resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "author",
            "description": "Who created",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "created",
            "description": "When created",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "subject",
            "description": "Identifies the focus of this resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "Identifies the focus of this resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Basic"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Basic/_search": {
      "post": {
        "summary": "Search Basics",
        "description": "Search across all Basic instances",
        "operationId": "SearchPostBasic",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "code",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "author",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "created",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "subject",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Basic"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Binary/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a Binary instance",
        "description": "VRead a Binary instance",
        "operationId": "VReadBinary",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Binary"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Binary/{id}": {
      "get": {
        "summary": "Read a Binary instance",
        "description": "Read a Binary instance",
        "operationId": "ReadBinary",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Binary"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Binary": {
      "get": {
        "summary": "Search Binarys",
        "description": "Search across all Binary instances",
        "operationId": "SearchGetBinary",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Binary"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Binary/_search": {
      "post": {
        "summary": "Search Binarys",
        "description": "Search across all Binary instances",
        "operationId": "SearchPostBinary",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Binary"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/BiologicallyDerivedProduct/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a BiologicallyDerivedProduct instance",
        "description": "VRead a BiologicallyDerivedProduct instance",
        "operationId": "VReadBiologicallyDerivedProduct",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BiologicallyDerivedProduct"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/BiologicallyDerivedProduct/{id}": {
      "get": {
        "summary": "Read a BiologicallyDerivedProduct instance",
        "description": "Read a BiologicallyDerivedProduct instance",
        "operationId": "ReadBiologicallyDerivedProduct",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BiologicallyDerivedProduct"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/BiologicallyDerivedProduct": {
      "get": {
        "summary": "Search BiologicallyDerivedProducts",
        "description": "Search across all BiologicallyDerivedProduct instances",
        "operationId": "SearchGetBiologicallyDerivedProduct",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BiologicallyDerivedProduct"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/BiologicallyDerivedProduct/_search": {
      "post": {
        "summary": "Search BiologicallyDerivedProducts",
        "description": "Search across all BiologicallyDerivedProduct instances",
        "operationId": "SearchPostBiologicallyDerivedProduct",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BiologicallyDerivedProduct"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/BodyStructure/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a BodyStructure instance",
        "description": "VRead a BodyStructure instance",
        "operationId": "VReadBodyStructure",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BodyStructure"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/BodyStructure/{id}": {
      "get": {
        "summary": "Read a BodyStructure instance",
        "description": "Read a BodyStructure instance",
        "operationId": "ReadBodyStructure",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BodyStructure"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/BodyStructure": {
      "get": {
        "summary": "Search BodyStructures",
        "description": "Search across all BodyStructure instances",
        "operationId": "SearchGetBodyStructure",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "identifier",
            "description": "Bodystructure identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "morphology",
            "description": "Kind of Structure",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "Who this is about",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "in": "query",
            "name": "location",
            "description": "Body site",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BodyStructure"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/BodyStructure/_search": {
      "post": {
        "summary": "Search BodyStructures",
        "description": "Search across all BodyStructure instances",
        "operationId": "SearchPostBodyStructure",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "morphology",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "location",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BodyStructure"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Bundle/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a Bundle instance",
        "description": "VRead a Bundle instance",
        "operationId": "VReadBundle",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Bundle"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Bundle/{id}": {
      "get": {
        "summary": "Read a Bundle instance",
        "description": "Read a Bundle instance",
        "operationId": "ReadBundle",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Bundle"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Bundle": {
      "get": {
        "summary": "Search Bundles",
        "description": "Search across all Bundle instances",
        "operationId": "SearchGetBundle",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "identifier",
            "description": "Persistent identifier for the bundle",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "message",
            "description": "The first resource in the bundle, if the bundle type is \"message\" - this is a message header, and this parameter provides access to search its contents",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "type",
            "description": "document | message | transaction | transaction-response | batch | batch-response | history | searchset | collection",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "composition",
            "description": "The first resource in the bundle, if the bundle type is \"document\" - this is a composition, and this parameter provides access to search its contents",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "timestamp",
            "description": "When the bundle was assembled",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Bundle"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Bundle/_search": {
      "post": {
        "summary": "Search Bundles",
        "description": "Search across all Bundle instances",
        "operationId": "SearchPostBundle",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "message",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "composition",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "timestamp",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Bundle"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/CapabilityStatement/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a CapabilityStatement instance",
        "description": "VRead a CapabilityStatement instance",
        "operationId": "VReadCapabilityStatement",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CapabilityStatement"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/CapabilityStatement/{id}": {
      "get": {
        "summary": "Read a CapabilityStatement instance",
        "description": "Read a CapabilityStatement instance",
        "operationId": "ReadCapabilityStatement",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CapabilityStatement"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/CapabilityStatement": {
      "get": {
        "summary": "Search CapabilityStatements",
        "description": "Search across all CapabilityStatement instances",
        "operationId": "SearchGetCapabilityStatement",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The capability statement publication date* [CodeSystem](codesystem.html): The code system publication date* [CompartmentDefinition](compartmentdefinition.html): The compartment definition publication date* [ConceptMap](conceptmap.html): The concept map publication date* [GraphDefinition](graphdefinition.html): The graph definition publication date* [ImplementationGuide](implementationguide.html): The implementation guide publication date* [MessageDefinition](messagedefinition.html): The message definition publication date* [NamingSystem](namingsystem.html): The naming system publication date* [OperationDefinition](operationdefinition.html): The operation definition publication date* [SearchParameter](searchparameter.html): The search parameter publication date* [StructureDefinition](structuredefinition.html): The structure definition publication date* [StructureMap](structuremap.html): The structure map publication date* [TerminologyCapabilities](terminologycapabilities.html): The terminology capabilities publication date* [ValueSet](valueset.html): The value set publication date",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "software",
            "description": "Part of the name of a software application",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type-value",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A use context type and value assigned to the capability statement* [CodeSystem](codesystem.html): A use context type and value assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A use context type and value assigned to the compartment definition* [ConceptMap](conceptmap.html): A use context type and value assigned to the concept map* [GraphDefinition](graphdefinition.html): A use context type and value assigned to the graph definition* [ImplementationGuide](implementationguide.html): A use context type and value assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A use context type and value assigned to the message definition* [NamingSystem](namingsystem.html): A use context type and value assigned to the naming system* [OperationDefinition](operationdefinition.html): A use context type and value assigned to the operation definition* [SearchParameter](searchparameter.html): A use context type and value assigned to the search parameter* [StructureDefinition](structuredefinition.html): A use context type and value assigned to the structure definition* [StructureMap](structuremap.html): A use context type and value assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A use context type and value assigned to the terminology capabilities* [ValueSet](valueset.html): A use context type and value assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "jurisdiction",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Intended jurisdiction for the capability statement* [CodeSystem](codesystem.html): Intended jurisdiction for the code system* [ConceptMap](conceptmap.html): Intended jurisdiction for the concept map* [GraphDefinition](graphdefinition.html): Intended jurisdiction for the graph definition* [ImplementationGuide](implementationguide.html): Intended jurisdiction for the implementation guide* [MessageDefinition](messagedefinition.html): Intended jurisdiction for the message definition* [NamingSystem](namingsystem.html): Intended jurisdiction for the naming system* [OperationDefinition](operationdefinition.html): Intended jurisdiction for the operation definition* [SearchParameter](searchparameter.html): Intended jurisdiction for the search parameter* [StructureDefinition](structuredefinition.html): Intended jurisdiction for the structure definition* [StructureMap](structuremap.html): Intended jurisdiction for the structure map* [TerminologyCapabilities](terminologycapabilities.html): Intended jurisdiction for the terminology capabilities* [ValueSet](valueset.html): Intended jurisdiction for the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "description",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The description of the capability statement* [CodeSystem](codesystem.html): The description of the code system* [CompartmentDefinition](compartmentdefinition.html): The description of the compartment definition* [ConceptMap](conceptmap.html): The description of the concept map* [GraphDefinition](graphdefinition.html): The description of the graph definition* [ImplementationGuide](implementationguide.html): The description of the implementation guide* [MessageDefinition](messagedefinition.html): The description of the message definition* [NamingSystem](namingsystem.html): The description of the naming system* [OperationDefinition](operationdefinition.html): The description of the operation definition* [SearchParameter](searchparameter.html): The description of the search parameter* [StructureDefinition](structuredefinition.html): The description of the structure definition* [StructureMap](structuremap.html): The description of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The description of the terminology capabilities* [ValueSet](valueset.html): The description of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A type of use context assigned to the capability statement* [CodeSystem](codesystem.html): A type of use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A type of use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A type of use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A type of use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A type of use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A type of use context assigned to the message definition* [NamingSystem](namingsystem.html): A type of use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A type of use context assigned to the operation definition* [SearchParameter](searchparameter.html): A type of use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A type of use context assigned to the structure definition* [StructureMap](structuremap.html): A type of use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A type of use context assigned to the terminology capabilities* [ValueSet](valueset.html): A type of use context assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "fhirversion",
            "description": "The version of FHIR",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "title",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The human-friendly name of the capability statement* [CodeSystem](codesystem.html): The human-friendly name of the code system* [ConceptMap](conceptmap.html): The human-friendly name of the concept map* [ImplementationGuide](implementationguide.html): The human-friendly name of the implementation guide* [MessageDefinition](messagedefinition.html): The human-friendly name of the message definition* [OperationDefinition](operationdefinition.html): The human-friendly name of the operation definition* [StructureDefinition](structuredefinition.html): The human-friendly name of the structure definition* [StructureMap](structuremap.html): The human-friendly name of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The human-friendly name of the terminology capabilities* [ValueSet](valueset.html): The human-friendly name of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "mode",
            "description": "Mode - restful (server/client) or messaging (sender/receiver)",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-quantity",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A quantity- or range-valued use context assigned to the capability statement* [CodeSystem](codesystem.html): A quantity- or range-valued use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A quantity- or range-valued use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A quantity- or range-valued use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A quantity- or range-valued use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A quantity- or range-valued use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A quantity- or range-valued use context assigned to the message definition* [NamingSystem](namingsystem.html): A quantity- or range-valued use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A quantity- or range-valued use context assigned to the operation definition* [SearchParameter](searchparameter.html): A quantity- or range-valued use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A quantity- or range-valued use context assigned to the structure definition* [StructureMap](structuremap.html): A quantity- or range-valued use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A quantity- or range-valued use context assigned to the terminology capabilities* [ValueSet](valueset.html): A quantity- or range-valued use context assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A use context assigned to the capability statement* [CodeSystem](codesystem.html): A use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A use context assigned to the message definition* [NamingSystem](namingsystem.html): A use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A use context assigned to the operation definition* [SearchParameter](searchparameter.html): A use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A use context assigned to the structure definition* [StructureMap](structuremap.html): A use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A use context assigned to the terminology capabilities* [ValueSet](valueset.html): A use context assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "guide",
            "description": "Implementation guides supported",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type-quantity",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A use context type and quantity- or range-based value assigned to the capability statement* [CodeSystem](codesystem.html): A use context type and quantity- or range-based value assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A use context type and quantity- or range-based value assigned to the compartment definition* [ConceptMap](conceptmap.html): A use context type and quantity- or range-based value assigned to the concept map* [GraphDefinition](graphdefinition.html): A use context type and quantity- or range-based value assigned to the graph definition* [ImplementationGuide](implementationguide.html): A use context type and quantity- or range-based value assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A use context type and quantity- or range-based value assigned to the message definition* [NamingSystem](namingsystem.html): A use context type and quantity- or range-based value assigned to the naming system* [OperationDefinition](operationdefinition.html): A use context type and quantity- or range-based value assigned to the operation definition* [SearchParameter](searchparameter.html): A use context type and quantity- or range-based value assigned to the search parameter* [StructureDefinition](structuredefinition.html): A use context type and quantity- or range-based value assigned to the structure definition* [StructureMap](structuremap.html): A use context type and quantity- or range-based value assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A use context type and quantity- or range-based value assigned to the terminology capabilities* [ValueSet](valueset.html): A use context type and quantity- or range-based value assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "resource-profile",
            "description": "A profile id invoked in a capability statement",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "resource",
            "description": "Name of a resource mentioned in a capability statement",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "format",
            "description": "formats supported (xml | json | ttl | mime type)",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "version",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The business version of the capability statement* [CodeSystem](codesystem.html): The business version of the code system* [CompartmentDefinition](compartmentdefinition.html): The business version of the compartment definition* [ConceptMap](conceptmap.html): The business version of the concept map* [GraphDefinition](graphdefinition.html): The business version of the graph definition* [ImplementationGuide](implementationguide.html): The business version of the implementation guide* [MessageDefinition](messagedefinition.html): The business version of the message definition* [OperationDefinition](operationdefinition.html): The business version of the operation definition* [SearchParameter](searchparameter.html): The business version of the search parameter* [StructureDefinition](structuredefinition.html): The business version of the structure definition* [StructureMap](structuremap.html): The business version of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The business version of the terminology capabilities* [ValueSet](valueset.html): The business version of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "supported-profile",
            "description": "Profiles for use cases supported",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "url",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The uri that identifies the capability statement* [CodeSystem](codesystem.html): The uri that identifies the code system* [CompartmentDefinition](compartmentdefinition.html): The uri that identifies the compartment definition* [ConceptMap](conceptmap.html): The uri that identifies the concept map* [GraphDefinition](graphdefinition.html): The uri that identifies the graph definition* [ImplementationGuide](implementationguide.html): The uri that identifies the implementation guide* [MessageDefinition](messagedefinition.html): The uri that identifies the message definition* [OperationDefinition](operationdefinition.html): The uri that identifies the operation definition* [SearchParameter](searchparameter.html): The uri that identifies the search parameter* [StructureDefinition](structuredefinition.html): The uri that identifies the structure definition* [StructureMap](structuremap.html): The uri that identifies the structure map* [TerminologyCapabilities](terminologycapabilities.html): The uri that identifies the terminology capabilities* [ValueSet](valueset.html): The uri that identifies the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "security-service",
            "description": "OAuth | SMART-on-FHIR | NTLM | Basic | Kerberos | Certificates",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Computationally friendly name of the capability statement* [CodeSystem](codesystem.html): Computationally friendly name of the code system* [CompartmentDefinition](compartmentdefinition.html): Computationally friendly name of the compartment definition* [ConceptMap](conceptmap.html): Computationally friendly name of the concept map* [GraphDefinition](graphdefinition.html): Computationally friendly name of the graph definition* [ImplementationGuide](implementationguide.html): Computationally friendly name of the implementation guide* [MessageDefinition](messagedefinition.html): Computationally friendly name of the message definition* [NamingSystem](namingsystem.html): Computationally friendly name of the naming system* [OperationDefinition](operationdefinition.html): Computationally friendly name of the operation definition* [SearchParameter](searchparameter.html): Computationally friendly name of the search parameter* [StructureDefinition](structuredefinition.html): Computationally friendly name of the structure definition* [StructureMap](structuremap.html): Computationally friendly name of the structure map* [TerminologyCapabilities](terminologycapabilities.html): Computationally friendly name of the terminology capabilities* [ValueSet](valueset.html): Computationally friendly name of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "publisher",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Name of the publisher of the capability statement* [CodeSystem](codesystem.html): Name of the publisher of the code system* [CompartmentDefinition](compartmentdefinition.html): Name of the publisher of the compartment definition* [ConceptMap](conceptmap.html): Name of the publisher of the concept map* [GraphDefinition](graphdefinition.html): Name of the publisher of the graph definition* [ImplementationGuide](implementationguide.html): Name of the publisher of the implementation guide* [MessageDefinition](messagedefinition.html): Name of the publisher of the message definition* [NamingSystem](namingsystem.html): Name of the publisher of the naming system* [OperationDefinition](operationdefinition.html): Name of the publisher of the operation definition* [SearchParameter](searchparameter.html): Name of the publisher of the search parameter* [StructureDefinition](structuredefinition.html): Name of the publisher of the structure definition* [StructureMap](structuremap.html): Name of the publisher of the structure map* [TerminologyCapabilities](terminologycapabilities.html): Name of the publisher of the terminology capabilities* [ValueSet](valueset.html): Name of the publisher of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "status",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The current status of the capability statement* [CodeSystem](codesystem.html): The current status of the code system* [CompartmentDefinition](compartmentdefinition.html): The current status of the compartment definition* [ConceptMap](conceptmap.html): The current status of the concept map* [GraphDefinition](graphdefinition.html): The current status of the graph definition* [ImplementationGuide](implementationguide.html): The current status of the implementation guide* [MessageDefinition](messagedefinition.html): The current status of the message definition* [NamingSystem](namingsystem.html): The current status of the naming system* [OperationDefinition](operationdefinition.html): The current status of the operation definition* [SearchParameter](searchparameter.html): The current status of the search parameter* [StructureDefinition](structuredefinition.html): The current status of the structure definition* [StructureMap](structuremap.html): The current status of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The current status of the terminology capabilities* [ValueSet](valueset.html): The current status of the value set",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CapabilityStatement"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/CapabilityStatement/_search": {
      "post": {
        "summary": "Search CapabilityStatements",
        "description": "Search across all CapabilityStatement instances",
        "operationId": "SearchPostCapabilityStatement",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "software",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type-value",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "jurisdiction",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "description",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "fhirversion",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "title",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "mode",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "guide",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "resource-profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "resource",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "format",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "version",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "supported-profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "url",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "security-service",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "publisher",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CapabilityStatement"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/CarePlan/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a CarePlan instance",
        "description": "VRead a CarePlan instance",
        "operationId": "VReadCarePlan",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CarePlan"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/CarePlan/{id}": {
      "get": {
        "summary": "Read a CarePlan instance",
        "description": "Read a CarePlan instance",
        "operationId": "ReadCarePlan",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CarePlan"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/CarePlan": {
      "get": {
        "summary": "Search CarePlans",
        "description": "Search across all CarePlan instances",
        "operationId": "SearchGetCarePlan",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Date first version of the resource instance was recorded* [CarePlan](careplan.html): Time period plan covers* [CareTeam](careteam.html): Time period team covers* [ClinicalImpression](clinicalimpression.html): When the assessment was documented* [Composition](composition.html): Composition editing time* [Consent](consent.html): When this Consent was created or indexed* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report* [Encounter](encounter.html): A date within the period the Encounter lasted* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period* [FamilyMemberHistory](familymemberhistory.html): When history was recorded or last updated* [Flag](flag.html): Time period when flag is active* [Immunization](immunization.html): Vaccination  (non)-Administration Date* [List](list.html): When the list was prepared* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period* [Procedure](procedure.html): When the procedure was performed* [RiskAssessment](riskassessment.html): When was assessment made?* [SupplyRequest](supplyrequest.html): When the request was made",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "care-team",
            "description": "Who's involved in plan?",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "subject",
            "description": "Who the care plan is for",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "part-of",
            "description": "Part of referenced CarePlan",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "based-on",
            "description": "Fulfills CarePlan",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "activity-date",
            "description": "Specified date occurs within period specified by CarePlan.activity.detail.scheduled[x]",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "instantiates-uri",
            "description": "Instantiates external protocol or definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "activity-code",
            "description": "Detail type of activity",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "goal",
            "description": "Desired outcome of plan",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "performer",
            "description": "Matches if the practitioner is listed as a performer in any of the \"simple\" activities.  (For performers of the detailed activities, chain through the activitydetail search parameter.)",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "replaces",
            "description": "CarePlan replaced by this CarePlan",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "instantiates-canonical",
            "description": "Instantiates FHIR protocol or definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "encounter",
            "description": "Encounter created as part of",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "intent",
            "description": "proposal | plan | order | option",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "activity-reference",
            "description": "Activity details defined in specific resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "condition",
            "description": "Health issues this plan addresses",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "category",
            "description": "Type of plan",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "status",
            "description": "draft | active | on-hold | revoked | completed | entered-in-error | unknown",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CarePlan"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/CarePlan/_search": {
      "post": {
        "summary": "Search CarePlans",
        "description": "Search across all CarePlan instances",
        "operationId": "SearchPostCarePlan",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "care-team",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "subject",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "part-of",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "based-on",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "activity-date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "instantiates-uri",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "activity-code",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "goal",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "performer",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "replaces",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "instantiates-canonical",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "encounter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "intent",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "activity-reference",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "condition",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "category",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CarePlan"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/CareTeam/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a CareTeam instance",
        "description": "VRead a CareTeam instance",
        "operationId": "VReadCareTeam",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CareTeam"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/CareTeam/{id}": {
      "get": {
        "summary": "Read a CareTeam instance",
        "description": "Read a CareTeam instance",
        "operationId": "ReadCareTeam",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CareTeam"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/CareTeam": {
      "get": {
        "summary": "Search CareTeams",
        "description": "Search across all CareTeam instances",
        "operationId": "SearchGetCareTeam",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Date first version of the resource instance was recorded* [CarePlan](careplan.html): Time period plan covers* [CareTeam](careteam.html): Time period team covers* [ClinicalImpression](clinicalimpression.html): When the assessment was documented* [Composition](composition.html): Composition editing time* [Consent](consent.html): When this Consent was created or indexed* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report* [Encounter](encounter.html): A date within the period the Encounter lasted* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period* [FamilyMemberHistory](familymemberhistory.html): When history was recorded or last updated* [Flag](flag.html): Time period when flag is active* [Immunization](immunization.html): Vaccination  (non)-Administration Date* [List](list.html): When the list was prepared* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period* [Procedure](procedure.html): When the procedure was performed* [RiskAssessment](riskassessment.html): When was assessment made?* [SupplyRequest](supplyrequest.html): When the request was made",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "subject",
            "description": "Who care team is for",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "encounter",
            "description": "Encounter created as part of",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "participant",
            "description": "Who is involved",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "category",
            "description": "Type of team",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "status",
            "description": "proposed | active | suspended | inactive | entered-in-error",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CareTeam"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/CareTeam/_search": {
      "post": {
        "summary": "Search CareTeams",
        "description": "Search across all CareTeam instances",
        "operationId": "SearchPostCareTeam",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "subject",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "encounter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "participant",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "category",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CareTeam"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/CatalogEntry/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a CatalogEntry instance",
        "description": "VRead a CatalogEntry instance",
        "operationId": "VReadCatalogEntry",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CatalogEntry"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/CatalogEntry/{id}": {
      "get": {
        "summary": "Read a CatalogEntry instance",
        "description": "Read a CatalogEntry instance",
        "operationId": "ReadCatalogEntry",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CatalogEntry"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/CatalogEntry": {
      "get": {
        "summary": "Search CatalogEntrys",
        "description": "Search across all CatalogEntry instances",
        "operationId": "SearchGetCatalogEntry",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CatalogEntry"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/CatalogEntry/_search": {
      "post": {
        "summary": "Search CatalogEntrys",
        "description": "Search across all CatalogEntry instances",
        "operationId": "SearchPostCatalogEntry",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CatalogEntry"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ChargeItem/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a ChargeItem instance",
        "description": "VRead a ChargeItem instance",
        "operationId": "VReadChargeItem",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ChargeItem"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ChargeItem/{id}": {
      "get": {
        "summary": "Read a ChargeItem instance",
        "description": "Read a ChargeItem instance",
        "operationId": "ReadChargeItem",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ChargeItem"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ChargeItem": {
      "get": {
        "summary": "Search ChargeItems",
        "description": "Search across all ChargeItem instances",
        "operationId": "SearchGetChargeItem",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "performing-organization",
            "description": "Organization providing the charged service",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "code",
            "description": "A code that identifies the charge, like a billing code",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "subject",
            "description": "Individual service was done for/to",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "occurrence",
            "description": "When the charged service was applied",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "entered-date",
            "description": "Date the charge item was entered",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "performer-function",
            "description": "What type of performance was done",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "factor-override",
            "description": "Factor overriding the associated rules",
            "type": "number",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "Individual service was done for/to",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "price-override",
            "description": "Price overriding the associated rules",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context",
            "description": "Encounter / Episode associated with event",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "enterer",
            "description": "Individual who was entering",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "Business Identifier for item",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "quantity",
            "description": "Quantity of which the charge item has been serviced",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "service",
            "description": "Which rendered service is being charged?",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "performer-actor",
            "description": "Individual who was performing",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "account",
            "description": "Account to place this charge",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "requesting-organization",
            "description": "Organization requesting the charged service",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ChargeItem"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ChargeItem/_search": {
      "post": {
        "summary": "Search ChargeItems",
        "description": "Search across all ChargeItem instances",
        "operationId": "SearchPostChargeItem",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "performing-organization",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "code",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "subject",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "occurrence",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "entered-date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "performer-function",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "factor-override",
            "type": "number"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "price-override",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "enterer",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "service",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "performer-actor",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "account",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "requesting-organization",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ChargeItem"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ChargeItemDefinition/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a ChargeItemDefinition instance",
        "description": "VRead a ChargeItemDefinition instance",
        "operationId": "VReadChargeItemDefinition",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ChargeItemDefinition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ChargeItemDefinition/{id}": {
      "get": {
        "summary": "Read a ChargeItemDefinition instance",
        "description": "Read a ChargeItemDefinition instance",
        "operationId": "ReadChargeItemDefinition",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ChargeItemDefinition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ChargeItemDefinition": {
      "get": {
        "summary": "Search ChargeItemDefinitions",
        "description": "Search across all ChargeItemDefinition instances",
        "operationId": "SearchGetChargeItemDefinition",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "The charge item definition publication date",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type-value",
            "description": "A use context type and value assigned to the charge item definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "jurisdiction",
            "description": "Intended jurisdiction for the charge item definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "description",
            "description": "The description of the charge item definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type",
            "description": "A type of use context assigned to the charge item definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "title",
            "description": "The human-friendly name of the charge item definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-quantity",
            "description": "A quantity- or range-valued use context assigned to the charge item definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "effective",
            "description": "The time during which the charge item definition is intended to be in use",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context",
            "description": "A use context assigned to the charge item definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type-quantity",
            "description": "A use context type and quantity- or range-based value assigned to the charge item definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "External identifier for the charge item definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "version",
            "description": "The business version of the charge item definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "url",
            "description": "The uri that identifies the charge item definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "publisher",
            "description": "Name of the publisher of the charge item definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "status",
            "description": "The current status of the charge item definition",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ChargeItemDefinition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ChargeItemDefinition/_search": {
      "post": {
        "summary": "Search ChargeItemDefinitions",
        "description": "Search across all ChargeItemDefinition instances",
        "operationId": "SearchPostChargeItemDefinition",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type-value",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "jurisdiction",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "description",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "title",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "effective",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "version",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "url",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "publisher",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ChargeItemDefinition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Claim/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a Claim instance",
        "description": "VRead a Claim instance",
        "operationId": "VReadClaim",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Claim"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Claim/{id}": {
      "get": {
        "summary": "Read a Claim instance",
        "description": "Read a Claim instance",
        "operationId": "ReadClaim",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Claim"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Claim": {
      "get": {
        "summary": "Search Claims",
        "description": "Search across all Claim instances",
        "operationId": "SearchGetClaim",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "care-team",
            "description": "Member of the CareTeam",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "use",
            "description": "The kind of financial resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "payee",
            "description": "The party receiving any payment for the Claim",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "provider",
            "description": "Provider responsible for the Claim",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "insurer",
            "description": "The target payor/insurer for the Claim",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "Patient receiving the products or services",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "detail-udi",
            "description": "UDI associated with a line item, detail product or service",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "enterer",
            "description": "The party responsible for the entry of the Claim",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "procedure-udi",
            "description": "UDI associated with a procedure",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "item-udi",
            "description": "UDI associated with a line item product or service",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "The primary identifier of the financial resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "created",
            "description": "The creation date for the Claim",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "encounter",
            "description": "Encounters associated with a billed line item",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "priority",
            "description": "Processing priority requested",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "subdetail-udi",
            "description": "UDI associated with a line item, detail, subdetail product or service",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "facility",
            "description": "Facility where the products or services have been or will be provided",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "status",
            "description": "The status of the Claim instance.",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Claim"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Claim/_search": {
      "post": {
        "summary": "Search Claims",
        "description": "Search across all Claim instances",
        "operationId": "SearchPostClaim",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "care-team",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "use",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "payee",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "provider",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "insurer",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "detail-udi",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "enterer",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "procedure-udi",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "item-udi",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "created",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "encounter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "priority",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "subdetail-udi",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "facility",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Claim"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ClaimResponse/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a ClaimResponse instance",
        "description": "VRead a ClaimResponse instance",
        "operationId": "VReadClaimResponse",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClaimResponse"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ClaimResponse/{id}": {
      "get": {
        "summary": "Read a ClaimResponse instance",
        "description": "Read a ClaimResponse instance",
        "operationId": "ReadClaimResponse",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClaimResponse"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ClaimResponse": {
      "get": {
        "summary": "Search ClaimResponses",
        "description": "Search across all ClaimResponse instances",
        "operationId": "SearchGetClaimResponse",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "identifier",
            "description": "The identity of the ClaimResponse",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "request",
            "description": "The claim reference",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "created",
            "description": "The creation date",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "use",
            "description": "The type of claim",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "payment-date",
            "description": "The expected payment date",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "requestor",
            "description": "The Provider of the claim",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "disposition",
            "description": "The contents of the disposition message",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "insurer",
            "description": "The organization which generated this resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "The subject of care",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "outcome",
            "description": "The processing outcome",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "status",
            "description": "The status of the ClaimResponse",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClaimResponse"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ClaimResponse/_search": {
      "post": {
        "summary": "Search ClaimResponses",
        "description": "Search across all ClaimResponse instances",
        "operationId": "SearchPostClaimResponse",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "request",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "created",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "use",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "payment-date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "requestor",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "disposition",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "insurer",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "outcome",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClaimResponse"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ClinicalImpression/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a ClinicalImpression instance",
        "description": "VRead a ClinicalImpression instance",
        "operationId": "VReadClinicalImpression",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClinicalImpression"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ClinicalImpression/{id}": {
      "get": {
        "summary": "Read a ClinicalImpression instance",
        "description": "Read a ClinicalImpression instance",
        "operationId": "ReadClinicalImpression",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClinicalImpression"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ClinicalImpression": {
      "get": {
        "summary": "Search ClinicalImpressions",
        "description": "Search across all ClinicalImpression instances",
        "operationId": "SearchGetClinicalImpression",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Date first version of the resource instance was recorded* [CarePlan](careplan.html): Time period plan covers* [CareTeam](careteam.html): Time period team covers* [ClinicalImpression](clinicalimpression.html): When the assessment was documented* [Composition](composition.html): Composition editing time* [Consent](consent.html): When this Consent was created or indexed* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report* [Encounter](encounter.html): A date within the period the Encounter lasted* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period* [FamilyMemberHistory](familymemberhistory.html): When history was recorded or last updated* [Flag](flag.html): Time period when flag is active* [Immunization](immunization.html): Vaccination  (non)-Administration Date* [List](list.html): When the list was prepared* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period* [Procedure](procedure.html): When the procedure was performed* [RiskAssessment](riskassessment.html): When was assessment made?* [SupplyRequest](supplyrequest.html): When the request was made",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "Business identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "previous",
            "description": "Reference to last assessment",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "finding-code",
            "description": "What was found",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "assessor",
            "description": "The clinician performing the assessment",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "subject",
            "description": "Patient or group assessed",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "encounter",
            "description": "Encounter created as part of",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "finding-ref",
            "description": "What was found",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "problem",
            "description": "Relevant impressions of patient state",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "supporting-info",
            "description": "Information supporting the clinical impression",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "investigation",
            "description": "Record of a specific investigation",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "status",
            "description": "in-progress | completed | entered-in-error",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClinicalImpression"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ClinicalImpression/_search": {
      "post": {
        "summary": "Search ClinicalImpressions",
        "description": "Search across all ClinicalImpression instances",
        "operationId": "SearchPostClinicalImpression",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "previous",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "finding-code",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "assessor",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "subject",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "encounter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "finding-ref",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "problem",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "supporting-info",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "investigation",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClinicalImpression"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/CodeSystem/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a CodeSystem instance",
        "description": "VRead a CodeSystem instance",
        "operationId": "VReadCodeSystem",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CodeSystem"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/CodeSystem/{id}": {
      "get": {
        "summary": "Read a CodeSystem instance",
        "description": "Read a CodeSystem instance",
        "operationId": "ReadCodeSystem",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CodeSystem"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/CodeSystem": {
      "get": {
        "summary": "Search CodeSystems",
        "description": "Search across all CodeSystem instances",
        "operationId": "SearchGetCodeSystem",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The capability statement publication date* [CodeSystem](codesystem.html): The code system publication date* [CompartmentDefinition](compartmentdefinition.html): The compartment definition publication date* [ConceptMap](conceptmap.html): The concept map publication date* [GraphDefinition](graphdefinition.html): The graph definition publication date* [ImplementationGuide](implementationguide.html): The implementation guide publication date* [MessageDefinition](messagedefinition.html): The message definition publication date* [NamingSystem](namingsystem.html): The naming system publication date* [OperationDefinition](operationdefinition.html): The operation definition publication date* [SearchParameter](searchparameter.html): The search parameter publication date* [StructureDefinition](structuredefinition.html): The structure definition publication date* [StructureMap](structuremap.html): The structure map publication date* [TerminologyCapabilities](terminologycapabilities.html): The terminology capabilities publication date* [ValueSet](valueset.html): The value set publication date",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "code",
            "description": "A code defined in the code system",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type-value",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A use context type and value assigned to the capability statement* [CodeSystem](codesystem.html): A use context type and value assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A use context type and value assigned to the compartment definition* [ConceptMap](conceptmap.html): A use context type and value assigned to the concept map* [GraphDefinition](graphdefinition.html): A use context type and value assigned to the graph definition* [ImplementationGuide](implementationguide.html): A use context type and value assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A use context type and value assigned to the message definition* [NamingSystem](namingsystem.html): A use context type and value assigned to the naming system* [OperationDefinition](operationdefinition.html): A use context type and value assigned to the operation definition* [SearchParameter](searchparameter.html): A use context type and value assigned to the search parameter* [StructureDefinition](structuredefinition.html): A use context type and value assigned to the structure definition* [StructureMap](structuremap.html): A use context type and value assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A use context type and value assigned to the terminology capabilities* [ValueSet](valueset.html): A use context type and value assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "jurisdiction",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Intended jurisdiction for the capability statement* [CodeSystem](codesystem.html): Intended jurisdiction for the code system* [ConceptMap](conceptmap.html): Intended jurisdiction for the concept map* [GraphDefinition](graphdefinition.html): Intended jurisdiction for the graph definition* [ImplementationGuide](implementationguide.html): Intended jurisdiction for the implementation guide* [MessageDefinition](messagedefinition.html): Intended jurisdiction for the message definition* [NamingSystem](namingsystem.html): Intended jurisdiction for the naming system* [OperationDefinition](operationdefinition.html): Intended jurisdiction for the operation definition* [SearchParameter](searchparameter.html): Intended jurisdiction for the search parameter* [StructureDefinition](structuredefinition.html): Intended jurisdiction for the structure definition* [StructureMap](structuremap.html): Intended jurisdiction for the structure map* [TerminologyCapabilities](terminologycapabilities.html): Intended jurisdiction for the terminology capabilities* [ValueSet](valueset.html): Intended jurisdiction for the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "description",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The description of the capability statement* [CodeSystem](codesystem.html): The description of the code system* [CompartmentDefinition](compartmentdefinition.html): The description of the compartment definition* [ConceptMap](conceptmap.html): The description of the concept map* [GraphDefinition](graphdefinition.html): The description of the graph definition* [ImplementationGuide](implementationguide.html): The description of the implementation guide* [MessageDefinition](messagedefinition.html): The description of the message definition* [NamingSystem](namingsystem.html): The description of the naming system* [OperationDefinition](operationdefinition.html): The description of the operation definition* [SearchParameter](searchparameter.html): The description of the search parameter* [StructureDefinition](structuredefinition.html): The description of the structure definition* [StructureMap](structuremap.html): The description of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The description of the terminology capabilities* [ValueSet](valueset.html): The description of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A type of use context assigned to the capability statement* [CodeSystem](codesystem.html): A type of use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A type of use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A type of use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A type of use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A type of use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A type of use context assigned to the message definition* [NamingSystem](namingsystem.html): A type of use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A type of use context assigned to the operation definition* [SearchParameter](searchparameter.html): A type of use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A type of use context assigned to the structure definition* [StructureMap](structuremap.html): A type of use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A type of use context assigned to the terminology capabilities* [ValueSet](valueset.html): A type of use context assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "language",
            "description": "A language in which a designation is provided",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "title",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The human-friendly name of the capability statement* [CodeSystem](codesystem.html): The human-friendly name of the code system* [ConceptMap](conceptmap.html): The human-friendly name of the concept map* [ImplementationGuide](implementationguide.html): The human-friendly name of the implementation guide* [MessageDefinition](messagedefinition.html): The human-friendly name of the message definition* [OperationDefinition](operationdefinition.html): The human-friendly name of the operation definition* [StructureDefinition](structuredefinition.html): The human-friendly name of the structure definition* [StructureMap](structuremap.html): The human-friendly name of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The human-friendly name of the terminology capabilities* [ValueSet](valueset.html): The human-friendly name of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-quantity",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A quantity- or range-valued use context assigned to the capability statement* [CodeSystem](codesystem.html): A quantity- or range-valued use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A quantity- or range-valued use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A quantity- or range-valued use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A quantity- or range-valued use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A quantity- or range-valued use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A quantity- or range-valued use context assigned to the message definition* [NamingSystem](namingsystem.html): A quantity- or range-valued use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A quantity- or range-valued use context assigned to the operation definition* [SearchParameter](searchparameter.html): A quantity- or range-valued use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A quantity- or range-valued use context assigned to the structure definition* [StructureMap](structuremap.html): A quantity- or range-valued use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A quantity- or range-valued use context assigned to the terminology capabilities* [ValueSet](valueset.html): A quantity- or range-valued use context assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A use context assigned to the capability statement* [CodeSystem](codesystem.html): A use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A use context assigned to the message definition* [NamingSystem](namingsystem.html): A use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A use context assigned to the operation definition* [SearchParameter](searchparameter.html): A use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A use context assigned to the structure definition* [StructureMap](structuremap.html): A use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A use context assigned to the terminology capabilities* [ValueSet](valueset.html): A use context assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type-quantity",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A use context type and quantity- or range-based value assigned to the capability statement* [CodeSystem](codesystem.html): A use context type and quantity- or range-based value assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A use context type and quantity- or range-based value assigned to the compartment definition* [ConceptMap](conceptmap.html): A use context type and quantity- or range-based value assigned to the concept map* [GraphDefinition](graphdefinition.html): A use context type and quantity- or range-based value assigned to the graph definition* [ImplementationGuide](implementationguide.html): A use context type and quantity- or range-based value assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A use context type and quantity- or range-based value assigned to the message definition* [NamingSystem](namingsystem.html): A use context type and quantity- or range-based value assigned to the naming system* [OperationDefinition](operationdefinition.html): A use context type and quantity- or range-based value assigned to the operation definition* [SearchParameter](searchparameter.html): A use context type and quantity- or range-based value assigned to the search parameter* [StructureDefinition](structuredefinition.html): A use context type and quantity- or range-based value assigned to the structure definition* [StructureMap](structuremap.html): A use context type and quantity- or range-based value assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A use context type and quantity- or range-based value assigned to the terminology capabilities* [ValueSet](valueset.html): A use context type and quantity- or range-based value assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "Multiple Resources: * [CodeSystem](codesystem.html): External identifier for the code system* [ConceptMap](conceptmap.html): External identifier for the concept map* [MessageDefinition](messagedefinition.html): External identifier for the message definition* [StructureDefinition](structuredefinition.html): External identifier for the structure definition* [StructureMap](structuremap.html): External identifier for the structure map* [ValueSet](valueset.html): External identifier for the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "content-mode",
            "description": "not-present | example | fragment | complete | supplement",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "version",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The business version of the capability statement* [CodeSystem](codesystem.html): The business version of the code system* [CompartmentDefinition](compartmentdefinition.html): The business version of the compartment definition* [ConceptMap](conceptmap.html): The business version of the concept map* [GraphDefinition](graphdefinition.html): The business version of the graph definition* [ImplementationGuide](implementationguide.html): The business version of the implementation guide* [MessageDefinition](messagedefinition.html): The business version of the message definition* [OperationDefinition](operationdefinition.html): The business version of the operation definition* [SearchParameter](searchparameter.html): The business version of the search parameter* [StructureDefinition](structuredefinition.html): The business version of the structure definition* [StructureMap](structuremap.html): The business version of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The business version of the terminology capabilities* [ValueSet](valueset.html): The business version of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "url",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The uri that identifies the capability statement* [CodeSystem](codesystem.html): The uri that identifies the code system* [CompartmentDefinition](compartmentdefinition.html): The uri that identifies the compartment definition* [ConceptMap](conceptmap.html): The uri that identifies the concept map* [GraphDefinition](graphdefinition.html): The uri that identifies the graph definition* [ImplementationGuide](implementationguide.html): The uri that identifies the implementation guide* [MessageDefinition](messagedefinition.html): The uri that identifies the message definition* [OperationDefinition](operationdefinition.html): The uri that identifies the operation definition* [SearchParameter](searchparameter.html): The uri that identifies the search parameter* [StructureDefinition](structuredefinition.html): The uri that identifies the structure definition* [StructureMap](structuremap.html): The uri that identifies the structure map* [TerminologyCapabilities](terminologycapabilities.html): The uri that identifies the terminology capabilities* [ValueSet](valueset.html): The uri that identifies the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "supplements",
            "description": "Find code system supplements for the referenced code system",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "system",
            "description": "The system for any codes defined by this code system (same as 'url')",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Computationally friendly name of the capability statement* [CodeSystem](codesystem.html): Computationally friendly name of the code system* [CompartmentDefinition](compartmentdefinition.html): Computationally friendly name of the compartment definition* [ConceptMap](conceptmap.html): Computationally friendly name of the concept map* [GraphDefinition](graphdefinition.html): Computationally friendly name of the graph definition* [ImplementationGuide](implementationguide.html): Computationally friendly name of the implementation guide* [MessageDefinition](messagedefinition.html): Computationally friendly name of the message definition* [NamingSystem](namingsystem.html): Computationally friendly name of the naming system* [OperationDefinition](operationdefinition.html): Computationally friendly name of the operation definition* [SearchParameter](searchparameter.html): Computationally friendly name of the search parameter* [StructureDefinition](structuredefinition.html): Computationally friendly name of the structure definition* [StructureMap](structuremap.html): Computationally friendly name of the structure map* [TerminologyCapabilities](terminologycapabilities.html): Computationally friendly name of the terminology capabilities* [ValueSet](valueset.html): Computationally friendly name of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "publisher",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Name of the publisher of the capability statement* [CodeSystem](codesystem.html): Name of the publisher of the code system* [CompartmentDefinition](compartmentdefinition.html): Name of the publisher of the compartment definition* [ConceptMap](conceptmap.html): Name of the publisher of the concept map* [GraphDefinition](graphdefinition.html): Name of the publisher of the graph definition* [ImplementationGuide](implementationguide.html): Name of the publisher of the implementation guide* [MessageDefinition](messagedefinition.html): Name of the publisher of the message definition* [NamingSystem](namingsystem.html): Name of the publisher of the naming system* [OperationDefinition](operationdefinition.html): Name of the publisher of the operation definition* [SearchParameter](searchparameter.html): Name of the publisher of the search parameter* [StructureDefinition](structuredefinition.html): Name of the publisher of the structure definition* [StructureMap](structuremap.html): Name of the publisher of the structure map* [TerminologyCapabilities](terminologycapabilities.html): Name of the publisher of the terminology capabilities* [ValueSet](valueset.html): Name of the publisher of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "status",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The current status of the capability statement* [CodeSystem](codesystem.html): The current status of the code system* [CompartmentDefinition](compartmentdefinition.html): The current status of the compartment definition* [ConceptMap](conceptmap.html): The current status of the concept map* [GraphDefinition](graphdefinition.html): The current status of the graph definition* [ImplementationGuide](implementationguide.html): The current status of the implementation guide* [MessageDefinition](messagedefinition.html): The current status of the message definition* [NamingSystem](namingsystem.html): The current status of the naming system* [OperationDefinition](operationdefinition.html): The current status of the operation definition* [SearchParameter](searchparameter.html): The current status of the search parameter* [StructureDefinition](structuredefinition.html): The current status of the structure definition* [StructureMap](structuremap.html): The current status of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The current status of the terminology capabilities* [ValueSet](valueset.html): The current status of the value set",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CodeSystem"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/CodeSystem/_search": {
      "post": {
        "summary": "Search CodeSystems",
        "description": "Search across all CodeSystem instances",
        "operationId": "SearchPostCodeSystem",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "code",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type-value",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "jurisdiction",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "description",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "language",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "title",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "content-mode",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "version",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "url",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "supplements",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "system",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "publisher",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CodeSystem"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Communication/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a Communication instance",
        "description": "VRead a Communication instance",
        "operationId": "VReadCommunication",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Communication"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Communication/{id}": {
      "get": {
        "summary": "Read a Communication instance",
        "description": "Read a Communication instance",
        "operationId": "ReadCommunication",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Communication"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Communication": {
      "get": {
        "summary": "Search Communications",
        "description": "Search across all Communication instances",
        "operationId": "SearchGetCommunication",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "subject",
            "description": "Focus of message",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "part-of",
            "description": "Part of this action",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "medium",
            "description": "A channel of communication",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "based-on",
            "description": "Request fulfilled by this communication",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "Focus of message",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "instantiates-uri",
            "description": "Instantiates external protocol or definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "Unique identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "instantiates-canonical",
            "description": "Instantiates FHIR protocol or definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "received",
            "description": "When received",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "encounter",
            "description": "Encounter created as part of",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "sent",
            "description": "When sent",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "sender",
            "description": "Message sender",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "recipient",
            "description": "Message recipient",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "category",
            "description": "Message category",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "status",
            "description": "preparation | in-progress | not-done | on-hold | stopped | completed | entered-in-error | unknown",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Communication"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Communication/_search": {
      "post": {
        "summary": "Search Communications",
        "description": "Search across all Communication instances",
        "operationId": "SearchPostCommunication",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "subject",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "part-of",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "medium",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "based-on",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "instantiates-uri",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "instantiates-canonical",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "received",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "encounter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "sent",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "sender",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "recipient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "category",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Communication"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/CommunicationRequest/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a CommunicationRequest instance",
        "description": "VRead a CommunicationRequest instance",
        "operationId": "VReadCommunicationRequest",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CommunicationRequest"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/CommunicationRequest/{id}": {
      "get": {
        "summary": "Read a CommunicationRequest instance",
        "description": "Read a CommunicationRequest instance",
        "operationId": "ReadCommunicationRequest",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CommunicationRequest"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/CommunicationRequest": {
      "get": {
        "summary": "Search CommunicationRequests",
        "description": "Search across all CommunicationRequest instances",
        "operationId": "SearchGetCommunicationRequest",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "authored",
            "description": "When request transitioned to being actionable",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "subject",
            "description": "Focus of message",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "medium",
            "description": "A channel of communication",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "occurrence",
            "description": "When scheduled",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "group-identifier",
            "description": "Composite request this is part of",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "based-on",
            "description": "Fulfills plan or proposal",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "Focus of message",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "requester",
            "description": "Who/what is requesting service",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "Unique identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "replaces",
            "description": "Request(s) replaced by this request",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "encounter",
            "description": "Encounter created as part of",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "priority",
            "description": "routine | urgent | asap | stat",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "sender",
            "description": "Message sender",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "recipient",
            "description": "Message recipient",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "category",
            "description": "Message category",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "status",
            "description": "draft | active | on-hold | revoked | completed | entered-in-error | unknown",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CommunicationRequest"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/CommunicationRequest/_search": {
      "post": {
        "summary": "Search CommunicationRequests",
        "description": "Search across all CommunicationRequest instances",
        "operationId": "SearchPostCommunicationRequest",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "authored",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "subject",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "medium",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "occurrence",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "group-identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "based-on",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "requester",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "replaces",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "encounter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "priority",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "sender",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "recipient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "category",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CommunicationRequest"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/CompartmentDefinition/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a CompartmentDefinition instance",
        "description": "VRead a CompartmentDefinition instance",
        "operationId": "VReadCompartmentDefinition",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CompartmentDefinition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/CompartmentDefinition/{id}": {
      "get": {
        "summary": "Read a CompartmentDefinition instance",
        "description": "Read a CompartmentDefinition instance",
        "operationId": "ReadCompartmentDefinition",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CompartmentDefinition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/CompartmentDefinition": {
      "get": {
        "summary": "Search CompartmentDefinitions",
        "description": "Search across all CompartmentDefinition instances",
        "operationId": "SearchGetCompartmentDefinition",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The capability statement publication date* [CodeSystem](codesystem.html): The code system publication date* [CompartmentDefinition](compartmentdefinition.html): The compartment definition publication date* [ConceptMap](conceptmap.html): The concept map publication date* [GraphDefinition](graphdefinition.html): The graph definition publication date* [ImplementationGuide](implementationguide.html): The implementation guide publication date* [MessageDefinition](messagedefinition.html): The message definition publication date* [NamingSystem](namingsystem.html): The naming system publication date* [OperationDefinition](operationdefinition.html): The operation definition publication date* [SearchParameter](searchparameter.html): The search parameter publication date* [StructureDefinition](structuredefinition.html): The structure definition publication date* [StructureMap](structuremap.html): The structure map publication date* [TerminologyCapabilities](terminologycapabilities.html): The terminology capabilities publication date* [ValueSet](valueset.html): The value set publication date",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "code",
            "description": "Patient | Encounter | RelatedPerson | Practitioner | Device",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type-value",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A use context type and value assigned to the capability statement* [CodeSystem](codesystem.html): A use context type and value assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A use context type and value assigned to the compartment definition* [ConceptMap](conceptmap.html): A use context type and value assigned to the concept map* [GraphDefinition](graphdefinition.html): A use context type and value assigned to the graph definition* [ImplementationGuide](implementationguide.html): A use context type and value assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A use context type and value assigned to the message definition* [NamingSystem](namingsystem.html): A use context type and value assigned to the naming system* [OperationDefinition](operationdefinition.html): A use context type and value assigned to the operation definition* [SearchParameter](searchparameter.html): A use context type and value assigned to the search parameter* [StructureDefinition](structuredefinition.html): A use context type and value assigned to the structure definition* [StructureMap](structuremap.html): A use context type and value assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A use context type and value assigned to the terminology capabilities* [ValueSet](valueset.html): A use context type and value assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "resource",
            "description": "Name of resource type",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "description",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The description of the capability statement* [CodeSystem](codesystem.html): The description of the code system* [CompartmentDefinition](compartmentdefinition.html): The description of the compartment definition* [ConceptMap](conceptmap.html): The description of the concept map* [GraphDefinition](graphdefinition.html): The description of the graph definition* [ImplementationGuide](implementationguide.html): The description of the implementation guide* [MessageDefinition](messagedefinition.html): The description of the message definition* [NamingSystem](namingsystem.html): The description of the naming system* [OperationDefinition](operationdefinition.html): The description of the operation definition* [SearchParameter](searchparameter.html): The description of the search parameter* [StructureDefinition](structuredefinition.html): The description of the structure definition* [StructureMap](structuremap.html): The description of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The description of the terminology capabilities* [ValueSet](valueset.html): The description of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A type of use context assigned to the capability statement* [CodeSystem](codesystem.html): A type of use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A type of use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A type of use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A type of use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A type of use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A type of use context assigned to the message definition* [NamingSystem](namingsystem.html): A type of use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A type of use context assigned to the operation definition* [SearchParameter](searchparameter.html): A type of use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A type of use context assigned to the structure definition* [StructureMap](structuremap.html): A type of use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A type of use context assigned to the terminology capabilities* [ValueSet](valueset.html): A type of use context assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "version",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The business version of the capability statement* [CodeSystem](codesystem.html): The business version of the code system* [CompartmentDefinition](compartmentdefinition.html): The business version of the compartment definition* [ConceptMap](conceptmap.html): The business version of the concept map* [GraphDefinition](graphdefinition.html): The business version of the graph definition* [ImplementationGuide](implementationguide.html): The business version of the implementation guide* [MessageDefinition](messagedefinition.html): The business version of the message definition* [OperationDefinition](operationdefinition.html): The business version of the operation definition* [SearchParameter](searchparameter.html): The business version of the search parameter* [StructureDefinition](structuredefinition.html): The business version of the structure definition* [StructureMap](structuremap.html): The business version of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The business version of the terminology capabilities* [ValueSet](valueset.html): The business version of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "url",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The uri that identifies the capability statement* [CodeSystem](codesystem.html): The uri that identifies the code system* [CompartmentDefinition](compartmentdefinition.html): The uri that identifies the compartment definition* [ConceptMap](conceptmap.html): The uri that identifies the concept map* [GraphDefinition](graphdefinition.html): The uri that identifies the graph definition* [ImplementationGuide](implementationguide.html): The uri that identifies the implementation guide* [MessageDefinition](messagedefinition.html): The uri that identifies the message definition* [OperationDefinition](operationdefinition.html): The uri that identifies the operation definition* [SearchParameter](searchparameter.html): The uri that identifies the search parameter* [StructureDefinition](structuredefinition.html): The uri that identifies the structure definition* [StructureMap](structuremap.html): The uri that identifies the structure map* [TerminologyCapabilities](terminologycapabilities.html): The uri that identifies the terminology capabilities* [ValueSet](valueset.html): The uri that identifies the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-quantity",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A quantity- or range-valued use context assigned to the capability statement* [CodeSystem](codesystem.html): A quantity- or range-valued use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A quantity- or range-valued use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A quantity- or range-valued use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A quantity- or range-valued use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A quantity- or range-valued use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A quantity- or range-valued use context assigned to the message definition* [NamingSystem](namingsystem.html): A quantity- or range-valued use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A quantity- or range-valued use context assigned to the operation definition* [SearchParameter](searchparameter.html): A quantity- or range-valued use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A quantity- or range-valued use context assigned to the structure definition* [StructureMap](structuremap.html): A quantity- or range-valued use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A quantity- or range-valued use context assigned to the terminology capabilities* [ValueSet](valueset.html): A quantity- or range-valued use context assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A use context assigned to the capability statement* [CodeSystem](codesystem.html): A use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A use context assigned to the message definition* [NamingSystem](namingsystem.html): A use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A use context assigned to the operation definition* [SearchParameter](searchparameter.html): A use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A use context assigned to the structure definition* [StructureMap](structuremap.html): A use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A use context assigned to the terminology capabilities* [ValueSet](valueset.html): A use context assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Computationally friendly name of the capability statement* [CodeSystem](codesystem.html): Computationally friendly name of the code system* [CompartmentDefinition](compartmentdefinition.html): Computationally friendly name of the compartment definition* [ConceptMap](conceptmap.html): Computationally friendly name of the concept map* [GraphDefinition](graphdefinition.html): Computationally friendly name of the graph definition* [ImplementationGuide](implementationguide.html): Computationally friendly name of the implementation guide* [MessageDefinition](messagedefinition.html): Computationally friendly name of the message definition* [NamingSystem](namingsystem.html): Computationally friendly name of the naming system* [OperationDefinition](operationdefinition.html): Computationally friendly name of the operation definition* [SearchParameter](searchparameter.html): Computationally friendly name of the search parameter* [StructureDefinition](structuredefinition.html): Computationally friendly name of the structure definition* [StructureMap](structuremap.html): Computationally friendly name of the structure map* [TerminologyCapabilities](terminologycapabilities.html): Computationally friendly name of the terminology capabilities* [ValueSet](valueset.html): Computationally friendly name of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "publisher",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Name of the publisher of the capability statement* [CodeSystem](codesystem.html): Name of the publisher of the code system* [CompartmentDefinition](compartmentdefinition.html): Name of the publisher of the compartment definition* [ConceptMap](conceptmap.html): Name of the publisher of the concept map* [GraphDefinition](graphdefinition.html): Name of the publisher of the graph definition* [ImplementationGuide](implementationguide.html): Name of the publisher of the implementation guide* [MessageDefinition](messagedefinition.html): Name of the publisher of the message definition* [NamingSystem](namingsystem.html): Name of the publisher of the naming system* [OperationDefinition](operationdefinition.html): Name of the publisher of the operation definition* [SearchParameter](searchparameter.html): Name of the publisher of the search parameter* [StructureDefinition](structuredefinition.html): Name of the publisher of the structure definition* [StructureMap](structuremap.html): Name of the publisher of the structure map* [TerminologyCapabilities](terminologycapabilities.html): Name of the publisher of the terminology capabilities* [ValueSet](valueset.html): Name of the publisher of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "context-type-quantity",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A use context type and quantity- or range-based value assigned to the capability statement* [CodeSystem](codesystem.html): A use context type and quantity- or range-based value assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A use context type and quantity- or range-based value assigned to the compartment definition* [ConceptMap](conceptmap.html): A use context type and quantity- or range-based value assigned to the concept map* [GraphDefinition](graphdefinition.html): A use context type and quantity- or range-based value assigned to the graph definition* [ImplementationGuide](implementationguide.html): A use context type and quantity- or range-based value assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A use context type and quantity- or range-based value assigned to the message definition* [NamingSystem](namingsystem.html): A use context type and quantity- or range-based value assigned to the naming system* [OperationDefinition](operationdefinition.html): A use context type and quantity- or range-based value assigned to the operation definition* [SearchParameter](searchparameter.html): A use context type and quantity- or range-based value assigned to the search parameter* [StructureDefinition](structuredefinition.html): A use context type and quantity- or range-based value assigned to the structure definition* [StructureMap](structuremap.html): A use context type and quantity- or range-based value assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A use context type and quantity- or range-based value assigned to the terminology capabilities* [ValueSet](valueset.html): A use context type and quantity- or range-based value assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "status",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The current status of the capability statement* [CodeSystem](codesystem.html): The current status of the code system* [CompartmentDefinition](compartmentdefinition.html): The current status of the compartment definition* [ConceptMap](conceptmap.html): The current status of the concept map* [GraphDefinition](graphdefinition.html): The current status of the graph definition* [ImplementationGuide](implementationguide.html): The current status of the implementation guide* [MessageDefinition](messagedefinition.html): The current status of the message definition* [NamingSystem](namingsystem.html): The current status of the naming system* [OperationDefinition](operationdefinition.html): The current status of the operation definition* [SearchParameter](searchparameter.html): The current status of the search parameter* [StructureDefinition](structuredefinition.html): The current status of the structure definition* [StructureMap](structuremap.html): The current status of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The current status of the terminology capabilities* [ValueSet](valueset.html): The current status of the value set",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CompartmentDefinition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/CompartmentDefinition/_search": {
      "post": {
        "summary": "Search CompartmentDefinitions",
        "description": "Search across all CompartmentDefinition instances",
        "operationId": "SearchPostCompartmentDefinition",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "code",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type-value",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "resource",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "description",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "version",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "url",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "publisher",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CompartmentDefinition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Composition/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a Composition instance",
        "description": "VRead a Composition instance",
        "operationId": "VReadComposition",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Composition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Composition/{id}": {
      "get": {
        "summary": "Read a Composition instance",
        "description": "Read a Composition instance",
        "operationId": "ReadComposition",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Composition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Composition": {
      "get": {
        "summary": "Search Compositions",
        "description": "Search across all Composition instances",
        "operationId": "SearchGetComposition",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Date first version of the resource instance was recorded* [CarePlan](careplan.html): Time period plan covers* [CareTeam](careteam.html): Time period team covers* [ClinicalImpression](clinicalimpression.html): When the assessment was documented* [Composition](composition.html): Composition editing time* [Consent](consent.html): When this Consent was created or indexed* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report* [Encounter](encounter.html): A date within the period the Encounter lasted* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period* [FamilyMemberHistory](familymemberhistory.html): When history was recorded or last updated* [Flag](flag.html): Time period when flag is active* [Immunization](immunization.html): Vaccination  (non)-Administration Date* [List](list.html): When the list was prepared* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period* [Procedure](procedure.html): When the procedure was performed* [RiskAssessment](riskassessment.html): When was assessment made?* [SupplyRequest](supplyrequest.html): When the request was made",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "subject",
            "description": "Who and/or what the composition is about",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "confidentiality",
            "description": "As defined by affinity domain",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "section",
            "description": "Classification of section (recommended)",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "type",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): allergy | intolerance - Underlying mechanism (if known)* [Composition](composition.html): Kind of composition (LOINC if possible)* [DocumentManifest](documentmanifest.html): Kind of document set* [DocumentReference](documentreference.html): Kind of document (LOINC if possible)* [Encounter](encounter.html): Specific type of encounter* [EpisodeOfCare](episodeofcare.html): Type/class  - e.g. specialist referral, disease management",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "title",
            "description": "Human Readable name/title",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context",
            "description": "Code(s) that apply to the event being documented",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "period",
            "description": "The period covered by the documentation",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "related-id",
            "description": "Target of the relationship",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "author",
            "description": "Who and/or what authored the composition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "encounter",
            "description": "Multiple Resources: * [Composition](composition.html): Context of the Composition* [DeviceRequest](devicerequest.html): Encounter during which request was created* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made* [DocumentReference](documentreference.html): Context of the document  content* [Flag](flag.html): Alert relevant during encounter* [List](list.html): Context in which list created* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier* [Observation](observation.html): Encounter related to the observation* [Procedure](procedure.html): Encounter created as part of* [RiskAssessment](riskassessment.html): Where was assessment performed?* [ServiceRequest](servicerequest.html): An encounter in which this request is made* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "attester",
            "description": "Who attested the composition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "entry",
            "description": "A reference to data that supports this section",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "related-ref",
            "description": "Target of the relationship",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "category",
            "description": "Categorization of Composition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "status",
            "description": "preliminary | final | amended | entered-in-error",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Composition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Composition/_search": {
      "post": {
        "summary": "Search Compositions",
        "description": "Search across all Composition instances",
        "operationId": "SearchPostComposition",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "subject",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "confidentiality",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "section",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "title",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "period",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "related-id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "author",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "encounter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "attester",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "entry",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "related-ref",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "category",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Composition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ConceptMap/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a ConceptMap instance",
        "description": "VRead a ConceptMap instance",
        "operationId": "VReadConceptMap",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ConceptMap"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ConceptMap/{id}": {
      "get": {
        "summary": "Read a ConceptMap instance",
        "description": "Read a ConceptMap instance",
        "operationId": "ReadConceptMap",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ConceptMap"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ConceptMap": {
      "get": {
        "summary": "Search ConceptMaps",
        "description": "Search across all ConceptMap instances",
        "operationId": "SearchGetConceptMap",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The capability statement publication date* [CodeSystem](codesystem.html): The code system publication date* [CompartmentDefinition](compartmentdefinition.html): The compartment definition publication date* [ConceptMap](conceptmap.html): The concept map publication date* [GraphDefinition](graphdefinition.html): The graph definition publication date* [ImplementationGuide](implementationguide.html): The implementation guide publication date* [MessageDefinition](messagedefinition.html): The message definition publication date* [NamingSystem](namingsystem.html): The naming system publication date* [OperationDefinition](operationdefinition.html): The operation definition publication date* [SearchParameter](searchparameter.html): The search parameter publication date* [StructureDefinition](structuredefinition.html): The structure definition publication date* [StructureMap](structuremap.html): The structure map publication date* [TerminologyCapabilities](terminologycapabilities.html): The terminology capabilities publication date* [ValueSet](valueset.html): The value set publication date",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "other",
            "description": "canonical reference to an additional ConceptMap to use for mapping if the source concept is unmapped",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type-value",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A use context type and value assigned to the capability statement* [CodeSystem](codesystem.html): A use context type and value assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A use context type and value assigned to the compartment definition* [ConceptMap](conceptmap.html): A use context type and value assigned to the concept map* [GraphDefinition](graphdefinition.html): A use context type and value assigned to the graph definition* [ImplementationGuide](implementationguide.html): A use context type and value assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A use context type and value assigned to the message definition* [NamingSystem](namingsystem.html): A use context type and value assigned to the naming system* [OperationDefinition](operationdefinition.html): A use context type and value assigned to the operation definition* [SearchParameter](searchparameter.html): A use context type and value assigned to the search parameter* [StructureDefinition](structuredefinition.html): A use context type and value assigned to the structure definition* [StructureMap](structuremap.html): A use context type and value assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A use context type and value assigned to the terminology capabilities* [ValueSet](valueset.html): A use context type and value assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "dependson",
            "description": "Reference to property mapping depends on",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "target-system",
            "description": "Target system that the concepts are to be mapped to",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "jurisdiction",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Intended jurisdiction for the capability statement* [CodeSystem](codesystem.html): Intended jurisdiction for the code system* [ConceptMap](conceptmap.html): Intended jurisdiction for the concept map* [GraphDefinition](graphdefinition.html): Intended jurisdiction for the graph definition* [ImplementationGuide](implementationguide.html): Intended jurisdiction for the implementation guide* [MessageDefinition](messagedefinition.html): Intended jurisdiction for the message definition* [NamingSystem](namingsystem.html): Intended jurisdiction for the naming system* [OperationDefinition](operationdefinition.html): Intended jurisdiction for the operation definition* [SearchParameter](searchparameter.html): Intended jurisdiction for the search parameter* [StructureDefinition](structuredefinition.html): Intended jurisdiction for the structure definition* [StructureMap](structuremap.html): Intended jurisdiction for the structure map* [TerminologyCapabilities](terminologycapabilities.html): Intended jurisdiction for the terminology capabilities* [ValueSet](valueset.html): Intended jurisdiction for the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "description",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The description of the capability statement* [CodeSystem](codesystem.html): The description of the code system* [CompartmentDefinition](compartmentdefinition.html): The description of the compartment definition* [ConceptMap](conceptmap.html): The description of the concept map* [GraphDefinition](graphdefinition.html): The description of the graph definition* [ImplementationGuide](implementationguide.html): The description of the implementation guide* [MessageDefinition](messagedefinition.html): The description of the message definition* [NamingSystem](namingsystem.html): The description of the naming system* [OperationDefinition](operationdefinition.html): The description of the operation definition* [SearchParameter](searchparameter.html): The description of the search parameter* [StructureDefinition](structuredefinition.html): The description of the structure definition* [StructureMap](structuremap.html): The description of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The description of the terminology capabilities* [ValueSet](valueset.html): The description of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A type of use context assigned to the capability statement* [CodeSystem](codesystem.html): A type of use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A type of use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A type of use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A type of use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A type of use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A type of use context assigned to the message definition* [NamingSystem](namingsystem.html): A type of use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A type of use context assigned to the operation definition* [SearchParameter](searchparameter.html): A type of use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A type of use context assigned to the structure definition* [StructureMap](structuremap.html): A type of use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A type of use context assigned to the terminology capabilities* [ValueSet](valueset.html): A type of use context assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "source",
            "description": "The source value set that contains the concepts that are being mapped",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "title",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The human-friendly name of the capability statement* [CodeSystem](codesystem.html): The human-friendly name of the code system* [ConceptMap](conceptmap.html): The human-friendly name of the concept map* [ImplementationGuide](implementationguide.html): The human-friendly name of the implementation guide* [MessageDefinition](messagedefinition.html): The human-friendly name of the message definition* [OperationDefinition](operationdefinition.html): The human-friendly name of the operation definition* [StructureDefinition](structuredefinition.html): The human-friendly name of the structure definition* [StructureMap](structuremap.html): The human-friendly name of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The human-friendly name of the terminology capabilities* [ValueSet](valueset.html): The human-friendly name of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-quantity",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A quantity- or range-valued use context assigned to the capability statement* [CodeSystem](codesystem.html): A quantity- or range-valued use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A quantity- or range-valued use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A quantity- or range-valued use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A quantity- or range-valued use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A quantity- or range-valued use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A quantity- or range-valued use context assigned to the message definition* [NamingSystem](namingsystem.html): A quantity- or range-valued use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A quantity- or range-valued use context assigned to the operation definition* [SearchParameter](searchparameter.html): A quantity- or range-valued use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A quantity- or range-valued use context assigned to the structure definition* [StructureMap](structuremap.html): A quantity- or range-valued use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A quantity- or range-valued use context assigned to the terminology capabilities* [ValueSet](valueset.html): A quantity- or range-valued use context assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "source-uri",
            "description": "The source value set that contains the concepts that are being mapped",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A use context assigned to the capability statement* [CodeSystem](codesystem.html): A use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A use context assigned to the message definition* [NamingSystem](namingsystem.html): A use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A use context assigned to the operation definition* [SearchParameter](searchparameter.html): A use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A use context assigned to the structure definition* [StructureMap](structuremap.html): A use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A use context assigned to the terminology capabilities* [ValueSet](valueset.html): A use context assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type-quantity",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A use context type and quantity- or range-based value assigned to the capability statement* [CodeSystem](codesystem.html): A use context type and quantity- or range-based value assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A use context type and quantity- or range-based value assigned to the compartment definition* [ConceptMap](conceptmap.html): A use context type and quantity- or range-based value assigned to the concept map* [GraphDefinition](graphdefinition.html): A use context type and quantity- or range-based value assigned to the graph definition* [ImplementationGuide](implementationguide.html): A use context type and quantity- or range-based value assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A use context type and quantity- or range-based value assigned to the message definition* [NamingSystem](namingsystem.html): A use context type and quantity- or range-based value assigned to the naming system* [OperationDefinition](operationdefinition.html): A use context type and quantity- or range-based value assigned to the operation definition* [SearchParameter](searchparameter.html): A use context type and quantity- or range-based value assigned to the search parameter* [StructureDefinition](structuredefinition.html): A use context type and quantity- or range-based value assigned to the structure definition* [StructureMap](structuremap.html): A use context type and quantity- or range-based value assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A use context type and quantity- or range-based value assigned to the terminology capabilities* [ValueSet](valueset.html): A use context type and quantity- or range-based value assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "source-system",
            "description": "Source system where concepts to be mapped are defined",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "target-code",
            "description": "Code that identifies the target element",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "target-uri",
            "description": "The target value set which provides context for the mappings",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "Multiple Resources: * [CodeSystem](codesystem.html): External identifier for the code system* [ConceptMap](conceptmap.html): External identifier for the concept map* [MessageDefinition](messagedefinition.html): External identifier for the message definition* [StructureDefinition](structuredefinition.html): External identifier for the structure definition* [StructureMap](structuremap.html): External identifier for the structure map* [ValueSet](valueset.html): External identifier for the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "product",
            "description": "Reference to property mapping depends on",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "version",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The business version of the capability statement* [CodeSystem](codesystem.html): The business version of the code system* [CompartmentDefinition](compartmentdefinition.html): The business version of the compartment definition* [ConceptMap](conceptmap.html): The business version of the concept map* [GraphDefinition](graphdefinition.html): The business version of the graph definition* [ImplementationGuide](implementationguide.html): The business version of the implementation guide* [MessageDefinition](messagedefinition.html): The business version of the message definition* [OperationDefinition](operationdefinition.html): The business version of the operation definition* [SearchParameter](searchparameter.html): The business version of the search parameter* [StructureDefinition](structuredefinition.html): The business version of the structure definition* [StructureMap](structuremap.html): The business version of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The business version of the terminology capabilities* [ValueSet](valueset.html): The business version of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "url",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The uri that identifies the capability statement* [CodeSystem](codesystem.html): The uri that identifies the code system* [CompartmentDefinition](compartmentdefinition.html): The uri that identifies the compartment definition* [ConceptMap](conceptmap.html): The uri that identifies the concept map* [GraphDefinition](graphdefinition.html): The uri that identifies the graph definition* [ImplementationGuide](implementationguide.html): The uri that identifies the implementation guide* [MessageDefinition](messagedefinition.html): The uri that identifies the message definition* [OperationDefinition](operationdefinition.html): The uri that identifies the operation definition* [SearchParameter](searchparameter.html): The uri that identifies the search parameter* [StructureDefinition](structuredefinition.html): The uri that identifies the structure definition* [StructureMap](structuremap.html): The uri that identifies the structure map* [TerminologyCapabilities](terminologycapabilities.html): The uri that identifies the terminology capabilities* [ValueSet](valueset.html): The uri that identifies the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "target",
            "description": "The target value set which provides context for the mappings",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "source-code",
            "description": "Identifies element being mapped",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Computationally friendly name of the capability statement* [CodeSystem](codesystem.html): Computationally friendly name of the code system* [CompartmentDefinition](compartmentdefinition.html): Computationally friendly name of the compartment definition* [ConceptMap](conceptmap.html): Computationally friendly name of the concept map* [GraphDefinition](graphdefinition.html): Computationally friendly name of the graph definition* [ImplementationGuide](implementationguide.html): Computationally friendly name of the implementation guide* [MessageDefinition](messagedefinition.html): Computationally friendly name of the message definition* [NamingSystem](namingsystem.html): Computationally friendly name of the naming system* [OperationDefinition](operationdefinition.html): Computationally friendly name of the operation definition* [SearchParameter](searchparameter.html): Computationally friendly name of the search parameter* [StructureDefinition](structuredefinition.html): Computationally friendly name of the structure definition* [StructureMap](structuremap.html): Computationally friendly name of the structure map* [TerminologyCapabilities](terminologycapabilities.html): Computationally friendly name of the terminology capabilities* [ValueSet](valueset.html): Computationally friendly name of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "publisher",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Name of the publisher of the capability statement* [CodeSystem](codesystem.html): Name of the publisher of the code system* [CompartmentDefinition](compartmentdefinition.html): Name of the publisher of the compartment definition* [ConceptMap](conceptmap.html): Name of the publisher of the concept map* [GraphDefinition](graphdefinition.html): Name of the publisher of the graph definition* [ImplementationGuide](implementationguide.html): Name of the publisher of the implementation guide* [MessageDefinition](messagedefinition.html): Name of the publisher of the message definition* [NamingSystem](namingsystem.html): Name of the publisher of the naming system* [OperationDefinition](operationdefinition.html): Name of the publisher of the operation definition* [SearchParameter](searchparameter.html): Name of the publisher of the search parameter* [StructureDefinition](structuredefinition.html): Name of the publisher of the structure definition* [StructureMap](structuremap.html): Name of the publisher of the structure map* [TerminologyCapabilities](terminologycapabilities.html): Name of the publisher of the terminology capabilities* [ValueSet](valueset.html): Name of the publisher of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "status",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The current status of the capability statement* [CodeSystem](codesystem.html): The current status of the code system* [CompartmentDefinition](compartmentdefinition.html): The current status of the compartment definition* [ConceptMap](conceptmap.html): The current status of the concept map* [GraphDefinition](graphdefinition.html): The current status of the graph definition* [ImplementationGuide](implementationguide.html): The current status of the implementation guide* [MessageDefinition](messagedefinition.html): The current status of the message definition* [NamingSystem](namingsystem.html): The current status of the naming system* [OperationDefinition](operationdefinition.html): The current status of the operation definition* [SearchParameter](searchparameter.html): The current status of the search parameter* [StructureDefinition](structuredefinition.html): The current status of the structure definition* [StructureMap](structuremap.html): The current status of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The current status of the terminology capabilities* [ValueSet](valueset.html): The current status of the value set",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ConceptMap"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ConceptMap/_search": {
      "post": {
        "summary": "Search ConceptMaps",
        "description": "Search across all ConceptMap instances",
        "operationId": "SearchPostConceptMap",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "other",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type-value",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "dependson",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "target-system",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "jurisdiction",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "description",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "title",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "source-uri",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "source-system",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "target-code",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "target-uri",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "product",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "version",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "url",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "target",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "source-code",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "publisher",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ConceptMap"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Condition/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a Condition instance",
        "description": "VRead a Condition instance",
        "operationId": "VReadCondition",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Condition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Condition/{id}": {
      "get": {
        "summary": "Read a Condition instance",
        "description": "Read a Condition instance",
        "operationId": "ReadCondition",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Condition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Condition": {
      "get": {
        "summary": "Search Conditions",
        "description": "Search across all Condition instances",
        "operationId": "SearchGetCondition",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "onset-info",
            "description": "Onsets as a string",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "code",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance* [Condition](condition.html): Code for the condition* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered* [DiagnosticReport](diagnosticreport.html): The code for the report, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code* [List](list.html): What the purpose of this list is* [Medication](medication.html): Returns medications for a specific code* [MedicationAdministration](medicationadministration.html): Return administrations of this medication code* [MedicationDispense](medicationdispense.html): Returns dispenses of this medicine code* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication code* [MedicationStatement](medicationstatement.html): Return statements of this medication code* [Observation](observation.html): The code of the observation type* [Procedure](procedure.html): A code to identify a  procedure* [ServiceRequest](servicerequest.html): What is being requested/ordered",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "evidence",
            "description": "Manifestation/symptom",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "subject",
            "description": "Who has the condition?",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "verification-status",
            "description": "unconfirmed | provisional | differential | confirmed | refuted | entered-in-error",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "clinical-status",
            "description": "The clinical status of the condition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "onset-date",
            "description": "Date related onsets (dateTime and Period)",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "abatement-date",
            "description": "Date-related abatements (dateTime and period)",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "abatement-age",
            "description": "Abatement as age or age range",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "evidence-detail",
            "description": "Supporting information found elsewhere",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "severity",
            "description": "The severity of the condition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "recorded-date",
            "description": "Date record was first recorded",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "encounter",
            "description": "Encounter created as part of",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "asserter",
            "description": "Person who asserts this condition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "stage",
            "description": "Simple summary (disease specific)",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "abatement-string",
            "description": "Abatement as a string",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "onset-age",
            "description": "Onsets as age or age range",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "body-site",
            "description": "Anatomical location, if relevant",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "category",
            "description": "The category of the condition",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Condition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Condition/_search": {
      "post": {
        "summary": "Search Conditions",
        "description": "Search across all Condition instances",
        "operationId": "SearchPostCondition",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "onset-info",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "code",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "evidence",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "subject",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "verification-status",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "clinical-status",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "onset-date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "abatement-date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "abatement-age",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "evidence-detail",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "severity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "recorded-date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "encounter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "asserter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "stage",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "abatement-string",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "onset-age",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "body-site",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "category",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Condition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Consent/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a Consent instance",
        "description": "VRead a Consent instance",
        "operationId": "VReadConsent",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Consent"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Consent/{id}": {
      "get": {
        "summary": "Read a Consent instance",
        "description": "Read a Consent instance",
        "operationId": "ReadConsent",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Consent"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Consent": {
      "get": {
        "summary": "Search Consents",
        "description": "Search across all Consent instances",
        "operationId": "SearchGetConsent",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Date first version of the resource instance was recorded* [CarePlan](careplan.html): Time period plan covers* [CareTeam](careteam.html): Time period team covers* [ClinicalImpression](clinicalimpression.html): When the assessment was documented* [Composition](composition.html): Composition editing time* [Consent](consent.html): When this Consent was created or indexed* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report* [Encounter](encounter.html): A date within the period the Encounter lasted* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period* [FamilyMemberHistory](familymemberhistory.html): When history was recorded or last updated* [Flag](flag.html): Time period when flag is active* [Immunization](immunization.html): Vaccination  (non)-Administration Date* [List](list.html): When the list was prepared* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period* [Procedure](procedure.html): When the procedure was performed* [RiskAssessment](riskassessment.html): When was assessment made?* [SupplyRequest](supplyrequest.html): When the request was made",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "data",
            "description": "The actual data reference",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "purpose",
            "description": "Context of activities covered by this rule",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "source-reference",
            "description": "Search by reference to a Consent, DocumentReference, Contract  or QuestionnaireResponse",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "scope",
            "description": "Which of the four areas this resource covers (extensible)",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "action",
            "description": "Actions controlled by this rule",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "period",
            "description": "Timeframe for this rule",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "actor",
            "description": "Resource for the actor (or group, by role)",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "security-label",
            "description": "Security Labels that define affected resources",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "organization",
            "description": "Custodian of the consent",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "in": "query",
            "name": "consentor",
            "description": "Who is agreeing to the policy and rules",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "category",
            "description": "Classification of the consent statement - for indexing/retrieval",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "status",
            "description": "draft | proposed | active | rejected | inactive | entered-in-error",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Consent"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Consent/_search": {
      "post": {
        "summary": "Search Consents",
        "description": "Search across all Consent instances",
        "operationId": "SearchPostConsent",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "data",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "purpose",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "source-reference",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "scope",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "action",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "period",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "actor",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "security-label",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "organization",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "consentor",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "category",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Consent"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Contract/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a Contract instance",
        "description": "VRead a Contract instance",
        "operationId": "VReadContract",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Contract"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Contract/{id}": {
      "get": {
        "summary": "Read a Contract instance",
        "description": "Read a Contract instance",
        "operationId": "ReadContract",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Contract"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Contract": {
      "get": {
        "summary": "Search Contracts",
        "description": "Search across all Contract instances",
        "operationId": "SearchGetContract",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "identifier",
            "description": "The identity of the contract",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "instantiates",
            "description": "A source definition of the contract",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "subject",
            "description": "The identity of the subject of the contract",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "url",
            "description": "The basal contract definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "The identity of the subject of the contract (if a patient)",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "authority",
            "description": "The authority of the contract",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "domain",
            "description": "The domain of the contract",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "issued",
            "description": "The date/time the contract was issued",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "signer",
            "description": "Contract Signatory Party",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "status",
            "description": "The status of the contract",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Contract"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Contract/_search": {
      "post": {
        "summary": "Search Contracts",
        "description": "Search across all Contract instances",
        "operationId": "SearchPostContract",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "instantiates",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "subject",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "url",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "authority",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "domain",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "issued",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "signer",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Contract"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Coverage/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a Coverage instance",
        "description": "VRead a Coverage instance",
        "operationId": "VReadCoverage",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Coverage"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Coverage/{id}": {
      "get": {
        "summary": "Read a Coverage instance",
        "description": "Read a Coverage instance",
        "operationId": "ReadCoverage",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Coverage"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Coverage": {
      "get": {
        "summary": "Search Coverages",
        "description": "Search across all Coverage instances",
        "operationId": "SearchGetCoverage",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "identifier",
            "description": "The primary identifier of the insured and the coverage",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "subscriber",
            "description": "Reference to the subscriber",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "type",
            "description": "The kind of coverage (health plan, auto, Workers Compensation)",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "payor",
            "description": "The identity of the insurer or party paying for services",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "beneficiary",
            "description": "Covered party",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "Retrieve coverages for a patient",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "class-value",
            "description": "Value of the class (eg. Plan number, group number)",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "class-type",
            "description": "Coverage class (eg. plan, group)",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "dependent",
            "description": "Dependent number",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "policy-holder",
            "description": "Reference to the policyholder",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "status",
            "description": "The status of the Coverage",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Coverage"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Coverage/_search": {
      "post": {
        "summary": "Search Coverages",
        "description": "Search across all Coverage instances",
        "operationId": "SearchPostCoverage",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "subscriber",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "payor",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "beneficiary",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "class-value",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "class-type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "dependent",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "policy-holder",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Coverage"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/CoverageEligibilityRequest/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a CoverageEligibilityRequest instance",
        "description": "VRead a CoverageEligibilityRequest instance",
        "operationId": "VReadCoverageEligibilityRequest",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CoverageEligibilityRequest"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/CoverageEligibilityRequest/{id}": {
      "get": {
        "summary": "Read a CoverageEligibilityRequest instance",
        "description": "Read a CoverageEligibilityRequest instance",
        "operationId": "ReadCoverageEligibilityRequest",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CoverageEligibilityRequest"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/CoverageEligibilityRequest": {
      "get": {
        "summary": "Search CoverageEligibilityRequests",
        "description": "Search across all CoverageEligibilityRequest instances",
        "operationId": "SearchGetCoverageEligibilityRequest",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "identifier",
            "description": "The business identifier of the Eligibility",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "created",
            "description": "The creation date for the EOB",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "provider",
            "description": "The reference to the provider",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "The reference to the patient",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "enterer",
            "description": "The party who is responsible for the request",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "facility",
            "description": "Facility responsible for the goods and services",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "status",
            "description": "The status of the EligibilityRequest",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CoverageEligibilityRequest"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/CoverageEligibilityRequest/_search": {
      "post": {
        "summary": "Search CoverageEligibilityRequests",
        "description": "Search across all CoverageEligibilityRequest instances",
        "operationId": "SearchPostCoverageEligibilityRequest",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "created",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "provider",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "enterer",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "facility",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CoverageEligibilityRequest"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/CoverageEligibilityResponse/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a CoverageEligibilityResponse instance",
        "description": "VRead a CoverageEligibilityResponse instance",
        "operationId": "VReadCoverageEligibilityResponse",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CoverageEligibilityResponse"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/CoverageEligibilityResponse/{id}": {
      "get": {
        "summary": "Read a CoverageEligibilityResponse instance",
        "description": "Read a CoverageEligibilityResponse instance",
        "operationId": "ReadCoverageEligibilityResponse",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CoverageEligibilityResponse"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/CoverageEligibilityResponse": {
      "get": {
        "summary": "Search CoverageEligibilityResponses",
        "description": "Search across all CoverageEligibilityResponse instances",
        "operationId": "SearchGetCoverageEligibilityResponse",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "identifier",
            "description": "The business identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "request",
            "description": "The EligibilityRequest reference",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "created",
            "description": "The creation date",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "requestor",
            "description": "The EligibilityRequest provider",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "disposition",
            "description": "The contents of the disposition message",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "insurer",
            "description": "The organization which generated this resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "The reference to the patient",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "outcome",
            "description": "The processing outcome",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "status",
            "description": "The EligibilityRequest status",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CoverageEligibilityResponse"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/CoverageEligibilityResponse/_search": {
      "post": {
        "summary": "Search CoverageEligibilityResponses",
        "description": "Search across all CoverageEligibilityResponse instances",
        "operationId": "SearchPostCoverageEligibilityResponse",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "request",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "created",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "requestor",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "disposition",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "insurer",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "outcome",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CoverageEligibilityResponse"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/DetectedIssue/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a DetectedIssue instance",
        "description": "VRead a DetectedIssue instance",
        "operationId": "VReadDetectedIssue",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DetectedIssue"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/DetectedIssue/{id}": {
      "get": {
        "summary": "Read a DetectedIssue instance",
        "description": "Read a DetectedIssue instance",
        "operationId": "ReadDetectedIssue",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DetectedIssue"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/DetectedIssue": {
      "get": {
        "summary": "Search DetectedIssues",
        "description": "Search across all DetectedIssue instances",
        "operationId": "SearchGetDetectedIssue",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "identifier",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "code",
            "description": "Issue Category, e.g. drug-drug, duplicate therapy, etc.",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "author",
            "description": "The provider or device that identified the issue",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identified",
            "description": "When identified",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "implicated",
            "description": "Problem resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DetectedIssue"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/DetectedIssue/_search": {
      "post": {
        "summary": "Search DetectedIssues",
        "description": "Search across all DetectedIssue instances",
        "operationId": "SearchPostDetectedIssue",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "code",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "author",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identified",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "implicated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DetectedIssue"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Device/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a Device instance",
        "description": "VRead a Device instance",
        "operationId": "VReadDevice",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Device"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Device/{id}": {
      "get": {
        "summary": "Read a Device instance",
        "description": "Read a Device instance",
        "operationId": "ReadDevice",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Device"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Device": {
      "get": {
        "summary": "Search Devices",
        "description": "Search across all Device instances",
        "operationId": "SearchGetDevice",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "udi-di",
            "description": "The udi Device Identifier (DI)",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "Instance id from manufacturer, owner, and others",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "udi-carrier",
            "description": "UDI Barcode (RFID or other technology) string in *HRF* format.",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "device-name",
            "description": "A server defined search that may match any of the string fields in Device.deviceName or Device.type.",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "type",
            "description": "The type of the device",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "url",
            "description": "Network address to contact device",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "manufacturer",
            "description": "The manufacturer of the device",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "Patient information, if the resource is affixed to a person",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "organization",
            "description": "The organization responsible for the device",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "in": "query",
            "name": "location",
            "description": "A location, where the resource is found",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "model",
            "description": "The model of the device",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "status",
            "description": "active | inactive | entered-in-error | unknown",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Device"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Device/_search": {
      "post": {
        "summary": "Search Devices",
        "description": "Search across all Device instances",
        "operationId": "SearchPostDevice",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "udi-di",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "udi-carrier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "device-name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "url",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "manufacturer",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "organization",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "location",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "model",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Device"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/DeviceDefinition/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a DeviceDefinition instance",
        "description": "VRead a DeviceDefinition instance",
        "operationId": "VReadDeviceDefinition",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeviceDefinition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/DeviceDefinition/{id}": {
      "get": {
        "summary": "Read a DeviceDefinition instance",
        "description": "Read a DeviceDefinition instance",
        "operationId": "ReadDeviceDefinition",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeviceDefinition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/DeviceDefinition": {
      "get": {
        "summary": "Search DeviceDefinitions",
        "description": "Search across all DeviceDefinition instances",
        "operationId": "SearchGetDeviceDefinition",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "identifier",
            "description": "The identifier of the component",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "parent",
            "description": "The parent DeviceDefinition resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "type",
            "description": "The device component type",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeviceDefinition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/DeviceDefinition/_search": {
      "post": {
        "summary": "Search DeviceDefinitions",
        "description": "Search across all DeviceDefinition instances",
        "operationId": "SearchPostDeviceDefinition",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "parent",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeviceDefinition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/DeviceMetric/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a DeviceMetric instance",
        "description": "VRead a DeviceMetric instance",
        "operationId": "VReadDeviceMetric",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeviceMetric"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/DeviceMetric/{id}": {
      "get": {
        "summary": "Read a DeviceMetric instance",
        "description": "Read a DeviceMetric instance",
        "operationId": "ReadDeviceMetric",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeviceMetric"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/DeviceMetric": {
      "get": {
        "summary": "Search DeviceMetrics",
        "description": "Search across all DeviceMetric instances",
        "operationId": "SearchGetDeviceMetric",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "identifier",
            "description": "The identifier of the metric",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "parent",
            "description": "The parent DeviceMetric resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "source",
            "description": "The device resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "type",
            "description": "The component type",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "category",
            "description": "The category of the metric",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeviceMetric"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/DeviceMetric/_search": {
      "post": {
        "summary": "Search DeviceMetrics",
        "description": "Search across all DeviceMetric instances",
        "operationId": "SearchPostDeviceMetric",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "parent",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "category",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeviceMetric"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/DeviceRequest/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a DeviceRequest instance",
        "description": "VRead a DeviceRequest instance",
        "operationId": "VReadDeviceRequest",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeviceRequest"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/DeviceRequest/{id}": {
      "get": {
        "summary": "Read a DeviceRequest instance",
        "description": "Read a DeviceRequest instance",
        "operationId": "ReadDeviceRequest",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeviceRequest"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/DeviceRequest": {
      "get": {
        "summary": "Search DeviceRequests",
        "description": "Search across all DeviceRequest instances",
        "operationId": "SearchGetDeviceRequest",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "insurance",
            "description": "Associated insurance coverage",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "code",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance* [Condition](condition.html): Code for the condition* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered* [DiagnosticReport](diagnosticreport.html): The code for the report, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code* [List](list.html): What the purpose of this list is* [Medication](medication.html): Returns medications for a specific code* [MedicationAdministration](medicationadministration.html): Return administrations of this medication code* [MedicationDispense](medicationdispense.html): Returns dispenses of this medicine code* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication code* [MedicationStatement](medicationstatement.html): Return statements of this medication code* [Observation](observation.html): The code of the observation type* [Procedure](procedure.html): A code to identify a  procedure* [ServiceRequest](servicerequest.html): What is being requested/ordered",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "subject",
            "description": "Individual the service is ordered for",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "group-identifier",
            "description": "Composite request this is part of",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "based-on",
            "description": "Plan/proposal/order fulfilled by this request",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "instantiates-uri",
            "description": "Instantiates external protocol or definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "requester",
            "description": "Who/what is requesting service",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "performer",
            "description": "Desired performer for service",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "event-date",
            "description": "When service should occur",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "instantiates-canonical",
            "description": "Instantiates FHIR protocol or definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "encounter",
            "description": "Multiple Resources: * [Composition](composition.html): Context of the Composition* [DeviceRequest](devicerequest.html): Encounter during which request was created* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made* [DocumentReference](documentreference.html): Context of the document  content* [Flag](flag.html): Alert relevant during encounter* [List](list.html): Context in which list created* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier* [Observation](observation.html): Encounter related to the observation* [Procedure](procedure.html): Encounter created as part of* [RiskAssessment](riskassessment.html): Where was assessment performed?* [ServiceRequest](servicerequest.html): An encounter in which this request is made* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "authored-on",
            "description": "When the request transitioned to being actionable",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "intent",
            "description": "proposal | plan | original-order |reflex-order",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "device",
            "description": "Reference to resource that is being requested/ordered",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "prior-request",
            "description": "Request takes the place of referenced completed or terminated requests",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "status",
            "description": "entered-in-error | draft | active |suspended | completed",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeviceRequest"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/DeviceRequest/_search": {
      "post": {
        "summary": "Search DeviceRequests",
        "description": "Search across all DeviceRequest instances",
        "operationId": "SearchPostDeviceRequest",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "insurance",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "code",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "subject",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "group-identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "based-on",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "instantiates-uri",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "requester",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "performer",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "event-date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "instantiates-canonical",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "encounter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "authored-on",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "intent",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "device",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "prior-request",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeviceRequest"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/DeviceUseStatement/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a DeviceUseStatement instance",
        "description": "VRead a DeviceUseStatement instance",
        "operationId": "VReadDeviceUseStatement",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeviceUseStatement"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/DeviceUseStatement/{id}": {
      "get": {
        "summary": "Read a DeviceUseStatement instance",
        "description": "Read a DeviceUseStatement instance",
        "operationId": "ReadDeviceUseStatement",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeviceUseStatement"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/DeviceUseStatement": {
      "get": {
        "summary": "Search DeviceUseStatements",
        "description": "Search across all DeviceUseStatement instances",
        "operationId": "SearchGetDeviceUseStatement",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "identifier",
            "description": "Search by identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "subject",
            "description": "Search by subject",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "device",
            "description": "Search by device",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeviceUseStatement"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/DeviceUseStatement/_search": {
      "post": {
        "summary": "Search DeviceUseStatements",
        "description": "Search across all DeviceUseStatement instances",
        "operationId": "SearchPostDeviceUseStatement",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "subject",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "device",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeviceUseStatement"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/DiagnosticReport/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a DiagnosticReport instance",
        "description": "VRead a DiagnosticReport instance",
        "operationId": "VReadDiagnosticReport",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DiagnosticReport"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/DiagnosticReport/{id}": {
      "get": {
        "summary": "Read a DiagnosticReport instance",
        "description": "Read a DiagnosticReport instance",
        "operationId": "ReadDiagnosticReport",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DiagnosticReport"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/DiagnosticReport": {
      "get": {
        "summary": "Search DiagnosticReports",
        "description": "Search across all DiagnosticReport instances",
        "operationId": "SearchGetDiagnosticReport",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Date first version of the resource instance was recorded* [CarePlan](careplan.html): Time period plan covers* [CareTeam](careteam.html): Time period team covers* [ClinicalImpression](clinicalimpression.html): When the assessment was documented* [Composition](composition.html): Composition editing time* [Consent](consent.html): When this Consent was created or indexed* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report* [Encounter](encounter.html): A date within the period the Encounter lasted* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period* [FamilyMemberHistory](familymemberhistory.html): When history was recorded or last updated* [Flag](flag.html): Time period when flag is active* [Immunization](immunization.html): Vaccination  (non)-Administration Date* [List](list.html): When the list was prepared* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period* [Procedure](procedure.html): When the procedure was performed* [RiskAssessment](riskassessment.html): When was assessment made?* [SupplyRequest](supplyrequest.html): When the request was made",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "code",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance* [Condition](condition.html): Code for the condition* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered* [DiagnosticReport](diagnosticreport.html): The code for the report, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code* [List](list.html): What the purpose of this list is* [Medication](medication.html): Returns medications for a specific code* [MedicationAdministration](medicationadministration.html): Return administrations of this medication code* [MedicationDispense](medicationdispense.html): Returns dispenses of this medicine code* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication code* [MedicationStatement](medicationstatement.html): Return statements of this medication code* [Observation](observation.html): The code of the observation type* [Procedure](procedure.html): A code to identify a  procedure* [ServiceRequest](servicerequest.html): What is being requested/ordered",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "subject",
            "description": "The subject of the report",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "media",
            "description": "A reference to the image source.",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "conclusion",
            "description": "A coded conclusion (interpretation/impression) on the report",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "result",
            "description": "Link to an atomic result (observation resource)",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "based-on",
            "description": "Reference to the service request.",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "specimen",
            "description": "The specimen details",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "issued",
            "description": "When the report was issued",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "performer",
            "description": "Who is responsible for the report",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "encounter",
            "description": "Multiple Resources: * [Composition](composition.html): Context of the Composition* [DeviceRequest](devicerequest.html): Encounter during which request was created* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made* [DocumentReference](documentreference.html): Context of the document  content* [Flag](flag.html): Alert relevant during encounter* [List](list.html): Context in which list created* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier* [Observation](observation.html): Encounter related to the observation* [Procedure](procedure.html): Encounter created as part of* [RiskAssessment](riskassessment.html): Where was assessment performed?* [ServiceRequest](servicerequest.html): An encounter in which this request is made* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "category",
            "description": "Which diagnostic discipline/department created the report",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "results-interpreter",
            "description": "Who was the source of the report",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "status",
            "description": "The status of the report",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DiagnosticReport"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/DiagnosticReport/_search": {
      "post": {
        "summary": "Search DiagnosticReports",
        "description": "Search across all DiagnosticReport instances",
        "operationId": "SearchPostDiagnosticReport",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "code",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "subject",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "media",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "conclusion",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "result",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "based-on",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "specimen",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "issued",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "performer",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "encounter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "category",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "results-interpreter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DiagnosticReport"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/DocumentManifest/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a DocumentManifest instance",
        "description": "VRead a DocumentManifest instance",
        "operationId": "VReadDocumentManifest",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DocumentManifest"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/DocumentManifest/{id}": {
      "get": {
        "summary": "Read a DocumentManifest instance",
        "description": "Read a DocumentManifest instance",
        "operationId": "ReadDocumentManifest",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DocumentManifest"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/DocumentManifest": {
      "get": {
        "summary": "Search DocumentManifests",
        "description": "Search across all DocumentManifest instances",
        "operationId": "SearchGetDocumentManifest",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "identifier",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "item",
            "description": "Items in manifest",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "related-id",
            "description": "Identifiers of things that are related",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "author",
            "description": "Who and/or what authored the DocumentManifest",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "created",
            "description": "When this document manifest created",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "subject",
            "description": "The subject of the set of documents",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "description",
            "description": "Human-readable description (title)",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "source",
            "description": "The source system/application/software",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "type",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): allergy | intolerance - Underlying mechanism (if known)* [Composition](composition.html): Kind of composition (LOINC if possible)* [DocumentManifest](documentmanifest.html): Kind of document set* [DocumentReference](documentreference.html): Kind of document (LOINC if possible)* [Encounter](encounter.html): Specific type of encounter* [EpisodeOfCare](episodeofcare.html): Type/class  - e.g. specialist referral, disease management",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "related-ref",
            "description": "Related Resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "recipient",
            "description": "Intended to get notified about this set of documents",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "status",
            "description": "current | superseded | entered-in-error",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DocumentManifest"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/DocumentManifest/_search": {
      "post": {
        "summary": "Search DocumentManifests",
        "description": "Search across all DocumentManifest instances",
        "operationId": "SearchPostDocumentManifest",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "item",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "related-id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "author",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "created",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "subject",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "description",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "related-ref",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "recipient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DocumentManifest"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/DocumentReference/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a DocumentReference instance",
        "description": "VRead a DocumentReference instance",
        "operationId": "VReadDocumentReference",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DocumentReference"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/DocumentReference/{id}": {
      "get": {
        "summary": "Read a DocumentReference instance",
        "description": "Read a DocumentReference instance",
        "operationId": "ReadDocumentReference",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DocumentReference"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/DocumentReference": {
      "get": {
        "summary": "Search DocumentReferences",
        "description": "Search across all DocumentReference instances",
        "operationId": "SearchGetDocumentReference",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "When this document reference was created",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "subject",
            "description": "Who/what is the subject of the document",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "description",
            "description": "Human-readable description",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "language",
            "description": "Human language of the content (BCP-47)",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "type",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): allergy | intolerance - Underlying mechanism (if known)* [Composition](composition.html): Kind of composition (LOINC if possible)* [DocumentManifest](documentmanifest.html): Kind of document set* [DocumentReference](documentreference.html): Kind of document (LOINC if possible)* [Encounter](encounter.html): Specific type of encounter* [EpisodeOfCare](episodeofcare.html): Type/class  - e.g. specialist referral, disease management",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "relation",
            "description": "replaces | transforms | signs | appends",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "setting",
            "description": "Additional details about where the content was created (e.g. clinical specialty)",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "related",
            "description": "Related identifiers or resources",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "event",
            "description": "Main clinical acts documented",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "relationship",
            "description": "Combination of relation and relatesTo",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "authenticator",
            "description": "Who/what authenticated the document",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "period",
            "description": "Time of service that is being documented",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "custodian",
            "description": "Organization which maintains the document",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "author",
            "description": "Who and/or what authored the document",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "format",
            "description": "Format/content rules for the document",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "encounter",
            "description": "Multiple Resources: * [Composition](composition.html): Context of the Composition* [DeviceRequest](devicerequest.html): Encounter during which request was created* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made* [DocumentReference](documentreference.html): Context of the document  content* [Flag](flag.html): Alert relevant during encounter* [List](list.html): Context in which list created* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier* [Observation](observation.html): Encounter related to the observation* [Procedure](procedure.html): Encounter created as part of* [RiskAssessment](riskassessment.html): Where was assessment performed?* [ServiceRequest](servicerequest.html): An encounter in which this request is made* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "contenttype",
            "description": "Mime type of the content, with charset etc.",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "security-label",
            "description": "Document security-tags",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "in": "query",
            "name": "location",
            "description": "Uri where the data can be found",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "category",
            "description": "Categorization of document",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "relatesto",
            "description": "Target of the relationship",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "facility",
            "description": "Kind of facility where patient was seen",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "status",
            "description": "current | superseded | entered-in-error",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DocumentReference"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/DocumentReference/_search": {
      "post": {
        "summary": "Search DocumentReferences",
        "description": "Search across all DocumentReference instances",
        "operationId": "SearchPostDocumentReference",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "subject",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "description",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "language",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "relation",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "setting",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "related",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "event",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "relationship",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "authenticator",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "period",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "custodian",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "author",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "format",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "encounter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "contenttype",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "security-label",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "location",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "category",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "relatesto",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "facility",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DocumentReference"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/EffectEvidenceSynthesis/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a EffectEvidenceSynthesis instance",
        "description": "VRead a EffectEvidenceSynthesis instance",
        "operationId": "VReadEffectEvidenceSynthesis",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EffectEvidenceSynthesis"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/EffectEvidenceSynthesis/{id}": {
      "get": {
        "summary": "Read a EffectEvidenceSynthesis instance",
        "description": "Read a EffectEvidenceSynthesis instance",
        "operationId": "ReadEffectEvidenceSynthesis",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EffectEvidenceSynthesis"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/EffectEvidenceSynthesis": {
      "get": {
        "summary": "Search EffectEvidenceSynthesiss",
        "description": "Search across all EffectEvidenceSynthesis instances",
        "operationId": "SearchGetEffectEvidenceSynthesis",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "The effect evidence synthesis publication date",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type-value",
            "description": "A use context type and value assigned to the effect evidence synthesis",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "jurisdiction",
            "description": "Intended jurisdiction for the effect evidence synthesis",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "description",
            "description": "The description of the effect evidence synthesis",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type",
            "description": "A type of use context assigned to the effect evidence synthesis",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "title",
            "description": "The human-friendly name of the effect evidence synthesis",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-quantity",
            "description": "A quantity- or range-valued use context assigned to the effect evidence synthesis",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "effective",
            "description": "The time during which the effect evidence synthesis is intended to be in use",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context",
            "description": "A use context assigned to the effect evidence synthesis",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type-quantity",
            "description": "A use context type and quantity- or range-based value assigned to the effect evidence synthesis",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "External identifier for the effect evidence synthesis",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "version",
            "description": "The business version of the effect evidence synthesis",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "url",
            "description": "The uri that identifies the effect evidence synthesis",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Computationally friendly name of the effect evidence synthesis",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "publisher",
            "description": "Name of the publisher of the effect evidence synthesis",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "status",
            "description": "The current status of the effect evidence synthesis",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EffectEvidenceSynthesis"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/EffectEvidenceSynthesis/_search": {
      "post": {
        "summary": "Search EffectEvidenceSynthesiss",
        "description": "Search across all EffectEvidenceSynthesis instances",
        "operationId": "SearchPostEffectEvidenceSynthesis",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type-value",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "jurisdiction",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "description",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "title",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "effective",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "version",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "url",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "publisher",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EffectEvidenceSynthesis"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Encounter/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a Encounter instance",
        "description": "VRead a Encounter instance",
        "operationId": "VReadEncounter",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Encounter"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Encounter/{id}": {
      "get": {
        "summary": "Read a Encounter instance",
        "description": "Read a Encounter instance",
        "operationId": "ReadEncounter",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Encounter"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Encounter": {
      "get": {
        "summary": "Search Encounters",
        "description": "Search across all Encounter instances",
        "operationId": "SearchGetEncounter",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Date first version of the resource instance was recorded* [CarePlan](careplan.html): Time period plan covers* [CareTeam](careteam.html): Time period team covers* [ClinicalImpression](clinicalimpression.html): When the assessment was documented* [Composition](composition.html): Composition editing time* [Consent](consent.html): When this Consent was created or indexed* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report* [Encounter](encounter.html): A date within the period the Encounter lasted* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period* [FamilyMemberHistory](familymemberhistory.html): When history was recorded or last updated* [Flag](flag.html): Time period when flag is active* [Immunization](immunization.html): Vaccination  (non)-Administration Date* [List](list.html): When the list was prepared* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period* [Procedure](procedure.html): When the procedure was performed* [RiskAssessment](riskassessment.html): When was assessment made?* [SupplyRequest](supplyrequest.html): When the request was made",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "participant-type",
            "description": "Role of participant in encounter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "subject",
            "description": "The patient or group present at the encounter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "appointment",
            "description": "The appointment that scheduled this encounter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "part-of",
            "description": "Another Encounter this encounter is part of",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "type",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): allergy | intolerance - Underlying mechanism (if known)* [Composition](composition.html): Kind of composition (LOINC if possible)* [DocumentManifest](documentmanifest.html): Kind of document set* [DocumentReference](documentreference.html): Kind of document (LOINC if possible)* [Encounter](encounter.html): Specific type of encounter* [EpisodeOfCare](episodeofcare.html): Type/class  - e.g. specialist referral, disease management",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "participant",
            "description": "Persons involved in the encounter other than the patient",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "reason-code",
            "description": "Coded reason the encounter takes place",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "based-on",
            "description": "The ServiceRequest that initiated this encounter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "location-period",
            "description": "Time period during which the patient was present at the location",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "special-arrangement",
            "description": "Wheelchair, translator, stretcher, etc.",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "class",
            "description": "Classification of patient encounter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "practitioner",
            "description": "Persons involved in the encounter other than the patient",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "episode-of-care",
            "description": "Episode(s) of care that this encounter should be recorded against",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "length",
            "description": "Length of encounter in days",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "diagnosis",
            "description": "The diagnosis or procedure relevant to the encounter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "reason-reference",
            "description": "Reason the encounter takes place (reference)",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "in": "query",
            "name": "location",
            "description": "Location the encounter takes place",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "service-provider",
            "description": "The organization (facility) responsible for this encounter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "account",
            "description": "The set of accounts that may be used for billing for this Encounter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "status",
            "description": "planned | arrived | triaged | in-progress | onleave | finished | cancelled +",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Encounter"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Encounter/_search": {
      "post": {
        "summary": "Search Encounters",
        "description": "Search across all Encounter instances",
        "operationId": "SearchPostEncounter",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "participant-type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "subject",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "appointment",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "part-of",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "participant",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "reason-code",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "based-on",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "location-period",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "special-arrangement",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "class",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "practitioner",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "episode-of-care",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "length",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "diagnosis",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "reason-reference",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "location",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "service-provider",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "account",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Encounter"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Endpoint/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a Endpoint instance",
        "description": "VRead a Endpoint instance",
        "operationId": "VReadEndpoint",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Endpoint"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Endpoint/{id}": {
      "get": {
        "summary": "Read a Endpoint instance",
        "description": "Read a Endpoint instance",
        "operationId": "ReadEndpoint",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Endpoint"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Endpoint": {
      "get": {
        "summary": "Search Endpoints",
        "description": "Search across all Endpoint instances",
        "operationId": "SearchGetEndpoint",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "identifier",
            "description": "Identifies this endpoint across multiple systems",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "payload-type",
            "description": "The type of content that may be used at this endpoint (e.g. XDS Discharge summaries)",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "connection-type",
            "description": "Protocol/Profile/Standard to be used with this endpoint connection",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "organization",
            "description": "The organization that is managing the endpoint",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "name",
            "description": "A name that this endpoint can be identified by",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "status",
            "description": "The current status of the Endpoint (usually expected to be active)",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Endpoint"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Endpoint/_search": {
      "post": {
        "summary": "Search Endpoints",
        "description": "Search across all Endpoint instances",
        "operationId": "SearchPostEndpoint",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "payload-type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "connection-type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "organization",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Endpoint"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/EnrollmentRequest/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a EnrollmentRequest instance",
        "description": "VRead a EnrollmentRequest instance",
        "operationId": "VReadEnrollmentRequest",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EnrollmentRequest"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/EnrollmentRequest/{id}": {
      "get": {
        "summary": "Read a EnrollmentRequest instance",
        "description": "Read a EnrollmentRequest instance",
        "operationId": "ReadEnrollmentRequest",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EnrollmentRequest"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/EnrollmentRequest": {
      "get": {
        "summary": "Search EnrollmentRequests",
        "description": "Search across all EnrollmentRequest instances",
        "operationId": "SearchGetEnrollmentRequest",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "identifier",
            "description": "The business identifier of the Enrollment",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "subject",
            "description": "The party to be enrolled",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "The party to be enrolled",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "status",
            "description": "The status of the enrollment",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EnrollmentRequest"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/EnrollmentRequest/_search": {
      "post": {
        "summary": "Search EnrollmentRequests",
        "description": "Search across all EnrollmentRequest instances",
        "operationId": "SearchPostEnrollmentRequest",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "subject",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EnrollmentRequest"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/EnrollmentResponse/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a EnrollmentResponse instance",
        "description": "VRead a EnrollmentResponse instance",
        "operationId": "VReadEnrollmentResponse",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EnrollmentResponse"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/EnrollmentResponse/{id}": {
      "get": {
        "summary": "Read a EnrollmentResponse instance",
        "description": "Read a EnrollmentResponse instance",
        "operationId": "ReadEnrollmentResponse",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EnrollmentResponse"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/EnrollmentResponse": {
      "get": {
        "summary": "Search EnrollmentResponses",
        "description": "Search across all EnrollmentResponse instances",
        "operationId": "SearchGetEnrollmentResponse",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "identifier",
            "description": "The business identifier of the EnrollmentResponse",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "request",
            "description": "The reference to the claim",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "status",
            "description": "The status of the enrollment response",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EnrollmentResponse"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/EnrollmentResponse/_search": {
      "post": {
        "summary": "Search EnrollmentResponses",
        "description": "Search across all EnrollmentResponse instances",
        "operationId": "SearchPostEnrollmentResponse",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "request",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EnrollmentResponse"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/EpisodeOfCare/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a EpisodeOfCare instance",
        "description": "VRead a EpisodeOfCare instance",
        "operationId": "VReadEpisodeOfCare",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EpisodeOfCare"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/EpisodeOfCare/{id}": {
      "get": {
        "summary": "Read a EpisodeOfCare instance",
        "description": "Read a EpisodeOfCare instance",
        "operationId": "ReadEpisodeOfCare",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EpisodeOfCare"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/EpisodeOfCare": {
      "get": {
        "summary": "Search EpisodeOfCares",
        "description": "Search across all EpisodeOfCare instances",
        "operationId": "SearchGetEpisodeOfCare",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Date first version of the resource instance was recorded* [CarePlan](careplan.html): Time period plan covers* [CareTeam](careteam.html): Time period team covers* [ClinicalImpression](clinicalimpression.html): When the assessment was documented* [Composition](composition.html): Composition editing time* [Consent](consent.html): When this Consent was created or indexed* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report* [Encounter](encounter.html): A date within the period the Encounter lasted* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period* [FamilyMemberHistory](familymemberhistory.html): When history was recorded or last updated* [Flag](flag.html): Time period when flag is active* [Immunization](immunization.html): Vaccination  (non)-Administration Date* [List](list.html): When the list was prepared* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period* [Procedure](procedure.html): When the procedure was performed* [RiskAssessment](riskassessment.html): When was assessment made?* [SupplyRequest](supplyrequest.html): When the request was made",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "type",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): allergy | intolerance - Underlying mechanism (if known)* [Composition](composition.html): Kind of composition (LOINC if possible)* [DocumentManifest](documentmanifest.html): Kind of document set* [DocumentReference](documentreference.html): Kind of document (LOINC if possible)* [Encounter](encounter.html): Specific type of encounter* [EpisodeOfCare](episodeofcare.html): Type/class  - e.g. specialist referral, disease management",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "incoming-referral",
            "description": "Incoming Referral Request",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "condition",
            "description": "Conditions/problems/diagnoses this episode of care is for",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "organization",
            "description": "The organization that has assumed the specific responsibilities of this EpisodeOfCare",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "care-manager",
            "description": "Care manager/care coordinator for the patient",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "status",
            "description": "The current status of the Episode of Care as provided (does not check the status history collection)",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EpisodeOfCare"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/EpisodeOfCare/_search": {
      "post": {
        "summary": "Search EpisodeOfCares",
        "description": "Search across all EpisodeOfCare instances",
        "operationId": "SearchPostEpisodeOfCare",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "incoming-referral",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "condition",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "organization",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "care-manager",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EpisodeOfCare"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/EventDefinition/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a EventDefinition instance",
        "description": "VRead a EventDefinition instance",
        "operationId": "VReadEventDefinition",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EventDefinition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/EventDefinition/{id}": {
      "get": {
        "summary": "Read a EventDefinition instance",
        "description": "Read a EventDefinition instance",
        "operationId": "ReadEventDefinition",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EventDefinition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/EventDefinition": {
      "get": {
        "summary": "Search EventDefinitions",
        "description": "Search across all EventDefinition instances",
        "operationId": "SearchGetEventDefinition",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "The event definition publication date",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "successor",
            "description": "What resource is being referenced",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type-value",
            "description": "A use context type and value assigned to the event definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "jurisdiction",
            "description": "Intended jurisdiction for the event definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "derived-from",
            "description": "What resource is being referenced",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "description",
            "description": "The description of the event definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type",
            "description": "A type of use context assigned to the event definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "predecessor",
            "description": "What resource is being referenced",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "composed-of",
            "description": "What resource is being referenced",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "title",
            "description": "The human-friendly name of the event definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-quantity",
            "description": "A quantity- or range-valued use context assigned to the event definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "depends-on",
            "description": "What resource is being referenced",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "effective",
            "description": "The time during which the event definition is intended to be in use",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context",
            "description": "A use context assigned to the event definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type-quantity",
            "description": "A use context type and quantity- or range-based value assigned to the event definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "External identifier for the event definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "version",
            "description": "The business version of the event definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "url",
            "description": "The uri that identifies the event definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Computationally friendly name of the event definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "publisher",
            "description": "Name of the publisher of the event definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "topic",
            "description": "Topics associated with the module",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "status",
            "description": "The current status of the event definition",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EventDefinition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/EventDefinition/_search": {
      "post": {
        "summary": "Search EventDefinitions",
        "description": "Search across all EventDefinition instances",
        "operationId": "SearchPostEventDefinition",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "successor",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type-value",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "jurisdiction",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "derived-from",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "description",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "predecessor",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "composed-of",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "title",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "depends-on",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "effective",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "version",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "url",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "publisher",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "topic",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EventDefinition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Evidence/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a Evidence instance",
        "description": "VRead a Evidence instance",
        "operationId": "VReadEvidence",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Evidence"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Evidence/{id}": {
      "get": {
        "summary": "Read a Evidence instance",
        "description": "Read a Evidence instance",
        "operationId": "ReadEvidence",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Evidence"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Evidence": {
      "get": {
        "summary": "Search Evidences",
        "description": "Search across all Evidence instances",
        "operationId": "SearchGetEvidence",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "The evidence publication date",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "successor",
            "description": "What resource is being referenced",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type-value",
            "description": "A use context type and value assigned to the evidence",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "jurisdiction",
            "description": "Intended jurisdiction for the evidence",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "derived-from",
            "description": "What resource is being referenced",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "description",
            "description": "The description of the evidence",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type",
            "description": "A type of use context assigned to the evidence",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "predecessor",
            "description": "What resource is being referenced",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "composed-of",
            "description": "What resource is being referenced",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "title",
            "description": "The human-friendly name of the evidence",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-quantity",
            "description": "A quantity- or range-valued use context assigned to the evidence",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "depends-on",
            "description": "What resource is being referenced",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "effective",
            "description": "The time during which the evidence is intended to be in use",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context",
            "description": "A use context assigned to the evidence",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type-quantity",
            "description": "A use context type and quantity- or range-based value assigned to the evidence",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "External identifier for the evidence",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "version",
            "description": "The business version of the evidence",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "url",
            "description": "The uri that identifies the evidence",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Computationally friendly name of the evidence",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "publisher",
            "description": "Name of the publisher of the evidence",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "topic",
            "description": "Topics associated with the Evidence",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "status",
            "description": "The current status of the evidence",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Evidence"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Evidence/_search": {
      "post": {
        "summary": "Search Evidences",
        "description": "Search across all Evidence instances",
        "operationId": "SearchPostEvidence",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "successor",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type-value",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "jurisdiction",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "derived-from",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "description",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "predecessor",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "composed-of",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "title",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "depends-on",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "effective",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "version",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "url",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "publisher",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "topic",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Evidence"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/EvidenceVariable/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a EvidenceVariable instance",
        "description": "VRead a EvidenceVariable instance",
        "operationId": "VReadEvidenceVariable",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EvidenceVariable"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/EvidenceVariable/{id}": {
      "get": {
        "summary": "Read a EvidenceVariable instance",
        "description": "Read a EvidenceVariable instance",
        "operationId": "ReadEvidenceVariable",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EvidenceVariable"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/EvidenceVariable": {
      "get": {
        "summary": "Search EvidenceVariables",
        "description": "Search across all EvidenceVariable instances",
        "operationId": "SearchGetEvidenceVariable",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "The evidence variable publication date",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "successor",
            "description": "What resource is being referenced",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type-value",
            "description": "A use context type and value assigned to the evidence variable",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "jurisdiction",
            "description": "Intended jurisdiction for the evidence variable",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "derived-from",
            "description": "What resource is being referenced",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "description",
            "description": "The description of the evidence variable",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type",
            "description": "A type of use context assigned to the evidence variable",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "predecessor",
            "description": "What resource is being referenced",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "composed-of",
            "description": "What resource is being referenced",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "title",
            "description": "The human-friendly name of the evidence variable",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-quantity",
            "description": "A quantity- or range-valued use context assigned to the evidence variable",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "depends-on",
            "description": "What resource is being referenced",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "effective",
            "description": "The time during which the evidence variable is intended to be in use",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context",
            "description": "A use context assigned to the evidence variable",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type-quantity",
            "description": "A use context type and quantity- or range-based value assigned to the evidence variable",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "External identifier for the evidence variable",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "version",
            "description": "The business version of the evidence variable",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "url",
            "description": "The uri that identifies the evidence variable",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Computationally friendly name of the evidence variable",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "publisher",
            "description": "Name of the publisher of the evidence variable",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "topic",
            "description": "Topics associated with the EvidenceVariable",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "status",
            "description": "The current status of the evidence variable",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EvidenceVariable"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/EvidenceVariable/_search": {
      "post": {
        "summary": "Search EvidenceVariables",
        "description": "Search across all EvidenceVariable instances",
        "operationId": "SearchPostEvidenceVariable",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "successor",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type-value",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "jurisdiction",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "derived-from",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "description",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "predecessor",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "composed-of",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "title",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "depends-on",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "effective",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "version",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "url",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "publisher",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "topic",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EvidenceVariable"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ExampleScenario/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a ExampleScenario instance",
        "description": "VRead a ExampleScenario instance",
        "operationId": "VReadExampleScenario",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExampleScenario"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ExampleScenario/{id}": {
      "get": {
        "summary": "Read a ExampleScenario instance",
        "description": "Read a ExampleScenario instance",
        "operationId": "ReadExampleScenario",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExampleScenario"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ExampleScenario": {
      "get": {
        "summary": "Search ExampleScenarios",
        "description": "Search across all ExampleScenario instances",
        "operationId": "SearchGetExampleScenario",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "The example scenario publication date",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "External identifier for the example scenario",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type-value",
            "description": "A use context type and value assigned to the example scenario",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "jurisdiction",
            "description": "Intended jurisdiction for the example scenario",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "context-type",
            "description": "A type of use context assigned to the example scenario",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "version",
            "description": "The business version of the example scenario",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "url",
            "description": "The uri that identifies the example scenario",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-quantity",
            "description": "A quantity- or range-valued use context assigned to the example scenario",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context",
            "description": "A use context assigned to the example scenario",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Computationally friendly name of the example scenario",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "publisher",
            "description": "Name of the publisher of the example scenario",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "context-type-quantity",
            "description": "A use context type and quantity- or range-based value assigned to the example scenario",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "status",
            "description": "The current status of the example scenario",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExampleScenario"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ExampleScenario/_search": {
      "post": {
        "summary": "Search ExampleScenarios",
        "description": "Search across all ExampleScenario instances",
        "operationId": "SearchPostExampleScenario",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type-value",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "jurisdiction",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "version",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "url",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "publisher",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExampleScenario"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ExplanationOfBenefit/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a ExplanationOfBenefit instance",
        "description": "VRead a ExplanationOfBenefit instance",
        "operationId": "VReadExplanationOfBenefit",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExplanationOfBenefit"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ExplanationOfBenefit/{id}": {
      "get": {
        "summary": "Read a ExplanationOfBenefit instance",
        "description": "Read a ExplanationOfBenefit instance",
        "operationId": "ReadExplanationOfBenefit",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExplanationOfBenefit"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ExplanationOfBenefit": {
      "get": {
        "summary": "Search ExplanationOfBenefits",
        "description": "Search across all ExplanationOfBenefit instances",
        "operationId": "SearchGetExplanationOfBenefit",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "care-team",
            "description": "Member of the CareTeam",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "payee",
            "description": "The party receiving any payment for the Claim",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "provider",
            "description": "The reference to the provider",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "The reference to the patient",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "detail-udi",
            "description": "UDI associated with a line item detail product or service",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "claim",
            "description": "The reference to the claim",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "enterer",
            "description": "The party responsible for the entry of the Claim",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "procedure-udi",
            "description": "UDI associated with a procedure",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "item-udi",
            "description": "UDI associated with a line item product or service",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "coverage",
            "description": "The plan under which the claim was adjudicated",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "The business identifier of the Explanation of Benefit",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "created",
            "description": "The creation date for the EOB",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "encounter",
            "description": "Encounters associated with a billed line item",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "disposition",
            "description": "The contents of the disposition message",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "subdetail-udi",
            "description": "UDI associated with a line item detail subdetail product or service",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "facility",
            "description": "Facility responsible for the goods and services",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "status",
            "description": "Status of the instance",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExplanationOfBenefit"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ExplanationOfBenefit/_search": {
      "post": {
        "summary": "Search ExplanationOfBenefits",
        "description": "Search across all ExplanationOfBenefit instances",
        "operationId": "SearchPostExplanationOfBenefit",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "care-team",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "payee",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "provider",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "detail-udi",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "claim",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "enterer",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "procedure-udi",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "item-udi",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "coverage",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "created",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "encounter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "disposition",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "subdetail-udi",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "facility",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExplanationOfBenefit"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/FamilyMemberHistory/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a FamilyMemberHistory instance",
        "description": "VRead a FamilyMemberHistory instance",
        "operationId": "VReadFamilyMemberHistory",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FamilyMemberHistory"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/FamilyMemberHistory/{id}": {
      "get": {
        "summary": "Read a FamilyMemberHistory instance",
        "description": "Read a FamilyMemberHistory instance",
        "operationId": "ReadFamilyMemberHistory",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FamilyMemberHistory"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/FamilyMemberHistory": {
      "get": {
        "summary": "Search FamilyMemberHistorys",
        "description": "Search across all FamilyMemberHistory instances",
        "operationId": "SearchGetFamilyMemberHistory",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Date first version of the resource instance was recorded* [CarePlan](careplan.html): Time period plan covers* [CareTeam](careteam.html): Time period team covers* [ClinicalImpression](clinicalimpression.html): When the assessment was documented* [Composition](composition.html): Composition editing time* [Consent](consent.html): When this Consent was created or indexed* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report* [Encounter](encounter.html): A date within the period the Encounter lasted* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period* [FamilyMemberHistory](familymemberhistory.html): When history was recorded or last updated* [Flag](flag.html): Time period when flag is active* [Immunization](immunization.html): Vaccination  (non)-Administration Date* [List](list.html): When the list was prepared* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period* [Procedure](procedure.html): When the procedure was performed* [RiskAssessment](riskassessment.html): When was assessment made?* [SupplyRequest](supplyrequest.html): When the request was made",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "code",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance* [Condition](condition.html): Code for the condition* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered* [DiagnosticReport](diagnosticreport.html): The code for the report, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code* [List](list.html): What the purpose of this list is* [Medication](medication.html): Returns medications for a specific code* [MedicationAdministration](medicationadministration.html): Return administrations of this medication code* [MedicationDispense](medicationdispense.html): Returns dispenses of this medicine code* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication code* [MedicationStatement](medicationstatement.html): Return statements of this medication code* [Observation](observation.html): The code of the observation type* [Procedure](procedure.html): A code to identify a  procedure* [ServiceRequest](servicerequest.html): What is being requested/ordered",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "sex",
            "description": "A search by a sex code of a family member",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "instantiates-canonical",
            "description": "Instantiates FHIR protocol or definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "in": "query",
            "name": "instantiates-uri",
            "description": "Instantiates external protocol or definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "relationship",
            "description": "A search by a relationship type",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "status",
            "description": "partial | completed | entered-in-error | health-unknown",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FamilyMemberHistory"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/FamilyMemberHistory/_search": {
      "post": {
        "summary": "Search FamilyMemberHistorys",
        "description": "Search across all FamilyMemberHistory instances",
        "operationId": "SearchPostFamilyMemberHistory",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "code",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "sex",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "instantiates-canonical",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "instantiates-uri",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "relationship",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FamilyMemberHistory"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Flag/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a Flag instance",
        "description": "VRead a Flag instance",
        "operationId": "VReadFlag",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Flag"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Flag/{id}": {
      "get": {
        "summary": "Read a Flag instance",
        "description": "Read a Flag instance",
        "operationId": "ReadFlag",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Flag"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Flag": {
      "get": {
        "summary": "Search Flags",
        "description": "Search across all Flag instances",
        "operationId": "SearchGetFlag",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Date first version of the resource instance was recorded* [CarePlan](careplan.html): Time period plan covers* [CareTeam](careteam.html): Time period team covers* [ClinicalImpression](clinicalimpression.html): When the assessment was documented* [Composition](composition.html): Composition editing time* [Consent](consent.html): When this Consent was created or indexed* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report* [Encounter](encounter.html): A date within the period the Encounter lasted* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period* [FamilyMemberHistory](familymemberhistory.html): When history was recorded or last updated* [Flag](flag.html): Time period when flag is active* [Immunization](immunization.html): Vaccination  (non)-Administration Date* [List](list.html): When the list was prepared* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period* [Procedure](procedure.html): When the procedure was performed* [RiskAssessment](riskassessment.html): When was assessment made?* [SupplyRequest](supplyrequest.html): When the request was made",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "Business identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "author",
            "description": "Flag creator",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "subject",
            "description": "The identity of a subject to list flags for",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "encounter",
            "description": "Multiple Resources: * [Composition](composition.html): Context of the Composition* [DeviceRequest](devicerequest.html): Encounter during which request was created* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made* [DocumentReference](documentreference.html): Context of the document  content* [Flag](flag.html): Alert relevant during encounter* [List](list.html): Context in which list created* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier* [Observation](observation.html): Encounter related to the observation* [Procedure](procedure.html): Encounter created as part of* [RiskAssessment](riskassessment.html): Where was assessment performed?* [ServiceRequest](servicerequest.html): An encounter in which this request is made* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Flag"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Flag/_search": {
      "post": {
        "summary": "Search Flags",
        "description": "Search across all Flag instances",
        "operationId": "SearchPostFlag",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "author",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "subject",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "encounter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Flag"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Goal/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a Goal instance",
        "description": "VRead a Goal instance",
        "operationId": "VReadGoal",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Goal"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Goal/{id}": {
      "get": {
        "summary": "Read a Goal instance",
        "description": "Read a Goal instance",
        "operationId": "ReadGoal",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Goal"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Goal": {
      "get": {
        "summary": "Search Goals",
        "description": "Search across all Goal instances",
        "operationId": "SearchGetGoal",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "identifier",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "subject",
            "description": "Who this goal is intended for",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "start-date",
            "description": "When goal pursuit begins",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "lifecycle-status",
            "description": "proposed | planned | accepted | active | on-hold | completed | cancelled | entered-in-error | rejected",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "achievement-status",
            "description": "in-progress | improving | worsening | no-change | achieved | sustaining | not-achieved | no-progress | not-attainable",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "category",
            "description": "E.g. Treatment, dietary, behavioral, etc.",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "target-date",
            "description": "Reach goal on or before",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Goal"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Goal/_search": {
      "post": {
        "summary": "Search Goals",
        "description": "Search across all Goal instances",
        "operationId": "SearchPostGoal",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "subject",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "start-date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "lifecycle-status",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "achievement-status",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "category",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "target-date",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Goal"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/GraphDefinition/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a GraphDefinition instance",
        "description": "VRead a GraphDefinition instance",
        "operationId": "VReadGraphDefinition",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GraphDefinition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/GraphDefinition/{id}": {
      "get": {
        "summary": "Read a GraphDefinition instance",
        "description": "Read a GraphDefinition instance",
        "operationId": "ReadGraphDefinition",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GraphDefinition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/GraphDefinition": {
      "get": {
        "summary": "Search GraphDefinitions",
        "description": "Search across all GraphDefinition instances",
        "operationId": "SearchGetGraphDefinition",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The capability statement publication date* [CodeSystem](codesystem.html): The code system publication date* [CompartmentDefinition](compartmentdefinition.html): The compartment definition publication date* [ConceptMap](conceptmap.html): The concept map publication date* [GraphDefinition](graphdefinition.html): The graph definition publication date* [ImplementationGuide](implementationguide.html): The implementation guide publication date* [MessageDefinition](messagedefinition.html): The message definition publication date* [NamingSystem](namingsystem.html): The naming system publication date* [OperationDefinition](operationdefinition.html): The operation definition publication date* [SearchParameter](searchparameter.html): The search parameter publication date* [StructureDefinition](structuredefinition.html): The structure definition publication date* [StructureMap](structuremap.html): The structure map publication date* [TerminologyCapabilities](terminologycapabilities.html): The terminology capabilities publication date* [ValueSet](valueset.html): The value set publication date",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type-value",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A use context type and value assigned to the capability statement* [CodeSystem](codesystem.html): A use context type and value assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A use context type and value assigned to the compartment definition* [ConceptMap](conceptmap.html): A use context type and value assigned to the concept map* [GraphDefinition](graphdefinition.html): A use context type and value assigned to the graph definition* [ImplementationGuide](implementationguide.html): A use context type and value assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A use context type and value assigned to the message definition* [NamingSystem](namingsystem.html): A use context type and value assigned to the naming system* [OperationDefinition](operationdefinition.html): A use context type and value assigned to the operation definition* [SearchParameter](searchparameter.html): A use context type and value assigned to the search parameter* [StructureDefinition](structuredefinition.html): A use context type and value assigned to the structure definition* [StructureMap](structuremap.html): A use context type and value assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A use context type and value assigned to the terminology capabilities* [ValueSet](valueset.html): A use context type and value assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "jurisdiction",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Intended jurisdiction for the capability statement* [CodeSystem](codesystem.html): Intended jurisdiction for the code system* [ConceptMap](conceptmap.html): Intended jurisdiction for the concept map* [GraphDefinition](graphdefinition.html): Intended jurisdiction for the graph definition* [ImplementationGuide](implementationguide.html): Intended jurisdiction for the implementation guide* [MessageDefinition](messagedefinition.html): Intended jurisdiction for the message definition* [NamingSystem](namingsystem.html): Intended jurisdiction for the naming system* [OperationDefinition](operationdefinition.html): Intended jurisdiction for the operation definition* [SearchParameter](searchparameter.html): Intended jurisdiction for the search parameter* [StructureDefinition](structuredefinition.html): Intended jurisdiction for the structure definition* [StructureMap](structuremap.html): Intended jurisdiction for the structure map* [TerminologyCapabilities](terminologycapabilities.html): Intended jurisdiction for the terminology capabilities* [ValueSet](valueset.html): Intended jurisdiction for the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "start",
            "description": "Type of resource at which the graph starts",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "description",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The description of the capability statement* [CodeSystem](codesystem.html): The description of the code system* [CompartmentDefinition](compartmentdefinition.html): The description of the compartment definition* [ConceptMap](conceptmap.html): The description of the concept map* [GraphDefinition](graphdefinition.html): The description of the graph definition* [ImplementationGuide](implementationguide.html): The description of the implementation guide* [MessageDefinition](messagedefinition.html): The description of the message definition* [NamingSystem](namingsystem.html): The description of the naming system* [OperationDefinition](operationdefinition.html): The description of the operation definition* [SearchParameter](searchparameter.html): The description of the search parameter* [StructureDefinition](structuredefinition.html): The description of the structure definition* [StructureMap](structuremap.html): The description of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The description of the terminology capabilities* [ValueSet](valueset.html): The description of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A type of use context assigned to the capability statement* [CodeSystem](codesystem.html): A type of use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A type of use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A type of use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A type of use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A type of use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A type of use context assigned to the message definition* [NamingSystem](namingsystem.html): A type of use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A type of use context assigned to the operation definition* [SearchParameter](searchparameter.html): A type of use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A type of use context assigned to the structure definition* [StructureMap](structuremap.html): A type of use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A type of use context assigned to the terminology capabilities* [ValueSet](valueset.html): A type of use context assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "version",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The business version of the capability statement* [CodeSystem](codesystem.html): The business version of the code system* [CompartmentDefinition](compartmentdefinition.html): The business version of the compartment definition* [ConceptMap](conceptmap.html): The business version of the concept map* [GraphDefinition](graphdefinition.html): The business version of the graph definition* [ImplementationGuide](implementationguide.html): The business version of the implementation guide* [MessageDefinition](messagedefinition.html): The business version of the message definition* [OperationDefinition](operationdefinition.html): The business version of the operation definition* [SearchParameter](searchparameter.html): The business version of the search parameter* [StructureDefinition](structuredefinition.html): The business version of the structure definition* [StructureMap](structuremap.html): The business version of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The business version of the terminology capabilities* [ValueSet](valueset.html): The business version of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "url",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The uri that identifies the capability statement* [CodeSystem](codesystem.html): The uri that identifies the code system* [CompartmentDefinition](compartmentdefinition.html): The uri that identifies the compartment definition* [ConceptMap](conceptmap.html): The uri that identifies the concept map* [GraphDefinition](graphdefinition.html): The uri that identifies the graph definition* [ImplementationGuide](implementationguide.html): The uri that identifies the implementation guide* [MessageDefinition](messagedefinition.html): The uri that identifies the message definition* [OperationDefinition](operationdefinition.html): The uri that identifies the operation definition* [SearchParameter](searchparameter.html): The uri that identifies the search parameter* [StructureDefinition](structuredefinition.html): The uri that identifies the structure definition* [StructureMap](structuremap.html): The uri that identifies the structure map* [TerminologyCapabilities](terminologycapabilities.html): The uri that identifies the terminology capabilities* [ValueSet](valueset.html): The uri that identifies the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-quantity",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A quantity- or range-valued use context assigned to the capability statement* [CodeSystem](codesystem.html): A quantity- or range-valued use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A quantity- or range-valued use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A quantity- or range-valued use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A quantity- or range-valued use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A quantity- or range-valued use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A quantity- or range-valued use context assigned to the message definition* [NamingSystem](namingsystem.html): A quantity- or range-valued use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A quantity- or range-valued use context assigned to the operation definition* [SearchParameter](searchparameter.html): A quantity- or range-valued use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A quantity- or range-valued use context assigned to the structure definition* [StructureMap](structuremap.html): A quantity- or range-valued use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A quantity- or range-valued use context assigned to the terminology capabilities* [ValueSet](valueset.html): A quantity- or range-valued use context assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A use context assigned to the capability statement* [CodeSystem](codesystem.html): A use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A use context assigned to the message definition* [NamingSystem](namingsystem.html): A use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A use context assigned to the operation definition* [SearchParameter](searchparameter.html): A use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A use context assigned to the structure definition* [StructureMap](structuremap.html): A use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A use context assigned to the terminology capabilities* [ValueSet](valueset.html): A use context assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Computationally friendly name of the capability statement* [CodeSystem](codesystem.html): Computationally friendly name of the code system* [CompartmentDefinition](compartmentdefinition.html): Computationally friendly name of the compartment definition* [ConceptMap](conceptmap.html): Computationally friendly name of the concept map* [GraphDefinition](graphdefinition.html): Computationally friendly name of the graph definition* [ImplementationGuide](implementationguide.html): Computationally friendly name of the implementation guide* [MessageDefinition](messagedefinition.html): Computationally friendly name of the message definition* [NamingSystem](namingsystem.html): Computationally friendly name of the naming system* [OperationDefinition](operationdefinition.html): Computationally friendly name of the operation definition* [SearchParameter](searchparameter.html): Computationally friendly name of the search parameter* [StructureDefinition](structuredefinition.html): Computationally friendly name of the structure definition* [StructureMap](structuremap.html): Computationally friendly name of the structure map* [TerminologyCapabilities](terminologycapabilities.html): Computationally friendly name of the terminology capabilities* [ValueSet](valueset.html): Computationally friendly name of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "publisher",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Name of the publisher of the capability statement* [CodeSystem](codesystem.html): Name of the publisher of the code system* [CompartmentDefinition](compartmentdefinition.html): Name of the publisher of the compartment definition* [ConceptMap](conceptmap.html): Name of the publisher of the concept map* [GraphDefinition](graphdefinition.html): Name of the publisher of the graph definition* [ImplementationGuide](implementationguide.html): Name of the publisher of the implementation guide* [MessageDefinition](messagedefinition.html): Name of the publisher of the message definition* [NamingSystem](namingsystem.html): Name of the publisher of the naming system* [OperationDefinition](operationdefinition.html): Name of the publisher of the operation definition* [SearchParameter](searchparameter.html): Name of the publisher of the search parameter* [StructureDefinition](structuredefinition.html): Name of the publisher of the structure definition* [StructureMap](structuremap.html): Name of the publisher of the structure map* [TerminologyCapabilities](terminologycapabilities.html): Name of the publisher of the terminology capabilities* [ValueSet](valueset.html): Name of the publisher of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "context-type-quantity",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A use context type and quantity- or range-based value assigned to the capability statement* [CodeSystem](codesystem.html): A use context type and quantity- or range-based value assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A use context type and quantity- or range-based value assigned to the compartment definition* [ConceptMap](conceptmap.html): A use context type and quantity- or range-based value assigned to the concept map* [GraphDefinition](graphdefinition.html): A use context type and quantity- or range-based value assigned to the graph definition* [ImplementationGuide](implementationguide.html): A use context type and quantity- or range-based value assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A use context type and quantity- or range-based value assigned to the message definition* [NamingSystem](namingsystem.html): A use context type and quantity- or range-based value assigned to the naming system* [OperationDefinition](operationdefinition.html): A use context type and quantity- or range-based value assigned to the operation definition* [SearchParameter](searchparameter.html): A use context type and quantity- or range-based value assigned to the search parameter* [StructureDefinition](structuredefinition.html): A use context type and quantity- or range-based value assigned to the structure definition* [StructureMap](structuremap.html): A use context type and quantity- or range-based value assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A use context type and quantity- or range-based value assigned to the terminology capabilities* [ValueSet](valueset.html): A use context type and quantity- or range-based value assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "status",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The current status of the capability statement* [CodeSystem](codesystem.html): The current status of the code system* [CompartmentDefinition](compartmentdefinition.html): The current status of the compartment definition* [ConceptMap](conceptmap.html): The current status of the concept map* [GraphDefinition](graphdefinition.html): The current status of the graph definition* [ImplementationGuide](implementationguide.html): The current status of the implementation guide* [MessageDefinition](messagedefinition.html): The current status of the message definition* [NamingSystem](namingsystem.html): The current status of the naming system* [OperationDefinition](operationdefinition.html): The current status of the operation definition* [SearchParameter](searchparameter.html): The current status of the search parameter* [StructureDefinition](structuredefinition.html): The current status of the structure definition* [StructureMap](structuremap.html): The current status of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The current status of the terminology capabilities* [ValueSet](valueset.html): The current status of the value set",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GraphDefinition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/GraphDefinition/_search": {
      "post": {
        "summary": "Search GraphDefinitions",
        "description": "Search across all GraphDefinition instances",
        "operationId": "SearchPostGraphDefinition",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type-value",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "jurisdiction",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "start",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "description",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "version",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "url",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "publisher",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GraphDefinition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Group/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a Group instance",
        "description": "VRead a Group instance",
        "operationId": "VReadGroup",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Group/{id}": {
      "get": {
        "summary": "Read a Group instance",
        "description": "Read a Group instance",
        "operationId": "ReadGroup",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Group": {
      "get": {
        "summary": "Search Groups",
        "description": "Search across all Group instances",
        "operationId": "SearchGetGroup",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "actual",
            "description": "Descriptive or actual",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "Unique id",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "managing-entity",
            "description": "Entity that is the custodian of the Group's definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "code",
            "description": "The kind of resources contained",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "type",
            "description": "The type of resources the group contains",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "characteristic",
            "description": "Kind of characteristic",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "characteristic-value",
            "description": "A composite of both characteristic and value",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "member",
            "description": "Reference to the group member",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "in": "query",
            "name": "exclude",
            "description": "Group includes or excludes",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "value",
            "description": "Value held by characteristic",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Group/_search": {
      "post": {
        "summary": "Search Groups",
        "description": "Search across all Group instances",
        "operationId": "SearchPostGroup",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "actual",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "managing-entity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "code",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "characteristic",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "characteristic-value",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "member",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "exclude",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "value",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/GuidanceResponse/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a GuidanceResponse instance",
        "description": "VRead a GuidanceResponse instance",
        "operationId": "VReadGuidanceResponse",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GuidanceResponse"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/GuidanceResponse/{id}": {
      "get": {
        "summary": "Read a GuidanceResponse instance",
        "description": "Read a GuidanceResponse instance",
        "operationId": "ReadGuidanceResponse",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GuidanceResponse"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/GuidanceResponse": {
      "get": {
        "summary": "Search GuidanceResponses",
        "description": "Search across all GuidanceResponse instances",
        "operationId": "SearchGetGuidanceResponse",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "identifier",
            "description": "The identifier of the guidance response",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "request",
            "description": "The identifier of the request associated with the response",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "subject",
            "description": "The subject that the guidance response is about",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "The identity of a patient to search for guidance response results",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GuidanceResponse"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/GuidanceResponse/_search": {
      "post": {
        "summary": "Search GuidanceResponses",
        "description": "Search across all GuidanceResponse instances",
        "operationId": "SearchPostGuidanceResponse",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "request",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "subject",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GuidanceResponse"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/HealthcareService/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a HealthcareService instance",
        "description": "VRead a HealthcareService instance",
        "operationId": "VReadHealthcareService",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HealthcareService"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/HealthcareService/{id}": {
      "get": {
        "summary": "Read a HealthcareService instance",
        "description": "Read a HealthcareService instance",
        "operationId": "ReadHealthcareService",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HealthcareService"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/HealthcareService": {
      "get": {
        "summary": "Search HealthcareServices",
        "description": "Search across all HealthcareService instances",
        "operationId": "SearchGetHealthcareService",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "identifier",
            "description": "External identifiers for this item",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "specialty",
            "description": "The specialty of the service provided by this healthcare service",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "service-category",
            "description": "Service Category of the Healthcare Service",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "service-type",
            "description": "The type of service provided by this healthcare service",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "active",
            "description": "The Healthcare Service is currently marked as active",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "program",
            "description": "One of the Programs supported by this HealthcareService",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "characteristic",
            "description": "One of the HealthcareService's characteristics",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "endpoint",
            "description": "Technical endpoints providing access to electronic services operated for the healthcare service",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "coverage-area",
            "description": "Location(s) service is intended for/available to",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "organization",
            "description": "The organization that provides this Healthcare Service",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "name",
            "description": "A portion of the Healthcare service name",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "in": "query",
            "name": "location",
            "description": "The location of the Healthcare Service",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HealthcareService"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/HealthcareService/_search": {
      "post": {
        "summary": "Search HealthcareServices",
        "description": "Search across all HealthcareService instances",
        "operationId": "SearchPostHealthcareService",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "specialty",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "service-category",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "service-type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "active",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "program",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "characteristic",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "endpoint",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "coverage-area",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "organization",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "location",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HealthcareService"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ImagingStudy/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a ImagingStudy instance",
        "description": "VRead a ImagingStudy instance",
        "operationId": "VReadImagingStudy",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ImagingStudy"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ImagingStudy/{id}": {
      "get": {
        "summary": "Read a ImagingStudy instance",
        "description": "Read a ImagingStudy instance",
        "operationId": "ReadImagingStudy",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ImagingStudy"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ImagingStudy": {
      "get": {
        "summary": "Search ImagingStudys",
        "description": "Search across all ImagingStudy instances",
        "operationId": "SearchGetImagingStudy",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "reason",
            "description": "The reason for the study",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "dicom-class",
            "description": "The type of the instance",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "instance",
            "description": "SOP Instance UID for an instance",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "modality",
            "description": "The modality of the series",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "subject",
            "description": "Who the study is about",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "endpoint",
            "description": "The endpoint for the study or series",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "bodysite",
            "description": "The body site studied",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "performer",
            "description": "The person who performed the study",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "interpreter",
            "description": "Who interpreted the images",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "started",
            "description": "When the study was started",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "encounter",
            "description": "The context of the study",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "referrer",
            "description": "The referring physician",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "series",
            "description": "DICOM Series Instance UID for a series",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "basedon",
            "description": "The order for the image",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "status",
            "description": "The status of the study",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ImagingStudy"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ImagingStudy/_search": {
      "post": {
        "summary": "Search ImagingStudys",
        "description": "Search across all ImagingStudy instances",
        "operationId": "SearchPostImagingStudy",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "reason",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "dicom-class",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "instance",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "modality",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "subject",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "endpoint",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "bodysite",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "performer",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "interpreter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "started",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "encounter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "referrer",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "series",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "basedon",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ImagingStudy"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Immunization/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a Immunization instance",
        "description": "VRead a Immunization instance",
        "operationId": "VReadImmunization",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Immunization"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Immunization/{id}": {
      "get": {
        "summary": "Read a Immunization instance",
        "description": "Read a Immunization instance",
        "operationId": "ReadImmunization",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Immunization"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Immunization": {
      "get": {
        "summary": "Search Immunizations",
        "description": "Search across all Immunization instances",
        "operationId": "SearchGetImmunization",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Date first version of the resource instance was recorded* [CarePlan](careplan.html): Time period plan covers* [CareTeam](careteam.html): Time period team covers* [ClinicalImpression](clinicalimpression.html): When the assessment was documented* [Composition](composition.html): Composition editing time* [Consent](consent.html): When this Consent was created or indexed* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report* [Encounter](encounter.html): A date within the period the Encounter lasted* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period* [FamilyMemberHistory](familymemberhistory.html): When history was recorded or last updated* [Flag](flag.html): Time period when flag is active* [Immunization](immunization.html): Vaccination  (non)-Administration Date* [List](list.html): When the list was prepared* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period* [Procedure](procedure.html): When the procedure was performed* [RiskAssessment](riskassessment.html): When was assessment made?* [SupplyRequest](supplyrequest.html): When the request was made",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "lot-number",
            "description": "Vaccine Lot Number",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "status-reason",
            "description": "Reason why the vaccine was not administered",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "reason-code",
            "description": "Reason why the vaccine was administered",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "manufacturer",
            "description": "Vaccine Manufacturer",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "reaction-date",
            "description": "When reaction started",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "performer",
            "description": "The practitioner or organization who played a role in the vaccination",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "reaction",
            "description": "Additional information on reaction",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "target-disease",
            "description": "The target disease the dose is being administered against",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "series",
            "description": "The series being followed by the provider",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "vaccine-code",
            "description": "Vaccine Product Administered",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "reason-reference",
            "description": "Why immunization occurred",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "in": "query",
            "name": "location",
            "description": "The service delivery location or facility in which the vaccine was / was to be administered",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "status",
            "description": "Immunization event status",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Immunization"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Immunization/_search": {
      "post": {
        "summary": "Search Immunizations",
        "description": "Search across all Immunization instances",
        "operationId": "SearchPostImmunization",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "lot-number",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status-reason",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "reason-code",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "manufacturer",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "reaction-date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "performer",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "reaction",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "target-disease",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "series",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "vaccine-code",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "reason-reference",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "location",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Immunization"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ImmunizationEvaluation/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a ImmunizationEvaluation instance",
        "description": "VRead a ImmunizationEvaluation instance",
        "operationId": "VReadImmunizationEvaluation",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ImmunizationEvaluation"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ImmunizationEvaluation/{id}": {
      "get": {
        "summary": "Read a ImmunizationEvaluation instance",
        "description": "Read a ImmunizationEvaluation instance",
        "operationId": "ReadImmunizationEvaluation",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ImmunizationEvaluation"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ImmunizationEvaluation": {
      "get": {
        "summary": "Search ImmunizationEvaluations",
        "description": "Search across all ImmunizationEvaluation instances",
        "operationId": "SearchGetImmunizationEvaluation",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "Date the evaluation was generated",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "ID of the evaluation",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "dose-status",
            "description": "The status of the dose relative to published recommendations",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "immunization-event",
            "description": "The vaccine administration event being evaluated",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "target-disease",
            "description": "The vaccine preventable disease being evaluated against",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "The patient being evaluated",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "status",
            "description": "Immunization evaluation status",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ImmunizationEvaluation"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ImmunizationEvaluation/_search": {
      "post": {
        "summary": "Search ImmunizationEvaluations",
        "description": "Search across all ImmunizationEvaluation instances",
        "operationId": "SearchPostImmunizationEvaluation",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "dose-status",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "immunization-event",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "target-disease",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ImmunizationEvaluation"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ImmunizationRecommendation/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a ImmunizationRecommendation instance",
        "description": "VRead a ImmunizationRecommendation instance",
        "operationId": "VReadImmunizationRecommendation",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ImmunizationRecommendation"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ImmunizationRecommendation/{id}": {
      "get": {
        "summary": "Read a ImmunizationRecommendation instance",
        "description": "Read a ImmunizationRecommendation instance",
        "operationId": "ReadImmunizationRecommendation",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ImmunizationRecommendation"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ImmunizationRecommendation": {
      "get": {
        "summary": "Search ImmunizationRecommendations",
        "description": "Search across all ImmunizationRecommendation instances",
        "operationId": "SearchGetImmunizationRecommendation",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "Date recommendation(s) created",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "Business identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "vaccine-type",
            "description": "Vaccine  or vaccine group recommendation applies to",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "target-disease",
            "description": "Disease to be immunized against",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "Who this profile is for",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "in": "query",
            "name": "information",
            "description": "Patient observations supporting recommendation",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "support",
            "description": "Past immunizations supporting recommendation",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "status",
            "description": "Vaccine recommendation status",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ImmunizationRecommendation"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ImmunizationRecommendation/_search": {
      "post": {
        "summary": "Search ImmunizationRecommendations",
        "description": "Search across all ImmunizationRecommendation instances",
        "operationId": "SearchPostImmunizationRecommendation",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "vaccine-type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "target-disease",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "information",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "support",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ImmunizationRecommendation"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ImplementationGuide/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a ImplementationGuide instance",
        "description": "VRead a ImplementationGuide instance",
        "operationId": "VReadImplementationGuide",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ImplementationGuide"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ImplementationGuide/{id}": {
      "get": {
        "summary": "Read a ImplementationGuide instance",
        "description": "Read a ImplementationGuide instance",
        "operationId": "ReadImplementationGuide",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ImplementationGuide"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ImplementationGuide": {
      "get": {
        "summary": "Search ImplementationGuides",
        "description": "Search across all ImplementationGuide instances",
        "operationId": "SearchGetImplementationGuide",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The capability statement publication date* [CodeSystem](codesystem.html): The code system publication date* [CompartmentDefinition](compartmentdefinition.html): The compartment definition publication date* [ConceptMap](conceptmap.html): The concept map publication date* [GraphDefinition](graphdefinition.html): The graph definition publication date* [ImplementationGuide](implementationguide.html): The implementation guide publication date* [MessageDefinition](messagedefinition.html): The message definition publication date* [NamingSystem](namingsystem.html): The naming system publication date* [OperationDefinition](operationdefinition.html): The operation definition publication date* [SearchParameter](searchparameter.html): The search parameter publication date* [StructureDefinition](structuredefinition.html): The structure definition publication date* [StructureMap](structuremap.html): The structure map publication date* [TerminologyCapabilities](terminologycapabilities.html): The terminology capabilities publication date* [ValueSet](valueset.html): The value set publication date",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type-value",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A use context type and value assigned to the capability statement* [CodeSystem](codesystem.html): A use context type and value assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A use context type and value assigned to the compartment definition* [ConceptMap](conceptmap.html): A use context type and value assigned to the concept map* [GraphDefinition](graphdefinition.html): A use context type and value assigned to the graph definition* [ImplementationGuide](implementationguide.html): A use context type and value assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A use context type and value assigned to the message definition* [NamingSystem](namingsystem.html): A use context type and value assigned to the naming system* [OperationDefinition](operationdefinition.html): A use context type and value assigned to the operation definition* [SearchParameter](searchparameter.html): A use context type and value assigned to the search parameter* [StructureDefinition](structuredefinition.html): A use context type and value assigned to the structure definition* [StructureMap](structuremap.html): A use context type and value assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A use context type and value assigned to the terminology capabilities* [ValueSet](valueset.html): A use context type and value assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "jurisdiction",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Intended jurisdiction for the capability statement* [CodeSystem](codesystem.html): Intended jurisdiction for the code system* [ConceptMap](conceptmap.html): Intended jurisdiction for the concept map* [GraphDefinition](graphdefinition.html): Intended jurisdiction for the graph definition* [ImplementationGuide](implementationguide.html): Intended jurisdiction for the implementation guide* [MessageDefinition](messagedefinition.html): Intended jurisdiction for the message definition* [NamingSystem](namingsystem.html): Intended jurisdiction for the naming system* [OperationDefinition](operationdefinition.html): Intended jurisdiction for the operation definition* [SearchParameter](searchparameter.html): Intended jurisdiction for the search parameter* [StructureDefinition](structuredefinition.html): Intended jurisdiction for the structure definition* [StructureMap](structuremap.html): Intended jurisdiction for the structure map* [TerminologyCapabilities](terminologycapabilities.html): Intended jurisdiction for the terminology capabilities* [ValueSet](valueset.html): Intended jurisdiction for the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "description",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The description of the capability statement* [CodeSystem](codesystem.html): The description of the code system* [CompartmentDefinition](compartmentdefinition.html): The description of the compartment definition* [ConceptMap](conceptmap.html): The description of the concept map* [GraphDefinition](graphdefinition.html): The description of the graph definition* [ImplementationGuide](implementationguide.html): The description of the implementation guide* [MessageDefinition](messagedefinition.html): The description of the message definition* [NamingSystem](namingsystem.html): The description of the naming system* [OperationDefinition](operationdefinition.html): The description of the operation definition* [SearchParameter](searchparameter.html): The description of the search parameter* [StructureDefinition](structuredefinition.html): The description of the structure definition* [StructureMap](structuremap.html): The description of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The description of the terminology capabilities* [ValueSet](valueset.html): The description of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A type of use context assigned to the capability statement* [CodeSystem](codesystem.html): A type of use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A type of use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A type of use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A type of use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A type of use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A type of use context assigned to the message definition* [NamingSystem](namingsystem.html): A type of use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A type of use context assigned to the operation definition* [SearchParameter](searchparameter.html): A type of use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A type of use context assigned to the structure definition* [StructureMap](structuremap.html): A type of use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A type of use context assigned to the terminology capabilities* [ValueSet](valueset.html): A type of use context assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "experimental",
            "description": "For testing purposes, not real usage",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "global",
            "description": "Profile that all resources must conform to",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "title",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The human-friendly name of the capability statement* [CodeSystem](codesystem.html): The human-friendly name of the code system* [ConceptMap](conceptmap.html): The human-friendly name of the concept map* [ImplementationGuide](implementationguide.html): The human-friendly name of the implementation guide* [MessageDefinition](messagedefinition.html): The human-friendly name of the message definition* [OperationDefinition](operationdefinition.html): The human-friendly name of the operation definition* [StructureDefinition](structuredefinition.html): The human-friendly name of the structure definition* [StructureMap](structuremap.html): The human-friendly name of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The human-friendly name of the terminology capabilities* [ValueSet](valueset.html): The human-friendly name of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-quantity",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A quantity- or range-valued use context assigned to the capability statement* [CodeSystem](codesystem.html): A quantity- or range-valued use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A quantity- or range-valued use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A quantity- or range-valued use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A quantity- or range-valued use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A quantity- or range-valued use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A quantity- or range-valued use context assigned to the message definition* [NamingSystem](namingsystem.html): A quantity- or range-valued use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A quantity- or range-valued use context assigned to the operation definition* [SearchParameter](searchparameter.html): A quantity- or range-valued use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A quantity- or range-valued use context assigned to the structure definition* [StructureMap](structuremap.html): A quantity- or range-valued use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A quantity- or range-valued use context assigned to the terminology capabilities* [ValueSet](valueset.html): A quantity- or range-valued use context assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "depends-on",
            "description": "Identity of the IG that this depends on",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A use context assigned to the capability statement* [CodeSystem](codesystem.html): A use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A use context assigned to the message definition* [NamingSystem](namingsystem.html): A use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A use context assigned to the operation definition* [SearchParameter](searchparameter.html): A use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A use context assigned to the structure definition* [StructureMap](structuremap.html): A use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A use context assigned to the terminology capabilities* [ValueSet](valueset.html): A use context assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type-quantity",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A use context type and quantity- or range-based value assigned to the capability statement* [CodeSystem](codesystem.html): A use context type and quantity- or range-based value assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A use context type and quantity- or range-based value assigned to the compartment definition* [ConceptMap](conceptmap.html): A use context type and quantity- or range-based value assigned to the concept map* [GraphDefinition](graphdefinition.html): A use context type and quantity- or range-based value assigned to the graph definition* [ImplementationGuide](implementationguide.html): A use context type and quantity- or range-based value assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A use context type and quantity- or range-based value assigned to the message definition* [NamingSystem](namingsystem.html): A use context type and quantity- or range-based value assigned to the naming system* [OperationDefinition](operationdefinition.html): A use context type and quantity- or range-based value assigned to the operation definition* [SearchParameter](searchparameter.html): A use context type and quantity- or range-based value assigned to the search parameter* [StructureDefinition](structuredefinition.html): A use context type and quantity- or range-based value assigned to the structure definition* [StructureMap](structuremap.html): A use context type and quantity- or range-based value assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A use context type and quantity- or range-based value assigned to the terminology capabilities* [ValueSet](valueset.html): A use context type and quantity- or range-based value assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "resource",
            "description": "Location of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "version",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The business version of the capability statement* [CodeSystem](codesystem.html): The business version of the code system* [CompartmentDefinition](compartmentdefinition.html): The business version of the compartment definition* [ConceptMap](conceptmap.html): The business version of the concept map* [GraphDefinition](graphdefinition.html): The business version of the graph definition* [ImplementationGuide](implementationguide.html): The business version of the implementation guide* [MessageDefinition](messagedefinition.html): The business version of the message definition* [OperationDefinition](operationdefinition.html): The business version of the operation definition* [SearchParameter](searchparameter.html): The business version of the search parameter* [StructureDefinition](structuredefinition.html): The business version of the structure definition* [StructureMap](structuremap.html): The business version of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The business version of the terminology capabilities* [ValueSet](valueset.html): The business version of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "url",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The uri that identifies the capability statement* [CodeSystem](codesystem.html): The uri that identifies the code system* [CompartmentDefinition](compartmentdefinition.html): The uri that identifies the compartment definition* [ConceptMap](conceptmap.html): The uri that identifies the concept map* [GraphDefinition](graphdefinition.html): The uri that identifies the graph definition* [ImplementationGuide](implementationguide.html): The uri that identifies the implementation guide* [MessageDefinition](messagedefinition.html): The uri that identifies the message definition* [OperationDefinition](operationdefinition.html): The uri that identifies the operation definition* [SearchParameter](searchparameter.html): The uri that identifies the search parameter* [StructureDefinition](structuredefinition.html): The uri that identifies the structure definition* [StructureMap](structuremap.html): The uri that identifies the structure map* [TerminologyCapabilities](terminologycapabilities.html): The uri that identifies the terminology capabilities* [ValueSet](valueset.html): The uri that identifies the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Computationally friendly name of the capability statement* [CodeSystem](codesystem.html): Computationally friendly name of the code system* [CompartmentDefinition](compartmentdefinition.html): Computationally friendly name of the compartment definition* [ConceptMap](conceptmap.html): Computationally friendly name of the concept map* [GraphDefinition](graphdefinition.html): Computationally friendly name of the graph definition* [ImplementationGuide](implementationguide.html): Computationally friendly name of the implementation guide* [MessageDefinition](messagedefinition.html): Computationally friendly name of the message definition* [NamingSystem](namingsystem.html): Computationally friendly name of the naming system* [OperationDefinition](operationdefinition.html): Computationally friendly name of the operation definition* [SearchParameter](searchparameter.html): Computationally friendly name of the search parameter* [StructureDefinition](structuredefinition.html): Computationally friendly name of the structure definition* [StructureMap](structuremap.html): Computationally friendly name of the structure map* [TerminologyCapabilities](terminologycapabilities.html): Computationally friendly name of the terminology capabilities* [ValueSet](valueset.html): Computationally friendly name of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "publisher",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Name of the publisher of the capability statement* [CodeSystem](codesystem.html): Name of the publisher of the code system* [CompartmentDefinition](compartmentdefinition.html): Name of the publisher of the compartment definition* [ConceptMap](conceptmap.html): Name of the publisher of the concept map* [GraphDefinition](graphdefinition.html): Name of the publisher of the graph definition* [ImplementationGuide](implementationguide.html): Name of the publisher of the implementation guide* [MessageDefinition](messagedefinition.html): Name of the publisher of the message definition* [NamingSystem](namingsystem.html): Name of the publisher of the naming system* [OperationDefinition](operationdefinition.html): Name of the publisher of the operation definition* [SearchParameter](searchparameter.html): Name of the publisher of the search parameter* [StructureDefinition](structuredefinition.html): Name of the publisher of the structure definition* [StructureMap](structuremap.html): Name of the publisher of the structure map* [TerminologyCapabilities](terminologycapabilities.html): Name of the publisher of the terminology capabilities* [ValueSet](valueset.html): Name of the publisher of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "status",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The current status of the capability statement* [CodeSystem](codesystem.html): The current status of the code system* [CompartmentDefinition](compartmentdefinition.html): The current status of the compartment definition* [ConceptMap](conceptmap.html): The current status of the concept map* [GraphDefinition](graphdefinition.html): The current status of the graph definition* [ImplementationGuide](implementationguide.html): The current status of the implementation guide* [MessageDefinition](messagedefinition.html): The current status of the message definition* [NamingSystem](namingsystem.html): The current status of the naming system* [OperationDefinition](operationdefinition.html): The current status of the operation definition* [SearchParameter](searchparameter.html): The current status of the search parameter* [StructureDefinition](structuredefinition.html): The current status of the structure definition* [StructureMap](structuremap.html): The current status of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The current status of the terminology capabilities* [ValueSet](valueset.html): The current status of the value set",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ImplementationGuide"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ImplementationGuide/_search": {
      "post": {
        "summary": "Search ImplementationGuides",
        "description": "Search across all ImplementationGuide instances",
        "operationId": "SearchPostImplementationGuide",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type-value",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "jurisdiction",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "description",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "experimental",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "global",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "title",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "depends-on",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "resource",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "version",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "url",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "publisher",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ImplementationGuide"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/InsurancePlan/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a InsurancePlan instance",
        "description": "VRead a InsurancePlan instance",
        "operationId": "VReadInsurancePlan",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InsurancePlan"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/InsurancePlan/{id}": {
      "get": {
        "summary": "Read a InsurancePlan instance",
        "description": "Read a InsurancePlan instance",
        "operationId": "ReadInsurancePlan",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InsurancePlan"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/InsurancePlan": {
      "get": {
        "summary": "Search InsurancePlans",
        "description": "Search across all InsurancePlan instances",
        "operationId": "SearchGetInsurancePlan",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "identifier",
            "description": "Any identifier for the organization (not the accreditation issuer's identifier)",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "address",
            "description": "A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "address-state",
            "description": "A state specified in an address",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "owned-by",
            "description": "An organization of which this organization forms a part",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "type",
            "description": "A code for the type of organization",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "address-postalcode",
            "description": "A postal code specified in an address",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "address-country",
            "description": "A country specified in an address",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "administered-by",
            "description": "Product administrator",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "endpoint",
            "description": "Technical endpoint",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "phonetic",
            "description": "A portion of the organization's name using some kind of phonetic matching algorithm",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "address-use",
            "description": "A use code specified in an address",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "name",
            "description": "A portion of the organization's name or alias",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "address-city",
            "description": "A city specified in an address",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "status",
            "description": "Is the Organization record active",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InsurancePlan"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/InsurancePlan/_search": {
      "post": {
        "summary": "Search InsurancePlans",
        "description": "Search across all InsurancePlan instances",
        "operationId": "SearchPostInsurancePlan",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "address",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "address-state",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "owned-by",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "address-postalcode",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "address-country",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "administered-by",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "endpoint",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "phonetic",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "address-use",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "address-city",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InsurancePlan"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Invoice/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a Invoice instance",
        "description": "VRead a Invoice instance",
        "operationId": "VReadInvoice",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Invoice"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Invoice/{id}": {
      "get": {
        "summary": "Read a Invoice instance",
        "description": "Read a Invoice instance",
        "operationId": "ReadInvoice",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Invoice"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Invoice": {
      "get": {
        "summary": "Search Invoices",
        "description": "Search across all Invoice instances",
        "operationId": "SearchGetInvoice",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "Invoice date / posting date",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "Business Identifier for item",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "totalgross",
            "description": "Gross total of this Invoice",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "participant-role",
            "description": "Type of involvement in creation of this Invoice",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "subject",
            "description": "Recipient(s) of goods and services",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "type",
            "description": "Type of Invoice",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "issuer",
            "description": "Issuing Organization of Invoice",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "participant",
            "description": "Individual who was involved",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "totalnet",
            "description": "Net total of this Invoice",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "Recipient(s) of goods and services",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "recipient",
            "description": "Recipient of this invoice",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "account",
            "description": "Account that is being balanced",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "status",
            "description": "draft | issued | balanced | cancelled | entered-in-error",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Invoice"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Invoice/_search": {
      "post": {
        "summary": "Search Invoices",
        "description": "Search across all Invoice instances",
        "operationId": "SearchPostInvoice",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "totalgross",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "participant-role",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "subject",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "issuer",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "participant",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "totalnet",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "recipient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "account",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Invoice"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Library/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a Library instance",
        "description": "VRead a Library instance",
        "operationId": "VReadLibrary",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Library"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Library/{id}": {
      "get": {
        "summary": "Read a Library instance",
        "description": "Read a Library instance",
        "operationId": "ReadLibrary",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Library"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Library": {
      "get": {
        "summary": "Search Librarys",
        "description": "Search across all Library instances",
        "operationId": "SearchGetLibrary",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "The library publication date",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "successor",
            "description": "What resource is being referenced",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type-value",
            "description": "A use context type and value assigned to the library",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "jurisdiction",
            "description": "Intended jurisdiction for the library",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "derived-from",
            "description": "What resource is being referenced",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "description",
            "description": "The description of the library",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type",
            "description": "A type of use context assigned to the library",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "predecessor",
            "description": "What resource is being referenced",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "composed-of",
            "description": "What resource is being referenced",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "title",
            "description": "The human-friendly name of the library",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "type",
            "description": "The type of the library (e.g. logic-library, model-definition, asset-collection, module-definition)",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-quantity",
            "description": "A quantity- or range-valued use context assigned to the library",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "depends-on",
            "description": "What resource is being referenced",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "effective",
            "description": "The time during which the library is intended to be in use",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context",
            "description": "A use context assigned to the library",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "content-type",
            "description": "The type of content in the library (e.g. text/cql)",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type-quantity",
            "description": "A use context type and quantity- or range-based value assigned to the library",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "External identifier for the library",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "version",
            "description": "The business version of the library",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "url",
            "description": "The uri that identifies the library",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Computationally friendly name of the library",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "publisher",
            "description": "Name of the publisher of the library",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "topic",
            "description": "Topics associated with the module",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "status",
            "description": "The current status of the library",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Library"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Library/_search": {
      "post": {
        "summary": "Search Librarys",
        "description": "Search across all Library instances",
        "operationId": "SearchPostLibrary",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "successor",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type-value",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "jurisdiction",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "derived-from",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "description",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "predecessor",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "composed-of",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "title",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "depends-on",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "effective",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "content-type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "version",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "url",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "publisher",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "topic",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Library"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Linkage/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a Linkage instance",
        "description": "VRead a Linkage instance",
        "operationId": "VReadLinkage",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Linkage"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Linkage/{id}": {
      "get": {
        "summary": "Read a Linkage instance",
        "description": "Read a Linkage instance",
        "operationId": "ReadLinkage",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Linkage"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Linkage": {
      "get": {
        "summary": "Search Linkages",
        "description": "Search across all Linkage instances",
        "operationId": "SearchGetLinkage",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "item",
            "description": "Matches on any item in the Linkage",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "author",
            "description": "Author of the Linkage",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "source",
            "description": "Matches on any item in the Linkage with a type of 'source'",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Linkage"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Linkage/_search": {
      "post": {
        "summary": "Search Linkages",
        "description": "Search across all Linkage instances",
        "operationId": "SearchPostLinkage",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "item",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "author",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Linkage"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/List/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a List instance",
        "description": "VRead a List instance",
        "operationId": "VReadList",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/List"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/List/{id}": {
      "get": {
        "summary": "Read a List instance",
        "description": "Read a List instance",
        "operationId": "ReadList",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/List"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/List": {
      "get": {
        "summary": "Search Lists",
        "description": "Search across all List instances",
        "operationId": "SearchGetList",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Date first version of the resource instance was recorded* [CarePlan](careplan.html): Time period plan covers* [CareTeam](careteam.html): Time period team covers* [ClinicalImpression](clinicalimpression.html): When the assessment was documented* [Composition](composition.html): Composition editing time* [Consent](consent.html): When this Consent was created or indexed* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report* [Encounter](encounter.html): A date within the period the Encounter lasted* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period* [FamilyMemberHistory](familymemberhistory.html): When history was recorded or last updated* [Flag](flag.html): Time period when flag is active* [Immunization](immunization.html): Vaccination  (non)-Administration Date* [List](list.html): When the list was prepared* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period* [Procedure](procedure.html): When the procedure was performed* [RiskAssessment](riskassessment.html): When was assessment made?* [SupplyRequest](supplyrequest.html): When the request was made",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "empty-reason",
            "description": "Why list is empty",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "item",
            "description": "Actual entry",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "code",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance* [Condition](condition.html): Code for the condition* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered* [DiagnosticReport](diagnosticreport.html): The code for the report, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code* [List](list.html): What the purpose of this list is* [Medication](medication.html): Returns medications for a specific code* [MedicationAdministration](medicationadministration.html): Return administrations of this medication code* [MedicationDispense](medicationdispense.html): Returns dispenses of this medicine code* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication code* [MedicationStatement](medicationstatement.html): Return statements of this medication code* [Observation](observation.html): The code of the observation type* [Procedure](procedure.html): A code to identify a  procedure* [ServiceRequest](servicerequest.html): What is being requested/ordered",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "notes",
            "description": "The annotation  - text content (as markdown)",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "subject",
            "description": "If all resources have the same subject",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "encounter",
            "description": "Multiple Resources: * [Composition](composition.html): Context of the Composition* [DeviceRequest](devicerequest.html): Encounter during which request was created* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made* [DocumentReference](documentreference.html): Context of the document  content* [Flag](flag.html): Alert relevant during encounter* [List](list.html): Context in which list created* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier* [Observation](observation.html): Encounter related to the observation* [Procedure](procedure.html): Encounter created as part of* [RiskAssessment](riskassessment.html): Where was assessment performed?* [ServiceRequest](servicerequest.html): An encounter in which this request is made* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "source",
            "description": "Who and/or what defined the list contents (aka Author)",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "title",
            "description": "Descriptive name for the list",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "status",
            "description": "current | retired | entered-in-error",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/List"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/List/_search": {
      "post": {
        "summary": "Search Lists",
        "description": "Search across all List instances",
        "operationId": "SearchPostList",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "empty-reason",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "item",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "code",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "notes",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "subject",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "encounter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "title",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/List"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Location/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a Location instance",
        "description": "VRead a Location instance",
        "operationId": "VReadLocation",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Location"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Location/{id}": {
      "get": {
        "summary": "Read a Location instance",
        "description": "Read a Location instance",
        "operationId": "ReadLocation",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Location"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Location": {
      "get": {
        "summary": "Search Locations",
        "description": "Search across all Location instances",
        "operationId": "SearchGetLocation",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "address-state",
            "description": "A state specified in an address",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "operational-status",
            "description": "Searches for locations (typically bed/room) that have an operational status (e.g. contaminated, housekeeping)",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "type",
            "description": "A code for the type of location",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "address-country",
            "description": "A country specified in an address",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "endpoint",
            "description": "Technical endpoints providing access to services operated for the location",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "near",
            "description": "Search for locations where the location.position is near to, or within a specified distance of, the provided coordinates expressed as [latitude]|[longitude]|[distance]|[units] (using the WGS84 datum, see notes).If the units are omitted, then kms should be assumed. If the distance is omitted, then the server can use its own discretion as to what distances should be considered near (and units are irrelevant)Servers may search using various techniques that might have differing accuracies, depending on implementation efficiency.Requires the near-distance parameter to be provided also",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "address-city",
            "description": "A city specified in an address",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "An identifier for the location",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "partof",
            "description": "A location of which this location is a part",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "address",
            "description": "A (part of the) address of the location",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "address-postalcode",
            "description": "A postal code specified in an address",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "organization",
            "description": "Searches for locations that are managed by the provided organization",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "address-use",
            "description": "A use code specified in an address",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "name",
            "description": "A portion of the location's name or alias",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "status",
            "description": "Searches for locations with a specific kind of status",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Location"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Location/_search": {
      "post": {
        "summary": "Search Locations",
        "description": "Search across all Location instances",
        "operationId": "SearchPostLocation",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "address-state",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "operational-status",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "address-country",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "endpoint",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "near",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "address-city",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "partof",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "address",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "address-postalcode",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "organization",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "address-use",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Location"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Measure/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a Measure instance",
        "description": "VRead a Measure instance",
        "operationId": "VReadMeasure",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Measure"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Measure/{id}": {
      "get": {
        "summary": "Read a Measure instance",
        "description": "Read a Measure instance",
        "operationId": "ReadMeasure",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Measure"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Measure": {
      "get": {
        "summary": "Search Measures",
        "description": "Search across all Measure instances",
        "operationId": "SearchGetMeasure",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "The measure publication date",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "successor",
            "description": "What resource is being referenced",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type-value",
            "description": "A use context type and value assigned to the measure",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "jurisdiction",
            "description": "Intended jurisdiction for the measure",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "derived-from",
            "description": "What resource is being referenced",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "description",
            "description": "The description of the measure",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type",
            "description": "A type of use context assigned to the measure",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "predecessor",
            "description": "What resource is being referenced",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "composed-of",
            "description": "What resource is being referenced",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "title",
            "description": "The human-friendly name of the measure",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-quantity",
            "description": "A quantity- or range-valued use context assigned to the measure",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "depends-on",
            "description": "What resource is being referenced",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "effective",
            "description": "The time during which the measure is intended to be in use",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context",
            "description": "A use context assigned to the measure",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type-quantity",
            "description": "A use context type and quantity- or range-based value assigned to the measure",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "External identifier for the measure",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "version",
            "description": "The business version of the measure",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "url",
            "description": "The uri that identifies the measure",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Computationally friendly name of the measure",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "publisher",
            "description": "Name of the publisher of the measure",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "topic",
            "description": "Topics associated with the measure",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "status",
            "description": "The current status of the measure",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Measure"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Measure/_search": {
      "post": {
        "summary": "Search Measures",
        "description": "Search across all Measure instances",
        "operationId": "SearchPostMeasure",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "successor",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type-value",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "jurisdiction",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "derived-from",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "description",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "predecessor",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "composed-of",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "title",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "depends-on",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "effective",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "version",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "url",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "publisher",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "topic",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Measure"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MeasureReport/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a MeasureReport instance",
        "description": "VRead a MeasureReport instance",
        "operationId": "VReadMeasureReport",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MeasureReport"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MeasureReport/{id}": {
      "get": {
        "summary": "Read a MeasureReport instance",
        "description": "Read a MeasureReport instance",
        "operationId": "ReadMeasureReport",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MeasureReport"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MeasureReport": {
      "get": {
        "summary": "Search MeasureReports",
        "description": "Search across all MeasureReport instances",
        "operationId": "SearchGetMeasureReport",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "The date of the measure report",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "External identifier of the measure report to be returned",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "period",
            "description": "The period of the measure report",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "subject",
            "description": "The identity of a subject to search for individual measure report results for",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "reporter",
            "description": "The reporter to return measure report results for",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "measure",
            "description": "The measure to return measure report results for",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "The identity of a patient to search for individual measure report results for",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "evaluated-resource",
            "description": "An evaluated resource referenced by the measure report",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "status",
            "description": "The status of the measure report",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MeasureReport"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MeasureReport/_search": {
      "post": {
        "summary": "Search MeasureReports",
        "description": "Search across all MeasureReport instances",
        "operationId": "SearchPostMeasureReport",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "period",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "subject",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "reporter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "measure",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "evaluated-resource",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MeasureReport"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Media/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a Media instance",
        "description": "VRead a Media instance",
        "operationId": "VReadMedia",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Media"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Media/{id}": {
      "get": {
        "summary": "Read a Media instance",
        "description": "Read a Media instance",
        "operationId": "ReadMedia",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Media"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Media": {
      "get": {
        "summary": "Search Medias",
        "description": "Search across all Media instances",
        "operationId": "SearchGetMedia",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "identifier",
            "description": "Identifier(s) for the image",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "modality",
            "description": "The type of acquisition equipment/process",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "created",
            "description": "When Media was collected",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "subject",
            "description": "Who/What this Media is a record of",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "encounter",
            "description": "Encounter associated with media",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "type",
            "description": "Classification of media as image, video, or audio",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "operator",
            "description": "The person who generated the image",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "site",
            "description": "Observed body part",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "view",
            "description": "Imaging view, e.g. Lateral or Antero-posterior",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "based-on",
            "description": "Procedure that caused this media to be created",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "Who/What this Media is a record of",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "device",
            "description": "Observing Device",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "status",
            "description": "preparation | in-progress | not-done | on-hold | stopped | completed | entered-in-error | unknown",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Media"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Media/_search": {
      "post": {
        "summary": "Search Medias",
        "description": "Search across all Media instances",
        "operationId": "SearchPostMedia",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "modality",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "created",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "subject",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "encounter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "operator",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "site",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "view",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "based-on",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "device",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Media"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Medication/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a Medication instance",
        "description": "VRead a Medication instance",
        "operationId": "VReadMedication",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Medication"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Medication/{id}": {
      "get": {
        "summary": "Read a Medication instance",
        "description": "Read a Medication instance",
        "operationId": "ReadMedication",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Medication"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Medication": {
      "get": {
        "summary": "Search Medications",
        "description": "Search across all Medication instances",
        "operationId": "SearchGetMedication",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "identifier",
            "description": "Returns medications with this external identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "code",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance* [Condition](condition.html): Code for the condition* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered* [DiagnosticReport](diagnosticreport.html): The code for the report, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code* [List](list.html): What the purpose of this list is* [Medication](medication.html): Returns medications for a specific code* [MedicationAdministration](medicationadministration.html): Return administrations of this medication code* [MedicationDispense](medicationdispense.html): Returns dispenses of this medicine code* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication code* [MedicationStatement](medicationstatement.html): Return statements of this medication code* [Observation](observation.html): The code of the observation type* [Procedure](procedure.html): A code to identify a  procedure* [ServiceRequest](servicerequest.html): What is being requested/ordered",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "ingredient",
            "description": "Returns medications for this ingredient reference",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "lot-number",
            "description": "Returns medications in a batch with this lot number",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "manufacturer",
            "description": "Returns medications made or sold for this manufacturer",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "ingredient-code",
            "description": "Returns medications for this ingredient code",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "form",
            "description": "Returns medications for a specific dose form",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "expiration-date",
            "description": "Returns medications in a batch with this expiration date",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "status",
            "description": "Returns medications for this status",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Medication"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Medication/_search": {
      "post": {
        "summary": "Search Medications",
        "description": "Search across all Medication instances",
        "operationId": "SearchPostMedication",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "code",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ingredient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "lot-number",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "manufacturer",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ingredient-code",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "form",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "expiration-date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Medication"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicationAdministration/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a MedicationAdministration instance",
        "description": "VRead a MedicationAdministration instance",
        "operationId": "VReadMedicationAdministration",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicationAdministration"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicationAdministration/{id}": {
      "get": {
        "summary": "Read a MedicationAdministration instance",
        "description": "Read a MedicationAdministration instance",
        "operationId": "ReadMedicationAdministration",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicationAdministration"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicationAdministration": {
      "get": {
        "summary": "Search MedicationAdministrations",
        "description": "Search across all MedicationAdministration instances",
        "operationId": "SearchGetMedicationAdministration",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "identifier",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "request",
            "description": "The identity of a request to list administrations from",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "code",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance* [Condition](condition.html): Code for the condition* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered* [DiagnosticReport](diagnosticreport.html): The code for the report, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code* [List](list.html): What the purpose of this list is* [Medication](medication.html): Returns medications for a specific code* [MedicationAdministration](medicationadministration.html): Return administrations of this medication code* [MedicationDispense](medicationdispense.html): Returns dispenses of this medicine code* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication code* [MedicationStatement](medicationstatement.html): Return statements of this medication code* [Observation](observation.html): The code of the observation type* [Procedure](procedure.html): A code to identify a  procedure* [ServiceRequest](servicerequest.html): What is being requested/ordered",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "performer",
            "description": "The identity of the individual who administered the medication",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "subject",
            "description": "The identity of the individual or group to list administrations for",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "medication",
            "description": "Multiple Resources: * [MedicationAdministration](medicationadministration.html): Return administrations of this medication resource* [MedicationDispense](medicationdispense.html): Returns dispenses of this medicine resource* [MedicationRequest](medicationrequest.html): Return prescriptions for this medication reference* [MedicationStatement](medicationstatement.html): Return statements of this medication reference",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "reason-given",
            "description": "Reasons for administering the medication",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "effective-time",
            "description": "Date administration happened (or did not happen)",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context",
            "description": "Return administrations that share this encounter or episode of care",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "reason-not-given",
            "description": "Reasons for not administering the medication",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "device",
            "description": "Return administrations with this administration device identity",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "status",
            "description": "Multiple Resources: * [MedicationAdministration](medicationadministration.html): MedicationAdministration event status (for example one of active/paused/completed/nullified)* [MedicationDispense](medicationdispense.html): Returns dispenses with a specified dispense status* [MedicationRequest](medicationrequest.html): Status of the prescription* [MedicationStatement](medicationstatement.html): Return statements that match the given status",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicationAdministration"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicationAdministration/_search": {
      "post": {
        "summary": "Search MedicationAdministrations",
        "description": "Search across all MedicationAdministration instances",
        "operationId": "SearchPostMedicationAdministration",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "request",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "code",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "performer",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "subject",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "medication",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "reason-given",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "effective-time",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "reason-not-given",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "device",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicationAdministration"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicationDispense/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a MedicationDispense instance",
        "description": "VRead a MedicationDispense instance",
        "operationId": "VReadMedicationDispense",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicationDispense"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicationDispense/{id}": {
      "get": {
        "summary": "Read a MedicationDispense instance",
        "description": "Read a MedicationDispense instance",
        "operationId": "ReadMedicationDispense",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicationDispense"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicationDispense": {
      "get": {
        "summary": "Search MedicationDispenses",
        "description": "Search across all MedicationDispense instances",
        "operationId": "SearchGetMedicationDispense",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "code",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance* [Condition](condition.html): Code for the condition* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered* [DiagnosticReport](diagnosticreport.html): The code for the report, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code* [List](list.html): What the purpose of this list is* [Medication](medication.html): Returns medications for a specific code* [MedicationAdministration](medicationadministration.html): Return administrations of this medication code* [MedicationDispense](medicationdispense.html): Returns dispenses of this medicine code* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication code* [MedicationStatement](medicationstatement.html): Return statements of this medication code* [Observation](observation.html): The code of the observation type* [Procedure](procedure.html): A code to identify a  procedure* [ServiceRequest](servicerequest.html): What is being requested/ordered",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "subject",
            "description": "The identity of a patient for whom to list dispenses",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "destination",
            "description": "Returns dispenses that should be sent to a specific destination",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "type",
            "description": "Returns dispenses of a specific type",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context",
            "description": "Returns dispenses with a specific context (episode or episode of care)",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "performer",
            "description": "Returns dispenses performed by a specific individual",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "receiver",
            "description": "The identity of a receiver to list dispenses for",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "medication",
            "description": "Multiple Resources: * [MedicationAdministration](medicationadministration.html): Return administrations of this medication resource* [MedicationDispense](medicationdispense.html): Returns dispenses of this medicine resource* [MedicationRequest](medicationrequest.html): Return prescriptions for this medication reference* [MedicationStatement](medicationstatement.html): Return statements of this medication reference",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "responsibleparty",
            "description": "Returns dispenses with the specified responsible party",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "whenhandedover",
            "description": "Returns dispenses handed over on this date",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "whenprepared",
            "description": "Returns dispenses prepared on this date",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "prescription",
            "description": "Multiple Resources: * [MedicationDispense](medicationdispense.html): The identity of a prescription to list dispenses from",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "status",
            "description": "Multiple Resources: * [MedicationAdministration](medicationadministration.html): MedicationAdministration event status (for example one of active/paused/completed/nullified)* [MedicationDispense](medicationdispense.html): Returns dispenses with a specified dispense status* [MedicationRequest](medicationrequest.html): Status of the prescription* [MedicationStatement](medicationstatement.html): Return statements that match the given status",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicationDispense"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicationDispense/_search": {
      "post": {
        "summary": "Search MedicationDispenses",
        "description": "Search across all MedicationDispense instances",
        "operationId": "SearchPostMedicationDispense",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "code",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "subject",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "destination",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "performer",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "receiver",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "medication",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "responsibleparty",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "whenhandedover",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "whenprepared",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "prescription",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicationDispense"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicationKnowledge/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a MedicationKnowledge instance",
        "description": "VRead a MedicationKnowledge instance",
        "operationId": "VReadMedicationKnowledge",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicationKnowledge"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicationKnowledge/{id}": {
      "get": {
        "summary": "Read a MedicationKnowledge instance",
        "description": "Read a MedicationKnowledge instance",
        "operationId": "ReadMedicationKnowledge",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicationKnowledge"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicationKnowledge": {
      "get": {
        "summary": "Search MedicationKnowledges",
        "description": "Search across all MedicationKnowledge instances",
        "operationId": "SearchGetMedicationKnowledge",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "code",
            "description": "Code that identifies this medication",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "ingredient",
            "description": "Medication(s) or substance(s) contained in the medication",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "doseform",
            "description": "powder | tablets | capsule +",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "classification-type",
            "description": "The type of category for the medication (for example, therapeutic classification, therapeutic sub-classification)",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "monograph-type",
            "description": "The category of medication document",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "classification",
            "description": "Specific category assigned to the medication",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "manufacturer",
            "description": "Manufacturer of the item",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "ingredient-code",
            "description": "Medication(s) or substance(s) contained in the medication",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "source-cost",
            "description": "The source or owner for the price information",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "monitoring-program-name",
            "description": "Name of the reviewing program",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "monograph",
            "description": "Associated documentation about the medication",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "in": "query",
            "name": "monitoring-program-type",
            "description": "Type of program under which the medication is monitored",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "status",
            "description": "active | inactive | entered-in-error",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicationKnowledge"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicationKnowledge/_search": {
      "post": {
        "summary": "Search MedicationKnowledges",
        "description": "Search across all MedicationKnowledge instances",
        "operationId": "SearchPostMedicationKnowledge",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "code",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ingredient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "doseform",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "classification-type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "monograph-type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "classification",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "manufacturer",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ingredient-code",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "source-cost",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "monitoring-program-name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "monograph",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "monitoring-program-type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicationKnowledge"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicationRequest/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a MedicationRequest instance",
        "description": "VRead a MedicationRequest instance",
        "operationId": "VReadMedicationRequest",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicationRequest"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicationRequest/{id}": {
      "get": {
        "summary": "Read a MedicationRequest instance",
        "description": "Read a MedicationRequest instance",
        "operationId": "ReadMedicationRequest",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicationRequest"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicationRequest": {
      "get": {
        "summary": "Search MedicationRequests",
        "description": "Search across all MedicationRequest instances",
        "operationId": "SearchGetMedicationRequest",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "Multiple Resources: * [MedicationRequest](medicationrequest.html): Returns medication request to be administered on a specific date",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "code",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance* [Condition](condition.html): Code for the condition* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered* [DiagnosticReport](diagnosticreport.html): The code for the report, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code* [List](list.html): What the purpose of this list is* [Medication](medication.html): Returns medications for a specific code* [MedicationAdministration](medicationadministration.html): Return administrations of this medication code* [MedicationDispense](medicationdispense.html): Returns dispenses of this medicine code* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication code* [MedicationStatement](medicationstatement.html): Return statements of this medication code* [Observation](observation.html): The code of the observation type* [Procedure](procedure.html): A code to identify a  procedure* [ServiceRequest](servicerequest.html): What is being requested/ordered",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "authoredon",
            "description": "Return prescriptions written on this date",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "subject",
            "description": "The identity of a patient to list orders  for",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "intended-performer",
            "description": "Returns the intended performer of the administration of the medication request",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "intended-performertype",
            "description": "Returns requests for a specific type of performer",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "requester",
            "description": "Returns prescriptions prescribed by this prescriber",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "intended-dispenser",
            "description": "Returns prescriptions intended to be dispensed by this Organization",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "medication",
            "description": "Multiple Resources: * [MedicationAdministration](medicationadministration.html): Return administrations of this medication resource* [MedicationDispense](medicationdispense.html): Returns dispenses of this medicine resource* [MedicationRequest](medicationrequest.html): Return prescriptions for this medication reference* [MedicationStatement](medicationstatement.html): Return statements of this medication reference",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "encounter",
            "description": "Multiple Resources: * [MedicationRequest](medicationrequest.html): Return prescriptions with this encounter identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "priority",
            "description": "Returns prescriptions with different priorities",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "intent",
            "description": "Returns prescriptions with different intents",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "category",
            "description": "Returns prescriptions with different categories",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "status",
            "description": "Multiple Resources: * [MedicationAdministration](medicationadministration.html): MedicationAdministration event status (for example one of active/paused/completed/nullified)* [MedicationDispense](medicationdispense.html): Returns dispenses with a specified dispense status* [MedicationRequest](medicationrequest.html): Status of the prescription* [MedicationStatement](medicationstatement.html): Return statements that match the given status",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicationRequest"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicationRequest/_search": {
      "post": {
        "summary": "Search MedicationRequests",
        "description": "Search across all MedicationRequest instances",
        "operationId": "SearchPostMedicationRequest",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "code",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "authoredon",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "subject",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "intended-performer",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "intended-performertype",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "requester",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "intended-dispenser",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "medication",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "encounter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "priority",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "intent",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "category",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicationRequest"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicationStatement/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a MedicationStatement instance",
        "description": "VRead a MedicationStatement instance",
        "operationId": "VReadMedicationStatement",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicationStatement"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicationStatement/{id}": {
      "get": {
        "summary": "Read a MedicationStatement instance",
        "description": "Read a MedicationStatement instance",
        "operationId": "ReadMedicationStatement",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicationStatement"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicationStatement": {
      "get": {
        "summary": "Search MedicationStatements",
        "description": "Search across all MedicationStatement instances",
        "operationId": "SearchGetMedicationStatement",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "identifier",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "code",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance* [Condition](condition.html): Code for the condition* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered* [DiagnosticReport](diagnosticreport.html): The code for the report, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code* [List](list.html): What the purpose of this list is* [Medication](medication.html): Returns medications for a specific code* [MedicationAdministration](medicationadministration.html): Return administrations of this medication code* [MedicationDispense](medicationdispense.html): Returns dispenses of this medicine code* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication code* [MedicationStatement](medicationstatement.html): Return statements of this medication code* [Observation](observation.html): The code of the observation type* [Procedure](procedure.html): A code to identify a  procedure* [ServiceRequest](servicerequest.html): What is being requested/ordered",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "subject",
            "description": "The identity of a patient, animal or group to list statements for",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "medication",
            "description": "Multiple Resources: * [MedicationAdministration](medicationadministration.html): Return administrations of this medication resource* [MedicationDispense](medicationdispense.html): Returns dispenses of this medicine resource* [MedicationRequest](medicationrequest.html): Return prescriptions for this medication reference* [MedicationStatement](medicationstatement.html): Return statements of this medication reference",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "part-of",
            "description": "Returns statements that are part of another event.",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "source",
            "description": "Who or where the information in the statement came from",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "effective",
            "description": "Date when patient was taking (or not taking) the medication",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context",
            "description": "Returns statements for a specific context (episode or episode of Care).",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "category",
            "description": "Returns statements of this category of medicationstatement",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "status",
            "description": "Multiple Resources: * [MedicationAdministration](medicationadministration.html): MedicationAdministration event status (for example one of active/paused/completed/nullified)* [MedicationDispense](medicationdispense.html): Returns dispenses with a specified dispense status* [MedicationRequest](medicationrequest.html): Status of the prescription* [MedicationStatement](medicationstatement.html): Return statements that match the given status",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicationStatement"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicationStatement/_search": {
      "post": {
        "summary": "Search MedicationStatements",
        "description": "Search across all MedicationStatement instances",
        "operationId": "SearchPostMedicationStatement",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "code",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "subject",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "medication",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "part-of",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "effective",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "category",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicationStatement"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicinalProduct/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a MedicinalProduct instance",
        "description": "VRead a MedicinalProduct instance",
        "operationId": "VReadMedicinalProduct",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicinalProduct"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicinalProduct/{id}": {
      "get": {
        "summary": "Read a MedicinalProduct instance",
        "description": "Read a MedicinalProduct instance",
        "operationId": "ReadMedicinalProduct",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicinalProduct"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicinalProduct": {
      "get": {
        "summary": "Search MedicinalProducts",
        "description": "Search across all MedicinalProduct instances",
        "operationId": "SearchGetMedicinalProduct",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "identifier",
            "description": "Business identifier for this product. Could be an MPID",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "name-language",
            "description": "Language code for this name",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "name",
            "description": "The full product name",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicinalProduct"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicinalProduct/_search": {
      "post": {
        "summary": "Search MedicinalProducts",
        "description": "Search across all MedicinalProduct instances",
        "operationId": "SearchPostMedicinalProduct",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "name-language",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicinalProduct"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicinalProductAuthorization/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a MedicinalProductAuthorization instance",
        "description": "VRead a MedicinalProductAuthorization instance",
        "operationId": "VReadMedicinalProductAuthorization",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicinalProductAuthorization"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicinalProductAuthorization/{id}": {
      "get": {
        "summary": "Read a MedicinalProductAuthorization instance",
        "description": "Read a MedicinalProductAuthorization instance",
        "operationId": "ReadMedicinalProductAuthorization",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicinalProductAuthorization"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicinalProductAuthorization": {
      "get": {
        "summary": "Search MedicinalProductAuthorizations",
        "description": "Search across all MedicinalProductAuthorization instances",
        "operationId": "SearchGetMedicinalProductAuthorization",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "country",
            "description": "The country in which the marketing authorization has been granted",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "Business identifier for the marketing authorization, as assigned by a regulator",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "subject",
            "description": "The medicinal product that is being authorized",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "holder",
            "description": "Marketing Authorization Holder",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "status",
            "description": "The status of the marketing authorization",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicinalProductAuthorization"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicinalProductAuthorization/_search": {
      "post": {
        "summary": "Search MedicinalProductAuthorizations",
        "description": "Search across all MedicinalProductAuthorization instances",
        "operationId": "SearchPostMedicinalProductAuthorization",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "country",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "subject",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "holder",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicinalProductAuthorization"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicinalProductContraindication/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a MedicinalProductContraindication instance",
        "description": "VRead a MedicinalProductContraindication instance",
        "operationId": "VReadMedicinalProductContraindication",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicinalProductContraindication"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicinalProductContraindication/{id}": {
      "get": {
        "summary": "Read a MedicinalProductContraindication instance",
        "description": "Read a MedicinalProductContraindication instance",
        "operationId": "ReadMedicinalProductContraindication",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicinalProductContraindication"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicinalProductContraindication": {
      "get": {
        "summary": "Search MedicinalProductContraindications",
        "description": "Search across all MedicinalProductContraindication instances",
        "operationId": "SearchGetMedicinalProductContraindication",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "subject",
            "description": "The medication for which this is an contraindication",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicinalProductContraindication"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicinalProductContraindication/_search": {
      "post": {
        "summary": "Search MedicinalProductContraindications",
        "description": "Search across all MedicinalProductContraindication instances",
        "operationId": "SearchPostMedicinalProductContraindication",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "subject",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicinalProductContraindication"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicinalProductIndication/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a MedicinalProductIndication instance",
        "description": "VRead a MedicinalProductIndication instance",
        "operationId": "VReadMedicinalProductIndication",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicinalProductIndication"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicinalProductIndication/{id}": {
      "get": {
        "summary": "Read a MedicinalProductIndication instance",
        "description": "Read a MedicinalProductIndication instance",
        "operationId": "ReadMedicinalProductIndication",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicinalProductIndication"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicinalProductIndication": {
      "get": {
        "summary": "Search MedicinalProductIndications",
        "description": "Search across all MedicinalProductIndication instances",
        "operationId": "SearchGetMedicinalProductIndication",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "subject",
            "description": "The medication for which this is an indication",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicinalProductIndication"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicinalProductIndication/_search": {
      "post": {
        "summary": "Search MedicinalProductIndications",
        "description": "Search across all MedicinalProductIndication instances",
        "operationId": "SearchPostMedicinalProductIndication",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "subject",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicinalProductIndication"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicinalProductIngredient/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a MedicinalProductIngredient instance",
        "description": "VRead a MedicinalProductIngredient instance",
        "operationId": "VReadMedicinalProductIngredient",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicinalProductIngredient"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicinalProductIngredient/{id}": {
      "get": {
        "summary": "Read a MedicinalProductIngredient instance",
        "description": "Read a MedicinalProductIngredient instance",
        "operationId": "ReadMedicinalProductIngredient",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicinalProductIngredient"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicinalProductIngredient": {
      "get": {
        "summary": "Search MedicinalProductIngredients",
        "description": "Search across all MedicinalProductIngredient instances",
        "operationId": "SearchGetMedicinalProductIngredient",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicinalProductIngredient"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicinalProductIngredient/_search": {
      "post": {
        "summary": "Search MedicinalProductIngredients",
        "description": "Search across all MedicinalProductIngredient instances",
        "operationId": "SearchPostMedicinalProductIngredient",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicinalProductIngredient"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicinalProductInteraction/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a MedicinalProductInteraction instance",
        "description": "VRead a MedicinalProductInteraction instance",
        "operationId": "VReadMedicinalProductInteraction",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicinalProductInteraction"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicinalProductInteraction/{id}": {
      "get": {
        "summary": "Read a MedicinalProductInteraction instance",
        "description": "Read a MedicinalProductInteraction instance",
        "operationId": "ReadMedicinalProductInteraction",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicinalProductInteraction"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicinalProductInteraction": {
      "get": {
        "summary": "Search MedicinalProductInteractions",
        "description": "Search across all MedicinalProductInteraction instances",
        "operationId": "SearchGetMedicinalProductInteraction",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "subject",
            "description": "The medication for which this is an interaction",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicinalProductInteraction"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicinalProductInteraction/_search": {
      "post": {
        "summary": "Search MedicinalProductInteractions",
        "description": "Search across all MedicinalProductInteraction instances",
        "operationId": "SearchPostMedicinalProductInteraction",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "subject",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicinalProductInteraction"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicinalProductManufactured/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a MedicinalProductManufactured instance",
        "description": "VRead a MedicinalProductManufactured instance",
        "operationId": "VReadMedicinalProductManufactured",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicinalProductManufactured"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicinalProductManufactured/{id}": {
      "get": {
        "summary": "Read a MedicinalProductManufactured instance",
        "description": "Read a MedicinalProductManufactured instance",
        "operationId": "ReadMedicinalProductManufactured",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicinalProductManufactured"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicinalProductManufactured": {
      "get": {
        "summary": "Search MedicinalProductManufactureds",
        "description": "Search across all MedicinalProductManufactured instances",
        "operationId": "SearchGetMedicinalProductManufactured",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicinalProductManufactured"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicinalProductManufactured/_search": {
      "post": {
        "summary": "Search MedicinalProductManufactureds",
        "description": "Search across all MedicinalProductManufactured instances",
        "operationId": "SearchPostMedicinalProductManufactured",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicinalProductManufactured"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicinalProductPackaged/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a MedicinalProductPackaged instance",
        "description": "VRead a MedicinalProductPackaged instance",
        "operationId": "VReadMedicinalProductPackaged",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicinalProductPackaged"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicinalProductPackaged/{id}": {
      "get": {
        "summary": "Read a MedicinalProductPackaged instance",
        "description": "Read a MedicinalProductPackaged instance",
        "operationId": "ReadMedicinalProductPackaged",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicinalProductPackaged"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicinalProductPackaged": {
      "get": {
        "summary": "Search MedicinalProductPackageds",
        "description": "Search across all MedicinalProductPackaged instances",
        "operationId": "SearchGetMedicinalProductPackaged",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "identifier",
            "description": "Unique identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "subject",
            "description": "The product with this is a pack for",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicinalProductPackaged"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicinalProductPackaged/_search": {
      "post": {
        "summary": "Search MedicinalProductPackageds",
        "description": "Search across all MedicinalProductPackaged instances",
        "operationId": "SearchPostMedicinalProductPackaged",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "subject",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicinalProductPackaged"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicinalProductPharmaceutical/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a MedicinalProductPharmaceutical instance",
        "description": "VRead a MedicinalProductPharmaceutical instance",
        "operationId": "VReadMedicinalProductPharmaceutical",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicinalProductPharmaceutical"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicinalProductPharmaceutical/{id}": {
      "get": {
        "summary": "Read a MedicinalProductPharmaceutical instance",
        "description": "Read a MedicinalProductPharmaceutical instance",
        "operationId": "ReadMedicinalProductPharmaceutical",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicinalProductPharmaceutical"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicinalProductPharmaceutical": {
      "get": {
        "summary": "Search MedicinalProductPharmaceuticals",
        "description": "Search across all MedicinalProductPharmaceutical instances",
        "operationId": "SearchGetMedicinalProductPharmaceutical",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "identifier",
            "description": "An identifier for the pharmaceutical medicinal product",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "route",
            "description": "Coded expression for the route",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "target-species",
            "description": "Coded expression for the species",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicinalProductPharmaceutical"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicinalProductPharmaceutical/_search": {
      "post": {
        "summary": "Search MedicinalProductPharmaceuticals",
        "description": "Search across all MedicinalProductPharmaceutical instances",
        "operationId": "SearchPostMedicinalProductPharmaceutical",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "route",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "target-species",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicinalProductPharmaceutical"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicinalProductUndesirableEffect/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a MedicinalProductUndesirableEffect instance",
        "description": "VRead a MedicinalProductUndesirableEffect instance",
        "operationId": "VReadMedicinalProductUndesirableEffect",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicinalProductUndesirableEffect"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicinalProductUndesirableEffect/{id}": {
      "get": {
        "summary": "Read a MedicinalProductUndesirableEffect instance",
        "description": "Read a MedicinalProductUndesirableEffect instance",
        "operationId": "ReadMedicinalProductUndesirableEffect",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicinalProductUndesirableEffect"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicinalProductUndesirableEffect": {
      "get": {
        "summary": "Search MedicinalProductUndesirableEffects",
        "description": "Search across all MedicinalProductUndesirableEffect instances",
        "operationId": "SearchGetMedicinalProductUndesirableEffect",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "subject",
            "description": "The medication for which this is an undesirable effect",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicinalProductUndesirableEffect"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MedicinalProductUndesirableEffect/_search": {
      "post": {
        "summary": "Search MedicinalProductUndesirableEffects",
        "description": "Search across all MedicinalProductUndesirableEffect instances",
        "operationId": "SearchPostMedicinalProductUndesirableEffect",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "subject",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MedicinalProductUndesirableEffect"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MessageDefinition/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a MessageDefinition instance",
        "description": "VRead a MessageDefinition instance",
        "operationId": "VReadMessageDefinition",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MessageDefinition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MessageDefinition/{id}": {
      "get": {
        "summary": "Read a MessageDefinition instance",
        "description": "Read a MessageDefinition instance",
        "operationId": "ReadMessageDefinition",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MessageDefinition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MessageDefinition": {
      "get": {
        "summary": "Search MessageDefinitions",
        "description": "Search across all MessageDefinition instances",
        "operationId": "SearchGetMessageDefinition",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The capability statement publication date* [CodeSystem](codesystem.html): The code system publication date* [CompartmentDefinition](compartmentdefinition.html): The compartment definition publication date* [ConceptMap](conceptmap.html): The concept map publication date* [GraphDefinition](graphdefinition.html): The graph definition publication date* [ImplementationGuide](implementationguide.html): The implementation guide publication date* [MessageDefinition](messagedefinition.html): The message definition publication date* [NamingSystem](namingsystem.html): The naming system publication date* [OperationDefinition](operationdefinition.html): The operation definition publication date* [SearchParameter](searchparameter.html): The search parameter publication date* [StructureDefinition](structuredefinition.html): The structure definition publication date* [StructureMap](structuremap.html): The structure map publication date* [TerminologyCapabilities](terminologycapabilities.html): The terminology capabilities publication date* [ValueSet](valueset.html): The value set publication date",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "parent",
            "description": "A resource that is the parent of the definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type-value",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A use context type and value assigned to the capability statement* [CodeSystem](codesystem.html): A use context type and value assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A use context type and value assigned to the compartment definition* [ConceptMap](conceptmap.html): A use context type and value assigned to the concept map* [GraphDefinition](graphdefinition.html): A use context type and value assigned to the graph definition* [ImplementationGuide](implementationguide.html): A use context type and value assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A use context type and value assigned to the message definition* [NamingSystem](namingsystem.html): A use context type and value assigned to the naming system* [OperationDefinition](operationdefinition.html): A use context type and value assigned to the operation definition* [SearchParameter](searchparameter.html): A use context type and value assigned to the search parameter* [StructureDefinition](structuredefinition.html): A use context type and value assigned to the structure definition* [StructureMap](structuremap.html): A use context type and value assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A use context type and value assigned to the terminology capabilities* [ValueSet](valueset.html): A use context type and value assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "jurisdiction",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Intended jurisdiction for the capability statement* [CodeSystem](codesystem.html): Intended jurisdiction for the code system* [ConceptMap](conceptmap.html): Intended jurisdiction for the concept map* [GraphDefinition](graphdefinition.html): Intended jurisdiction for the graph definition* [ImplementationGuide](implementationguide.html): Intended jurisdiction for the implementation guide* [MessageDefinition](messagedefinition.html): Intended jurisdiction for the message definition* [NamingSystem](namingsystem.html): Intended jurisdiction for the naming system* [OperationDefinition](operationdefinition.html): Intended jurisdiction for the operation definition* [SearchParameter](searchparameter.html): Intended jurisdiction for the search parameter* [StructureDefinition](structuredefinition.html): Intended jurisdiction for the structure definition* [StructureMap](structuremap.html): Intended jurisdiction for the structure map* [TerminologyCapabilities](terminologycapabilities.html): Intended jurisdiction for the terminology capabilities* [ValueSet](valueset.html): Intended jurisdiction for the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "description",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The description of the capability statement* [CodeSystem](codesystem.html): The description of the code system* [CompartmentDefinition](compartmentdefinition.html): The description of the compartment definition* [ConceptMap](conceptmap.html): The description of the concept map* [GraphDefinition](graphdefinition.html): The description of the graph definition* [ImplementationGuide](implementationguide.html): The description of the implementation guide* [MessageDefinition](messagedefinition.html): The description of the message definition* [NamingSystem](namingsystem.html): The description of the naming system* [OperationDefinition](operationdefinition.html): The description of the operation definition* [SearchParameter](searchparameter.html): The description of the search parameter* [StructureDefinition](structuredefinition.html): The description of the structure definition* [StructureMap](structuremap.html): The description of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The description of the terminology capabilities* [ValueSet](valueset.html): The description of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "focus",
            "description": "A resource that is a permitted focus of the message",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A type of use context assigned to the capability statement* [CodeSystem](codesystem.html): A type of use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A type of use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A type of use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A type of use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A type of use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A type of use context assigned to the message definition* [NamingSystem](namingsystem.html): A type of use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A type of use context assigned to the operation definition* [SearchParameter](searchparameter.html): A type of use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A type of use context assigned to the structure definition* [StructureMap](structuremap.html): A type of use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A type of use context assigned to the terminology capabilities* [ValueSet](valueset.html): A type of use context assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "title",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The human-friendly name of the capability statement* [CodeSystem](codesystem.html): The human-friendly name of the code system* [ConceptMap](conceptmap.html): The human-friendly name of the concept map* [ImplementationGuide](implementationguide.html): The human-friendly name of the implementation guide* [MessageDefinition](messagedefinition.html): The human-friendly name of the message definition* [OperationDefinition](operationdefinition.html): The human-friendly name of the operation definition* [StructureDefinition](structuredefinition.html): The human-friendly name of the structure definition* [StructureMap](structuremap.html): The human-friendly name of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The human-friendly name of the terminology capabilities* [ValueSet](valueset.html): The human-friendly name of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-quantity",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A quantity- or range-valued use context assigned to the capability statement* [CodeSystem](codesystem.html): A quantity- or range-valued use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A quantity- or range-valued use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A quantity- or range-valued use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A quantity- or range-valued use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A quantity- or range-valued use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A quantity- or range-valued use context assigned to the message definition* [NamingSystem](namingsystem.html): A quantity- or range-valued use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A quantity- or range-valued use context assigned to the operation definition* [SearchParameter](searchparameter.html): A quantity- or range-valued use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A quantity- or range-valued use context assigned to the structure definition* [StructureMap](structuremap.html): A quantity- or range-valued use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A quantity- or range-valued use context assigned to the terminology capabilities* [ValueSet](valueset.html): A quantity- or range-valued use context assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A use context assigned to the capability statement* [CodeSystem](codesystem.html): A use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A use context assigned to the message definition* [NamingSystem](namingsystem.html): A use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A use context assigned to the operation definition* [SearchParameter](searchparameter.html): A use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A use context assigned to the structure definition* [StructureMap](structuremap.html): A use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A use context assigned to the terminology capabilities* [ValueSet](valueset.html): A use context assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "event",
            "description": "The event that triggers the message or link to the event definition.",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type-quantity",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A use context type and quantity- or range-based value assigned to the capability statement* [CodeSystem](codesystem.html): A use context type and quantity- or range-based value assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A use context type and quantity- or range-based value assigned to the compartment definition* [ConceptMap](conceptmap.html): A use context type and quantity- or range-based value assigned to the concept map* [GraphDefinition](graphdefinition.html): A use context type and quantity- or range-based value assigned to the graph definition* [ImplementationGuide](implementationguide.html): A use context type and quantity- or range-based value assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A use context type and quantity- or range-based value assigned to the message definition* [NamingSystem](namingsystem.html): A use context type and quantity- or range-based value assigned to the naming system* [OperationDefinition](operationdefinition.html): A use context type and quantity- or range-based value assigned to the operation definition* [SearchParameter](searchparameter.html): A use context type and quantity- or range-based value assigned to the search parameter* [StructureDefinition](structuredefinition.html): A use context type and quantity- or range-based value assigned to the structure definition* [StructureMap](structuremap.html): A use context type and quantity- or range-based value assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A use context type and quantity- or range-based value assigned to the terminology capabilities* [ValueSet](valueset.html): A use context type and quantity- or range-based value assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "Multiple Resources: * [CodeSystem](codesystem.html): External identifier for the code system* [ConceptMap](conceptmap.html): External identifier for the concept map* [MessageDefinition](messagedefinition.html): External identifier for the message definition* [StructureDefinition](structuredefinition.html): External identifier for the structure definition* [StructureMap](structuremap.html): External identifier for the structure map* [ValueSet](valueset.html): External identifier for the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "version",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The business version of the capability statement* [CodeSystem](codesystem.html): The business version of the code system* [CompartmentDefinition](compartmentdefinition.html): The business version of the compartment definition* [ConceptMap](conceptmap.html): The business version of the concept map* [GraphDefinition](graphdefinition.html): The business version of the graph definition* [ImplementationGuide](implementationguide.html): The business version of the implementation guide* [MessageDefinition](messagedefinition.html): The business version of the message definition* [OperationDefinition](operationdefinition.html): The business version of the operation definition* [SearchParameter](searchparameter.html): The business version of the search parameter* [StructureDefinition](structuredefinition.html): The business version of the structure definition* [StructureMap](structuremap.html): The business version of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The business version of the terminology capabilities* [ValueSet](valueset.html): The business version of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "url",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The uri that identifies the capability statement* [CodeSystem](codesystem.html): The uri that identifies the code system* [CompartmentDefinition](compartmentdefinition.html): The uri that identifies the compartment definition* [ConceptMap](conceptmap.html): The uri that identifies the concept map* [GraphDefinition](graphdefinition.html): The uri that identifies the graph definition* [ImplementationGuide](implementationguide.html): The uri that identifies the implementation guide* [MessageDefinition](messagedefinition.html): The uri that identifies the message definition* [OperationDefinition](operationdefinition.html): The uri that identifies the operation definition* [SearchParameter](searchparameter.html): The uri that identifies the search parameter* [StructureDefinition](structuredefinition.html): The uri that identifies the structure definition* [StructureMap](structuremap.html): The uri that identifies the structure map* [TerminologyCapabilities](terminologycapabilities.html): The uri that identifies the terminology capabilities* [ValueSet](valueset.html): The uri that identifies the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Computationally friendly name of the capability statement* [CodeSystem](codesystem.html): Computationally friendly name of the code system* [CompartmentDefinition](compartmentdefinition.html): Computationally friendly name of the compartment definition* [ConceptMap](conceptmap.html): Computationally friendly name of the concept map* [GraphDefinition](graphdefinition.html): Computationally friendly name of the graph definition* [ImplementationGuide](implementationguide.html): Computationally friendly name of the implementation guide* [MessageDefinition](messagedefinition.html): Computationally friendly name of the message definition* [NamingSystem](namingsystem.html): Computationally friendly name of the naming system* [OperationDefinition](operationdefinition.html): Computationally friendly name of the operation definition* [SearchParameter](searchparameter.html): Computationally friendly name of the search parameter* [StructureDefinition](structuredefinition.html): Computationally friendly name of the structure definition* [StructureMap](structuremap.html): Computationally friendly name of the structure map* [TerminologyCapabilities](terminologycapabilities.html): Computationally friendly name of the terminology capabilities* [ValueSet](valueset.html): Computationally friendly name of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "publisher",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Name of the publisher of the capability statement* [CodeSystem](codesystem.html): Name of the publisher of the code system* [CompartmentDefinition](compartmentdefinition.html): Name of the publisher of the compartment definition* [ConceptMap](conceptmap.html): Name of the publisher of the concept map* [GraphDefinition](graphdefinition.html): Name of the publisher of the graph definition* [ImplementationGuide](implementationguide.html): Name of the publisher of the implementation guide* [MessageDefinition](messagedefinition.html): Name of the publisher of the message definition* [NamingSystem](namingsystem.html): Name of the publisher of the naming system* [OperationDefinition](operationdefinition.html): Name of the publisher of the operation definition* [SearchParameter](searchparameter.html): Name of the publisher of the search parameter* [StructureDefinition](structuredefinition.html): Name of the publisher of the structure definition* [StructureMap](structuremap.html): Name of the publisher of the structure map* [TerminologyCapabilities](terminologycapabilities.html): Name of the publisher of the terminology capabilities* [ValueSet](valueset.html): Name of the publisher of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "category",
            "description": "The behavior associated with the message",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "status",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The current status of the capability statement* [CodeSystem](codesystem.html): The current status of the code system* [CompartmentDefinition](compartmentdefinition.html): The current status of the compartment definition* [ConceptMap](conceptmap.html): The current status of the concept map* [GraphDefinition](graphdefinition.html): The current status of the graph definition* [ImplementationGuide](implementationguide.html): The current status of the implementation guide* [MessageDefinition](messagedefinition.html): The current status of the message definition* [NamingSystem](namingsystem.html): The current status of the naming system* [OperationDefinition](operationdefinition.html): The current status of the operation definition* [SearchParameter](searchparameter.html): The current status of the search parameter* [StructureDefinition](structuredefinition.html): The current status of the structure definition* [StructureMap](structuremap.html): The current status of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The current status of the terminology capabilities* [ValueSet](valueset.html): The current status of the value set",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MessageDefinition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MessageDefinition/_search": {
      "post": {
        "summary": "Search MessageDefinitions",
        "description": "Search across all MessageDefinition instances",
        "operationId": "SearchPostMessageDefinition",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "parent",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type-value",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "jurisdiction",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "description",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "focus",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "title",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "event",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "version",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "url",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "publisher",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "category",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MessageDefinition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MessageHeader/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a MessageHeader instance",
        "description": "VRead a MessageHeader instance",
        "operationId": "VReadMessageHeader",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MessageHeader"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MessageHeader/{id}": {
      "get": {
        "summary": "Read a MessageHeader instance",
        "description": "Read a MessageHeader instance",
        "operationId": "ReadMessageHeader",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MessageHeader"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MessageHeader": {
      "get": {
        "summary": "Search MessageHeaders",
        "description": "Search across all MessageHeader instances",
        "operationId": "SearchGetMessageHeader",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "code",
            "description": "ok | transient-error | fatal-error",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "receiver",
            "description": "Intended \"real-world\" recipient for the data",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "author",
            "description": "The source of the decision",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "destination",
            "description": "Name of system",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "focus",
            "description": "The actual content of the message",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "source",
            "description": "Name of system",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "target",
            "description": "Particular delivery destination within the destination",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "destination-uri",
            "description": "Actual destination address or id",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "sender",
            "description": "Real world sender of the message",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "source-uri",
            "description": "Actual message source address or id",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "responsible",
            "description": "Final responsibility for event",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "enterer",
            "description": "The source of the data entry",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "response-id",
            "description": "Id of original message",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "event",
            "description": "Code for the event this message represents or link to event definition",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MessageHeader"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MessageHeader/_search": {
      "post": {
        "summary": "Search MessageHeaders",
        "description": "Search across all MessageHeader instances",
        "operationId": "SearchPostMessageHeader",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "code",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "receiver",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "author",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "destination",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "focus",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "target",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "destination-uri",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "sender",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "source-uri",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "responsible",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "enterer",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "response-id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "event",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MessageHeader"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MolecularSequence/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a MolecularSequence instance",
        "description": "VRead a MolecularSequence instance",
        "operationId": "VReadMolecularSequence",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MolecularSequence"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MolecularSequence/{id}": {
      "get": {
        "summary": "Read a MolecularSequence instance",
        "description": "Read a MolecularSequence instance",
        "operationId": "ReadMolecularSequence",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MolecularSequence"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MolecularSequence": {
      "get": {
        "summary": "Search MolecularSequences",
        "description": "Search across all MolecularSequence instances",
        "operationId": "SearchGetMolecularSequence",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "identifier",
            "description": "The unique identity for a particular sequence",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "referenceseqid-variant-coordinate",
            "description": "Search parameter by reference sequence and variant coordinate. This will refer to part of a locus or part of a gene where search region will be represented in 1-based system. Since the coordinateSystem can either be 0-based or 1-based, this search query will include the result of both coordinateSystem that contains the equivalent segment of the gene or whole genome sequence. For example, a search for sequence can be represented as `referenceSeqId-variant-coordinate=NC_000001.11$lt345$gt123`, this means it will search for the MolecularSequence resource with variants on NC_000001.11 and with position >123 and <345, where in 1-based system resource, all strings within region NC_000001.11:124-344 will be revealed, while in 0-based system resource, all strings within region NC_000001.11:123-344 will be revealed. You may want to check detail about 0-based v.s. 1-based above.",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "chromosome",
            "description": "Chromosome number of the reference sequence",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "type",
            "description": "Amino Acid Sequence/ DNA Sequence / RNA Sequence",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "window-end",
            "description": "End position (0-based exclusive, which menas the acid at this position will not be included, 1-based inclusive, which means the acid at this position will be included) of the reference sequence.",
            "type": "number",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "window-start",
            "description": "Start position (0-based inclusive, 1-based inclusive, that means the nucleic acid or amino acid at this position will be included) of the reference sequence.",
            "type": "number",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "variant-end",
            "description": "End position (0-based exclusive, which menas the acid at this position will not be included, 1-based inclusive, which means the acid at this position will be included) of the variant.",
            "type": "number",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "chromosome-variant-coordinate",
            "description": "Search parameter by chromosome and variant coordinate. This will refer to part of a locus or part of a gene where search region will be represented in 1-based system. Since the coordinateSystem can either be 0-based or 1-based, this search query will include the result of both coordinateSystem that contains the equivalent segment of the gene or whole genome sequence. For example, a search for sequence can be represented as `chromosome-variant-coordinate=1$lt345$gt123`, this means it will search for the MolecularSequence resource with variants on chromosome 1 and with position >123 and <345, where in 1-based system resource, all strings within region 1:124-344 will be revealed, while in 0-based system resource, all strings within region 1:123-344 will be revealed. You may want to check detail about 0-based v.s. 1-based above.",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "The subject that the observation is about",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "variant-start",
            "description": "Start position (0-based inclusive, 1-based inclusive, that means the nucleic acid or amino acid at this position will be included) of the variant.",
            "type": "number",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "in": "query",
            "name": "chromosome-window-coordinate",
            "description": "Search parameter by chromosome and window. This will refer to part of a locus or part of a gene where search region will be represented in 1-based system. Since the coordinateSystem can either be 0-based or 1-based, this search query will include the result of both coordinateSystem that contains the equivalent segment of the gene or whole genome sequence. For example, a search for sequence can be represented as `chromosome-window-coordinate=1$lt345$gt123`, this means it will search for the MolecularSequence resource with a window on chromosome 1 and with position >123 and <345, where in 1-based system resource, all strings within region 1:124-344 will be revealed, while in 0-based system resource, all strings within region 1:123-344 will be revealed. You may want to check detail about 0-based v.s. 1-based above.",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "referenceseqid-window-coordinate",
            "description": "Search parameter by reference sequence and window. This will refer to part of a locus or part of a gene where search region will be represented in 1-based system. Since the coordinateSystem can either be 0-based or 1-based, this search query will include the result of both coordinateSystem that contains the equivalent segment of the gene or whole genome sequence. For example, a search for sequence can be represented as `referenceSeqId-window-coordinate=NC_000001.11$lt345$gt123`, this means it will search for the MolecularSequence resource with a window on NC_000001.11 and with position >123 and <345, where in 1-based system resource, all strings within region NC_000001.11:124-344 will be revealed, while in 0-based system resource, all strings within region NC_000001.11:123-344 will be revealed. You may want to check detail about 0-based v.s. 1-based above.",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "referenceseqid",
            "description": "Reference Sequence of the sequence",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MolecularSequence"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/MolecularSequence/_search": {
      "post": {
        "summary": "Search MolecularSequences",
        "description": "Search across all MolecularSequence instances",
        "operationId": "SearchPostMolecularSequence",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "referenceseqid-variant-coordinate",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "chromosome",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "window-end",
            "type": "number"
          },
          {
            "in": "formData",
            "name": "window-start",
            "type": "number"
          },
          {
            "in": "formData",
            "name": "variant-end",
            "type": "number"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "chromosome-variant-coordinate",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "variant-start",
            "type": "number"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "chromosome-window-coordinate",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "referenceseqid-window-coordinate",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "referenceseqid",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MolecularSequence"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/NamingSystem/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a NamingSystem instance",
        "description": "VRead a NamingSystem instance",
        "operationId": "VReadNamingSystem",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NamingSystem"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/NamingSystem/{id}": {
      "get": {
        "summary": "Read a NamingSystem instance",
        "description": "Read a NamingSystem instance",
        "operationId": "ReadNamingSystem",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NamingSystem"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/NamingSystem": {
      "get": {
        "summary": "Search NamingSystems",
        "description": "Search across all NamingSystem instances",
        "operationId": "SearchGetNamingSystem",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The capability statement publication date* [CodeSystem](codesystem.html): The code system publication date* [CompartmentDefinition](compartmentdefinition.html): The compartment definition publication date* [ConceptMap](conceptmap.html): The concept map publication date* [GraphDefinition](graphdefinition.html): The graph definition publication date* [ImplementationGuide](implementationguide.html): The implementation guide publication date* [MessageDefinition](messagedefinition.html): The message definition publication date* [NamingSystem](namingsystem.html): The naming system publication date* [OperationDefinition](operationdefinition.html): The operation definition publication date* [SearchParameter](searchparameter.html): The search parameter publication date* [StructureDefinition](structuredefinition.html): The structure definition publication date* [StructureMap](structuremap.html): The structure map publication date* [TerminologyCapabilities](terminologycapabilities.html): The terminology capabilities publication date* [ValueSet](valueset.html): The value set publication date",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type-value",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A use context type and value assigned to the capability statement* [CodeSystem](codesystem.html): A use context type and value assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A use context type and value assigned to the compartment definition* [ConceptMap](conceptmap.html): A use context type and value assigned to the concept map* [GraphDefinition](graphdefinition.html): A use context type and value assigned to the graph definition* [ImplementationGuide](implementationguide.html): A use context type and value assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A use context type and value assigned to the message definition* [NamingSystem](namingsystem.html): A use context type and value assigned to the naming system* [OperationDefinition](operationdefinition.html): A use context type and value assigned to the operation definition* [SearchParameter](searchparameter.html): A use context type and value assigned to the search parameter* [StructureDefinition](structuredefinition.html): A use context type and value assigned to the structure definition* [StructureMap](structuremap.html): A use context type and value assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A use context type and value assigned to the terminology capabilities* [ValueSet](valueset.html): A use context type and value assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "jurisdiction",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Intended jurisdiction for the capability statement* [CodeSystem](codesystem.html): Intended jurisdiction for the code system* [ConceptMap](conceptmap.html): Intended jurisdiction for the concept map* [GraphDefinition](graphdefinition.html): Intended jurisdiction for the graph definition* [ImplementationGuide](implementationguide.html): Intended jurisdiction for the implementation guide* [MessageDefinition](messagedefinition.html): Intended jurisdiction for the message definition* [NamingSystem](namingsystem.html): Intended jurisdiction for the naming system* [OperationDefinition](operationdefinition.html): Intended jurisdiction for the operation definition* [SearchParameter](searchparameter.html): Intended jurisdiction for the search parameter* [StructureDefinition](structuredefinition.html): Intended jurisdiction for the structure definition* [StructureMap](structuremap.html): Intended jurisdiction for the structure map* [TerminologyCapabilities](terminologycapabilities.html): Intended jurisdiction for the terminology capabilities* [ValueSet](valueset.html): Intended jurisdiction for the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "description",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The description of the capability statement* [CodeSystem](codesystem.html): The description of the code system* [CompartmentDefinition](compartmentdefinition.html): The description of the compartment definition* [ConceptMap](conceptmap.html): The description of the concept map* [GraphDefinition](graphdefinition.html): The description of the graph definition* [ImplementationGuide](implementationguide.html): The description of the implementation guide* [MessageDefinition](messagedefinition.html): The description of the message definition* [NamingSystem](namingsystem.html): The description of the naming system* [OperationDefinition](operationdefinition.html): The description of the operation definition* [SearchParameter](searchparameter.html): The description of the search parameter* [StructureDefinition](structuredefinition.html): The description of the structure definition* [StructureMap](structuremap.html): The description of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The description of the terminology capabilities* [ValueSet](valueset.html): The description of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A type of use context assigned to the capability statement* [CodeSystem](codesystem.html): A type of use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A type of use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A type of use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A type of use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A type of use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A type of use context assigned to the message definition* [NamingSystem](namingsystem.html): A type of use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A type of use context assigned to the operation definition* [SearchParameter](searchparameter.html): A type of use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A type of use context assigned to the structure definition* [StructureMap](structuremap.html): A type of use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A type of use context assigned to the terminology capabilities* [ValueSet](valueset.html): A type of use context assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "type",
            "description": "e.g. driver,  provider,  patient, bank etc.",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-quantity",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A quantity- or range-valued use context assigned to the capability statement* [CodeSystem](codesystem.html): A quantity- or range-valued use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A quantity- or range-valued use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A quantity- or range-valued use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A quantity- or range-valued use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A quantity- or range-valued use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A quantity- or range-valued use context assigned to the message definition* [NamingSystem](namingsystem.html): A quantity- or range-valued use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A quantity- or range-valued use context assigned to the operation definition* [SearchParameter](searchparameter.html): A quantity- or range-valued use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A quantity- or range-valued use context assigned to the structure definition* [StructureMap](structuremap.html): A quantity- or range-valued use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A quantity- or range-valued use context assigned to the terminology capabilities* [ValueSet](valueset.html): A quantity- or range-valued use context assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "contact",
            "description": "Name of an individual to contact",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "responsible",
            "description": "Who maintains system namespace?",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A use context assigned to the capability statement* [CodeSystem](codesystem.html): A use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A use context assigned to the message definition* [NamingSystem](namingsystem.html): A use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A use context assigned to the operation definition* [SearchParameter](searchparameter.html): A use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A use context assigned to the structure definition* [StructureMap](structuremap.html): A use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A use context assigned to the terminology capabilities* [ValueSet](valueset.html): A use context assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "telecom",
            "description": "Contact details for individual or organization",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "value",
            "description": "The unique identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type-quantity",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A use context type and quantity- or range-based value assigned to the capability statement* [CodeSystem](codesystem.html): A use context type and quantity- or range-based value assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A use context type and quantity- or range-based value assigned to the compartment definition* [ConceptMap](conceptmap.html): A use context type and quantity- or range-based value assigned to the concept map* [GraphDefinition](graphdefinition.html): A use context type and quantity- or range-based value assigned to the graph definition* [ImplementationGuide](implementationguide.html): A use context type and quantity- or range-based value assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A use context type and quantity- or range-based value assigned to the message definition* [NamingSystem](namingsystem.html): A use context type and quantity- or range-based value assigned to the naming system* [OperationDefinition](operationdefinition.html): A use context type and quantity- or range-based value assigned to the operation definition* [SearchParameter](searchparameter.html): A use context type and quantity- or range-based value assigned to the search parameter* [StructureDefinition](structuredefinition.html): A use context type and quantity- or range-based value assigned to the structure definition* [StructureMap](structuremap.html): A use context type and quantity- or range-based value assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A use context type and quantity- or range-based value assigned to the terminology capabilities* [ValueSet](valueset.html): A use context type and quantity- or range-based value assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "period",
            "description": "When is identifier valid?",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "kind",
            "description": "codesystem | identifier | root",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "id-type",
            "description": "oid | uuid | uri | other",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Computationally friendly name of the capability statement* [CodeSystem](codesystem.html): Computationally friendly name of the code system* [CompartmentDefinition](compartmentdefinition.html): Computationally friendly name of the compartment definition* [ConceptMap](conceptmap.html): Computationally friendly name of the concept map* [GraphDefinition](graphdefinition.html): Computationally friendly name of the graph definition* [ImplementationGuide](implementationguide.html): Computationally friendly name of the implementation guide* [MessageDefinition](messagedefinition.html): Computationally friendly name of the message definition* [NamingSystem](namingsystem.html): Computationally friendly name of the naming system* [OperationDefinition](operationdefinition.html): Computationally friendly name of the operation definition* [SearchParameter](searchparameter.html): Computationally friendly name of the search parameter* [StructureDefinition](structuredefinition.html): Computationally friendly name of the structure definition* [StructureMap](structuremap.html): Computationally friendly name of the structure map* [TerminologyCapabilities](terminologycapabilities.html): Computationally friendly name of the terminology capabilities* [ValueSet](valueset.html): Computationally friendly name of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "publisher",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Name of the publisher of the capability statement* [CodeSystem](codesystem.html): Name of the publisher of the code system* [CompartmentDefinition](compartmentdefinition.html): Name of the publisher of the compartment definition* [ConceptMap](conceptmap.html): Name of the publisher of the concept map* [GraphDefinition](graphdefinition.html): Name of the publisher of the graph definition* [ImplementationGuide](implementationguide.html): Name of the publisher of the implementation guide* [MessageDefinition](messagedefinition.html): Name of the publisher of the message definition* [NamingSystem](namingsystem.html): Name of the publisher of the naming system* [OperationDefinition](operationdefinition.html): Name of the publisher of the operation definition* [SearchParameter](searchparameter.html): Name of the publisher of the search parameter* [StructureDefinition](structuredefinition.html): Name of the publisher of the structure definition* [StructureMap](structuremap.html): Name of the publisher of the structure map* [TerminologyCapabilities](terminologycapabilities.html): Name of the publisher of the terminology capabilities* [ValueSet](valueset.html): Name of the publisher of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "status",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The current status of the capability statement* [CodeSystem](codesystem.html): The current status of the code system* [CompartmentDefinition](compartmentdefinition.html): The current status of the compartment definition* [ConceptMap](conceptmap.html): The current status of the concept map* [GraphDefinition](graphdefinition.html): The current status of the graph definition* [ImplementationGuide](implementationguide.html): The current status of the implementation guide* [MessageDefinition](messagedefinition.html): The current status of the message definition* [NamingSystem](namingsystem.html): The current status of the naming system* [OperationDefinition](operationdefinition.html): The current status of the operation definition* [SearchParameter](searchparameter.html): The current status of the search parameter* [StructureDefinition](structuredefinition.html): The current status of the structure definition* [StructureMap](structuremap.html): The current status of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The current status of the terminology capabilities* [ValueSet](valueset.html): The current status of the value set",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NamingSystem"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/NamingSystem/_search": {
      "post": {
        "summary": "Search NamingSystems",
        "description": "Search across all NamingSystem instances",
        "operationId": "SearchPostNamingSystem",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type-value",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "jurisdiction",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "description",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "contact",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "responsible",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "telecom",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "value",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "period",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "kind",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "id-type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "publisher",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NamingSystem"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/NutritionOrder/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a NutritionOrder instance",
        "description": "VRead a NutritionOrder instance",
        "operationId": "VReadNutritionOrder",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NutritionOrder"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/NutritionOrder/{id}": {
      "get": {
        "summary": "Read a NutritionOrder instance",
        "description": "Read a NutritionOrder instance",
        "operationId": "ReadNutritionOrder",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NutritionOrder"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/NutritionOrder": {
      "get": {
        "summary": "Search NutritionOrders",
        "description": "Search across all NutritionOrder instances",
        "operationId": "SearchGetNutritionOrder",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "identifier",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "instantiates-canonical",
            "description": "Instantiates FHIR protocol or definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "encounter",
            "description": "Multiple Resources: * [Composition](composition.html): Context of the Composition* [DeviceRequest](devicerequest.html): Encounter during which request was created* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made* [DocumentReference](documentreference.html): Context of the document  content* [Flag](flag.html): Alert relevant during encounter* [List](list.html): Context in which list created* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier* [Observation](observation.html): Encounter related to the observation* [Procedure](procedure.html): Encounter created as part of* [RiskAssessment](riskassessment.html): Where was assessment performed?* [ServiceRequest](servicerequest.html): An encounter in which this request is made* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "oraldiet",
            "description": "Type of diet that can be consumed orally (i.e., take via the mouth).",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "additive",
            "description": "Type of module component to add to the feeding",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "datetime",
            "description": "Return nutrition orders requested on this date",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "provider",
            "description": "The identity of the provider who placed the nutrition order",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "supplement",
            "description": "Type of supplement product requested",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "formula",
            "description": "Type of enteral or infant formula",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "in": "query",
            "name": "instantiates-uri",
            "description": "Instantiates external protocol or definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "status",
            "description": "Status of the nutrition order.",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NutritionOrder"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/NutritionOrder/_search": {
      "post": {
        "summary": "Search NutritionOrders",
        "description": "Search across all NutritionOrder instances",
        "operationId": "SearchPostNutritionOrder",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "instantiates-canonical",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "encounter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "oraldiet",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "additive",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "datetime",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "provider",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "supplement",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "formula",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "instantiates-uri",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NutritionOrder"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Observation/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a Observation instance",
        "description": "VRead a Observation instance",
        "operationId": "VReadObservation",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Observation"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Observation/{id}": {
      "get": {
        "summary": "Read a Observation instance",
        "description": "Read a Observation instance",
        "operationId": "ReadObservation",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Observation"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Observation": {
      "get": {
        "summary": "Search Observations",
        "description": "Search across all Observation instances",
        "operationId": "SearchGetObservation",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Date first version of the resource instance was recorded* [CarePlan](careplan.html): Time period plan covers* [CareTeam](careteam.html): Time period team covers* [ClinicalImpression](clinicalimpression.html): When the assessment was documented* [Composition](composition.html): Composition editing time* [Consent](consent.html): When this Consent was created or indexed* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report* [Encounter](encounter.html): A date within the period the Encounter lasted* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period* [FamilyMemberHistory](familymemberhistory.html): When history was recorded or last updated* [Flag](flag.html): Time period when flag is active* [Immunization](immunization.html): Vaccination  (non)-Administration Date* [List](list.html): When the list was prepared* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period* [Procedure](procedure.html): When the procedure was performed* [RiskAssessment](riskassessment.html): When was assessment made?* [SupplyRequest](supplyrequest.html): When the request was made",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "combo-data-absent-reason",
            "description": "The reason why the expected value in the element Observation.value[x] or Observation.component.value[x] is missing.",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "code",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance* [Condition](condition.html): Code for the condition* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered* [DiagnosticReport](diagnosticreport.html): The code for the report, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code* [List](list.html): What the purpose of this list is* [Medication](medication.html): Returns medications for a specific code* [MedicationAdministration](medicationadministration.html): Return administrations of this medication code* [MedicationDispense](medicationdispense.html): Returns dispenses of this medicine code* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication code* [MedicationStatement](medicationstatement.html): Return statements of this medication code* [Observation](observation.html): The code of the observation type* [Procedure](procedure.html): A code to identify a  procedure* [ServiceRequest](servicerequest.html): What is being requested/ordered",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "component-data-absent-reason",
            "description": "The reason why the expected value in the element Observation.component.value[x] is missing.",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "subject",
            "description": "The subject that the observation is about",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "combo-code-value-quantity",
            "description": "Code and quantity value parameter pair, including in components",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "value-concept",
            "description": "The value of the observation, if the value is a CodeableConcept",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "value-date",
            "description": "The value of the observation, if the value is a date or period of time",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "derived-from",
            "description": "Related measurements the observation is made from",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "focus",
            "description": "The focus of an observation when the focus is not the patient of record.",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "part-of",
            "description": "Part of referenced event",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "has-member",
            "description": "Related resource that belongs to the Observation group",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "code-value-string",
            "description": "Code and string value parameter pair",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "component-code-value-quantity",
            "description": "Component code and component quantity value parameter pair",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "based-on",
            "description": "Reference to the service request.",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "code-value-date",
            "description": "Code and date/time value parameter pair",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "specimen",
            "description": "Specimen used for this observation",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "component-code",
            "description": "The component code of the observation type",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "code-value-quantity",
            "description": "Code and quantity value parameter pair",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "combo-code-value-concept",
            "description": "Code and coded value parameter pair, including in components",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "value-string",
            "description": "The value of the observation, if the value is a string, and also searches in CodeableConcept.text",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "performer",
            "description": "Who performed the observation",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "combo-code",
            "description": "The code of the observation type or component type",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "method",
            "description": "The method used for the observation",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "value-quantity",
            "description": "The value of the observation, if the value is a Quantity, or a SampledData (just search on the bounds of the values in sampled data)",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "component-value-quantity",
            "description": "The value of the component observation, if the value is a Quantity, or a SampledData (just search on the bounds of the values in sampled data)",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "data-absent-reason",
            "description": "The reason why the expected value in the element Observation.value[x] is missing.",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "combo-value-quantity",
            "description": "The value or component value of the observation, if the value is a Quantity, or a SampledData (just search on the bounds of the values in sampled data)",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "encounter",
            "description": "Multiple Resources: * [Composition](composition.html): Context of the Composition* [DeviceRequest](devicerequest.html): Encounter during which request was created* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made* [DocumentReference](documentreference.html): Context of the document  content* [Flag](flag.html): Alert relevant during encounter* [List](list.html): Context in which list created* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier* [Observation](observation.html): Encounter related to the observation* [Procedure](procedure.html): Encounter created as part of* [RiskAssessment](riskassessment.html): Where was assessment performed?* [ServiceRequest](servicerequest.html): An encounter in which this request is made* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "code-value-concept",
            "description": "Code and coded value parameter pair",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "in": "query",
            "name": "component-code-value-concept",
            "description": "Component code and component coded value parameter pair",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "component-value-concept",
            "description": "The value of the component observation, if the value is a CodeableConcept",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "category",
            "description": "The classification of the type of observation",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "device",
            "description": "The Device that generated the observation data.",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "combo-value-concept",
            "description": "The value or component value of the observation, if the value is a CodeableConcept",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "status",
            "description": "The status of the observation",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Observation"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Observation/_search": {
      "post": {
        "summary": "Search Observations",
        "description": "Search across all Observation instances",
        "operationId": "SearchPostObservation",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "combo-data-absent-reason",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "code",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "component-data-absent-reason",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "subject",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "combo-code-value-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "value-concept",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "value-date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "derived-from",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "focus",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "part-of",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "has-member",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "code-value-string",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "component-code-value-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "based-on",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "code-value-date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "specimen",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "component-code",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "code-value-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "combo-code-value-concept",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "value-string",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "performer",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "combo-code",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "method",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "value-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "component-value-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "data-absent-reason",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "combo-value-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "encounter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "code-value-concept",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "component-code-value-concept",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "component-value-concept",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "category",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "device",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "combo-value-concept",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Observation"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ObservationDefinition/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a ObservationDefinition instance",
        "description": "VRead a ObservationDefinition instance",
        "operationId": "VReadObservationDefinition",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ObservationDefinition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ObservationDefinition/{id}": {
      "get": {
        "summary": "Read a ObservationDefinition instance",
        "description": "Read a ObservationDefinition instance",
        "operationId": "ReadObservationDefinition",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ObservationDefinition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ObservationDefinition": {
      "get": {
        "summary": "Search ObservationDefinitions",
        "description": "Search across all ObservationDefinition instances",
        "operationId": "SearchGetObservationDefinition",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ObservationDefinition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ObservationDefinition/_search": {
      "post": {
        "summary": "Search ObservationDefinitions",
        "description": "Search across all ObservationDefinition instances",
        "operationId": "SearchPostObservationDefinition",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ObservationDefinition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/OperationDefinition/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a OperationDefinition instance",
        "description": "VRead a OperationDefinition instance",
        "operationId": "VReadOperationDefinition",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OperationDefinition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/OperationDefinition/{id}": {
      "get": {
        "summary": "Read a OperationDefinition instance",
        "description": "Read a OperationDefinition instance",
        "operationId": "ReadOperationDefinition",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OperationDefinition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/OperationDefinition": {
      "get": {
        "summary": "Search OperationDefinitions",
        "description": "Search across all OperationDefinition instances",
        "operationId": "SearchGetOperationDefinition",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The capability statement publication date* [CodeSystem](codesystem.html): The code system publication date* [CompartmentDefinition](compartmentdefinition.html): The compartment definition publication date* [ConceptMap](conceptmap.html): The concept map publication date* [GraphDefinition](graphdefinition.html): The graph definition publication date* [ImplementationGuide](implementationguide.html): The implementation guide publication date* [MessageDefinition](messagedefinition.html): The message definition publication date* [NamingSystem](namingsystem.html): The naming system publication date* [OperationDefinition](operationdefinition.html): The operation definition publication date* [SearchParameter](searchparameter.html): The search parameter publication date* [StructureDefinition](structuredefinition.html): The structure definition publication date* [StructureMap](structuremap.html): The structure map publication date* [TerminologyCapabilities](terminologycapabilities.html): The terminology capabilities publication date* [ValueSet](valueset.html): The value set publication date",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "code",
            "description": "Name used to invoke the operation",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "instance",
            "description": "Invoke on an instance?",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type-value",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A use context type and value assigned to the capability statement* [CodeSystem](codesystem.html): A use context type and value assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A use context type and value assigned to the compartment definition* [ConceptMap](conceptmap.html): A use context type and value assigned to the concept map* [GraphDefinition](graphdefinition.html): A use context type and value assigned to the graph definition* [ImplementationGuide](implementationguide.html): A use context type and value assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A use context type and value assigned to the message definition* [NamingSystem](namingsystem.html): A use context type and value assigned to the naming system* [OperationDefinition](operationdefinition.html): A use context type and value assigned to the operation definition* [SearchParameter](searchparameter.html): A use context type and value assigned to the search parameter* [StructureDefinition](structuredefinition.html): A use context type and value assigned to the structure definition* [StructureMap](structuremap.html): A use context type and value assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A use context type and value assigned to the terminology capabilities* [ValueSet](valueset.html): A use context type and value assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "jurisdiction",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Intended jurisdiction for the capability statement* [CodeSystem](codesystem.html): Intended jurisdiction for the code system* [ConceptMap](conceptmap.html): Intended jurisdiction for the concept map* [GraphDefinition](graphdefinition.html): Intended jurisdiction for the graph definition* [ImplementationGuide](implementationguide.html): Intended jurisdiction for the implementation guide* [MessageDefinition](messagedefinition.html): Intended jurisdiction for the message definition* [NamingSystem](namingsystem.html): Intended jurisdiction for the naming system* [OperationDefinition](operationdefinition.html): Intended jurisdiction for the operation definition* [SearchParameter](searchparameter.html): Intended jurisdiction for the search parameter* [StructureDefinition](structuredefinition.html): Intended jurisdiction for the structure definition* [StructureMap](structuremap.html): Intended jurisdiction for the structure map* [TerminologyCapabilities](terminologycapabilities.html): Intended jurisdiction for the terminology capabilities* [ValueSet](valueset.html): Intended jurisdiction for the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "description",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The description of the capability statement* [CodeSystem](codesystem.html): The description of the code system* [CompartmentDefinition](compartmentdefinition.html): The description of the compartment definition* [ConceptMap](conceptmap.html): The description of the concept map* [GraphDefinition](graphdefinition.html): The description of the graph definition* [ImplementationGuide](implementationguide.html): The description of the implementation guide* [MessageDefinition](messagedefinition.html): The description of the message definition* [NamingSystem](namingsystem.html): The description of the naming system* [OperationDefinition](operationdefinition.html): The description of the operation definition* [SearchParameter](searchparameter.html): The description of the search parameter* [StructureDefinition](structuredefinition.html): The description of the structure definition* [StructureMap](structuremap.html): The description of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The description of the terminology capabilities* [ValueSet](valueset.html): The description of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A type of use context assigned to the capability statement* [CodeSystem](codesystem.html): A type of use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A type of use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A type of use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A type of use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A type of use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A type of use context assigned to the message definition* [NamingSystem](namingsystem.html): A type of use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A type of use context assigned to the operation definition* [SearchParameter](searchparameter.html): A type of use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A type of use context assigned to the structure definition* [StructureMap](structuremap.html): A type of use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A type of use context assigned to the terminology capabilities* [ValueSet](valueset.html): A type of use context assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "title",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The human-friendly name of the capability statement* [CodeSystem](codesystem.html): The human-friendly name of the code system* [ConceptMap](conceptmap.html): The human-friendly name of the concept map* [ImplementationGuide](implementationguide.html): The human-friendly name of the implementation guide* [MessageDefinition](messagedefinition.html): The human-friendly name of the message definition* [OperationDefinition](operationdefinition.html): The human-friendly name of the operation definition* [StructureDefinition](structuredefinition.html): The human-friendly name of the structure definition* [StructureMap](structuremap.html): The human-friendly name of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The human-friendly name of the terminology capabilities* [ValueSet](valueset.html): The human-friendly name of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "type",
            "description": "Invoke at the type level?",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-quantity",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A quantity- or range-valued use context assigned to the capability statement* [CodeSystem](codesystem.html): A quantity- or range-valued use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A quantity- or range-valued use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A quantity- or range-valued use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A quantity- or range-valued use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A quantity- or range-valued use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A quantity- or range-valued use context assigned to the message definition* [NamingSystem](namingsystem.html): A quantity- or range-valued use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A quantity- or range-valued use context assigned to the operation definition* [SearchParameter](searchparameter.html): A quantity- or range-valued use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A quantity- or range-valued use context assigned to the structure definition* [StructureMap](structuremap.html): A quantity- or range-valued use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A quantity- or range-valued use context assigned to the terminology capabilities* [ValueSet](valueset.html): A quantity- or range-valued use context assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "output-profile",
            "description": "Validation information for out parameters",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A use context assigned to the capability statement* [CodeSystem](codesystem.html): A use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A use context assigned to the message definition* [NamingSystem](namingsystem.html): A use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A use context assigned to the operation definition* [SearchParameter](searchparameter.html): A use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A use context assigned to the structure definition* [StructureMap](structuremap.html): A use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A use context assigned to the terminology capabilities* [ValueSet](valueset.html): A use context assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type-quantity",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A use context type and quantity- or range-based value assigned to the capability statement* [CodeSystem](codesystem.html): A use context type and quantity- or range-based value assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A use context type and quantity- or range-based value assigned to the compartment definition* [ConceptMap](conceptmap.html): A use context type and quantity- or range-based value assigned to the concept map* [GraphDefinition](graphdefinition.html): A use context type and quantity- or range-based value assigned to the graph definition* [ImplementationGuide](implementationguide.html): A use context type and quantity- or range-based value assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A use context type and quantity- or range-based value assigned to the message definition* [NamingSystem](namingsystem.html): A use context type and quantity- or range-based value assigned to the naming system* [OperationDefinition](operationdefinition.html): A use context type and quantity- or range-based value assigned to the operation definition* [SearchParameter](searchparameter.html): A use context type and quantity- or range-based value assigned to the search parameter* [StructureDefinition](structuredefinition.html): A use context type and quantity- or range-based value assigned to the structure definition* [StructureMap](structuremap.html): A use context type and quantity- or range-based value assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A use context type and quantity- or range-based value assigned to the terminology capabilities* [ValueSet](valueset.html): A use context type and quantity- or range-based value assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "kind",
            "description": "operation | query",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "version",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The business version of the capability statement* [CodeSystem](codesystem.html): The business version of the code system* [CompartmentDefinition](compartmentdefinition.html): The business version of the compartment definition* [ConceptMap](conceptmap.html): The business version of the concept map* [GraphDefinition](graphdefinition.html): The business version of the graph definition* [ImplementationGuide](implementationguide.html): The business version of the implementation guide* [MessageDefinition](messagedefinition.html): The business version of the message definition* [OperationDefinition](operationdefinition.html): The business version of the operation definition* [SearchParameter](searchparameter.html): The business version of the search parameter* [StructureDefinition](structuredefinition.html): The business version of the structure definition* [StructureMap](structuremap.html): The business version of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The business version of the terminology capabilities* [ValueSet](valueset.html): The business version of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "url",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The uri that identifies the capability statement* [CodeSystem](codesystem.html): The uri that identifies the code system* [CompartmentDefinition](compartmentdefinition.html): The uri that identifies the compartment definition* [ConceptMap](conceptmap.html): The uri that identifies the concept map* [GraphDefinition](graphdefinition.html): The uri that identifies the graph definition* [ImplementationGuide](implementationguide.html): The uri that identifies the implementation guide* [MessageDefinition](messagedefinition.html): The uri that identifies the message definition* [OperationDefinition](operationdefinition.html): The uri that identifies the operation definition* [SearchParameter](searchparameter.html): The uri that identifies the search parameter* [StructureDefinition](structuredefinition.html): The uri that identifies the structure definition* [StructureMap](structuremap.html): The uri that identifies the structure map* [TerminologyCapabilities](terminologycapabilities.html): The uri that identifies the terminology capabilities* [ValueSet](valueset.html): The uri that identifies the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "input-profile",
            "description": "Validation information for in parameters",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "system",
            "description": "Invoke at the system level?",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Computationally friendly name of the capability statement* [CodeSystem](codesystem.html): Computationally friendly name of the code system* [CompartmentDefinition](compartmentdefinition.html): Computationally friendly name of the compartment definition* [ConceptMap](conceptmap.html): Computationally friendly name of the concept map* [GraphDefinition](graphdefinition.html): Computationally friendly name of the graph definition* [ImplementationGuide](implementationguide.html): Computationally friendly name of the implementation guide* [MessageDefinition](messagedefinition.html): Computationally friendly name of the message definition* [NamingSystem](namingsystem.html): Computationally friendly name of the naming system* [OperationDefinition](operationdefinition.html): Computationally friendly name of the operation definition* [SearchParameter](searchparameter.html): Computationally friendly name of the search parameter* [StructureDefinition](structuredefinition.html): Computationally friendly name of the structure definition* [StructureMap](structuremap.html): Computationally friendly name of the structure map* [TerminologyCapabilities](terminologycapabilities.html): Computationally friendly name of the terminology capabilities* [ValueSet](valueset.html): Computationally friendly name of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "publisher",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Name of the publisher of the capability statement* [CodeSystem](codesystem.html): Name of the publisher of the code system* [CompartmentDefinition](compartmentdefinition.html): Name of the publisher of the compartment definition* [ConceptMap](conceptmap.html): Name of the publisher of the concept map* [GraphDefinition](graphdefinition.html): Name of the publisher of the graph definition* [ImplementationGuide](implementationguide.html): Name of the publisher of the implementation guide* [MessageDefinition](messagedefinition.html): Name of the publisher of the message definition* [NamingSystem](namingsystem.html): Name of the publisher of the naming system* [OperationDefinition](operationdefinition.html): Name of the publisher of the operation definition* [SearchParameter](searchparameter.html): Name of the publisher of the search parameter* [StructureDefinition](structuredefinition.html): Name of the publisher of the structure definition* [StructureMap](structuremap.html): Name of the publisher of the structure map* [TerminologyCapabilities](terminologycapabilities.html): Name of the publisher of the terminology capabilities* [ValueSet](valueset.html): Name of the publisher of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "status",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The current status of the capability statement* [CodeSystem](codesystem.html): The current status of the code system* [CompartmentDefinition](compartmentdefinition.html): The current status of the compartment definition* [ConceptMap](conceptmap.html): The current status of the concept map* [GraphDefinition](graphdefinition.html): The current status of the graph definition* [ImplementationGuide](implementationguide.html): The current status of the implementation guide* [MessageDefinition](messagedefinition.html): The current status of the message definition* [NamingSystem](namingsystem.html): The current status of the naming system* [OperationDefinition](operationdefinition.html): The current status of the operation definition* [SearchParameter](searchparameter.html): The current status of the search parameter* [StructureDefinition](structuredefinition.html): The current status of the structure definition* [StructureMap](structuremap.html): The current status of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The current status of the terminology capabilities* [ValueSet](valueset.html): The current status of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "base",
            "description": "Marks this as a profile of the base",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OperationDefinition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/OperationDefinition/_search": {
      "post": {
        "summary": "Search OperationDefinitions",
        "description": "Search across all OperationDefinition instances",
        "operationId": "SearchPostOperationDefinition",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "code",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "instance",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type-value",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "jurisdiction",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "description",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "title",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "output-profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "kind",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "version",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "url",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "input-profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "system",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "publisher",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "base",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OperationDefinition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/OperationOutcome/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a OperationOutcome instance",
        "description": "VRead a OperationOutcome instance",
        "operationId": "VReadOperationOutcome",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OperationOutcome"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/OperationOutcome/{id}": {
      "get": {
        "summary": "Read a OperationOutcome instance",
        "description": "Read a OperationOutcome instance",
        "operationId": "ReadOperationOutcome",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OperationOutcome"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/OperationOutcome": {
      "get": {
        "summary": "Search OperationOutcomes",
        "description": "Search across all OperationOutcome instances",
        "operationId": "SearchGetOperationOutcome",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OperationOutcome"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/OperationOutcome/_search": {
      "post": {
        "summary": "Search OperationOutcomes",
        "description": "Search across all OperationOutcome instances",
        "operationId": "SearchPostOperationOutcome",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OperationOutcome"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Organization/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a Organization instance",
        "description": "VRead a Organization instance",
        "operationId": "VReadOrganization",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Organization"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Organization/{id}": {
      "get": {
        "summary": "Read a Organization instance",
        "description": "Read a Organization instance",
        "operationId": "ReadOrganization",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Organization"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Organization": {
      "get": {
        "summary": "Search Organizations",
        "description": "Search across all Organization instances",
        "operationId": "SearchGetOrganization",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "identifier",
            "description": "Any identifier for the organization (not the accreditation issuer's identifier)",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "partof",
            "description": "An organization of which this organization forms a part",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "address",
            "description": "A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "address-state",
            "description": "A state specified in an address",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "active",
            "description": "Is the Organization record active",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "type",
            "description": "A code for the type of organization",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "address-postalcode",
            "description": "A postal code specified in an address",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "address-country",
            "description": "A country specified in an address",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "endpoint",
            "description": "Technical endpoints providing access to services operated for the organization",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "phonetic",
            "description": "A portion of the organization's name using some kind of phonetic matching algorithm",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "address-use",
            "description": "A use code specified in an address",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "name",
            "description": "A portion of the organization's name or alias",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "address-city",
            "description": "A city specified in an address",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Organization"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Organization/_search": {
      "post": {
        "summary": "Search Organizations",
        "description": "Search across all Organization instances",
        "operationId": "SearchPostOrganization",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "partof",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "address",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "address-state",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "active",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "address-postalcode",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "address-country",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "endpoint",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "phonetic",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "address-use",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "address-city",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Organization"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/OrganizationAffiliation/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a OrganizationAffiliation instance",
        "description": "VRead a OrganizationAffiliation instance",
        "operationId": "VReadOrganizationAffiliation",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OrganizationAffiliation"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/OrganizationAffiliation/{id}": {
      "get": {
        "summary": "Read a OrganizationAffiliation instance",
        "description": "Read a OrganizationAffiliation instance",
        "operationId": "ReadOrganizationAffiliation",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OrganizationAffiliation"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/OrganizationAffiliation": {
      "get": {
        "summary": "Search OrganizationAffiliations",
        "description": "Search across all OrganizationAffiliation instances",
        "operationId": "SearchGetOrganizationAffiliation",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "The period during which the participatingOrganization is affiliated with the primary organization",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "An organization affiliation's Identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "specialty",
            "description": "Specific specialty of the participatingOrganization in the context of the role",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "role",
            "description": "Definition of the role the participatingOrganization plays",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "active",
            "description": "Whether this organization affiliation record is in active use",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "primary-organization",
            "description": "The organization that receives the services from the participating organization",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "network",
            "description": "Health insurance provider network in which the participatingOrganization provides the role's services (if defined) at the indicated locations (if defined)",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "endpoint",
            "description": "Technical endpoints providing access to services operated for this role",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "phone",
            "description": "A value in a phone contact",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "service",
            "description": "Healthcare services provided through the role",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "participating-organization",
            "description": "The organization that provides services to the primary organization",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "in": "query",
            "name": "location",
            "description": "The location(s) at which the role occurs",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "telecom",
            "description": "The value in any kind of contact",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "email",
            "description": "A value in an email contact",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OrganizationAffiliation"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/OrganizationAffiliation/_search": {
      "post": {
        "summary": "Search OrganizationAffiliations",
        "description": "Search across all OrganizationAffiliation instances",
        "operationId": "SearchPostOrganizationAffiliation",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "specialty",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "role",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "active",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "primary-organization",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "network",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "endpoint",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "phone",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "service",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "participating-organization",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "location",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "telecom",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "email",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OrganizationAffiliation"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Parameters/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a Parameters instance",
        "description": "VRead a Parameters instance",
        "operationId": "VReadParameters",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Parameters"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Parameters/{id}": {
      "get": {
        "summary": "Read a Parameters instance",
        "description": "Read a Parameters instance",
        "operationId": "ReadParameters",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Parameters"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Parameters": {
      "get": {
        "summary": "Search Parameterss",
        "description": "Search across all Parameters instances",
        "operationId": "SearchGetParameters",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Parameters"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Parameters/_search": {
      "post": {
        "summary": "Search Parameterss",
        "description": "Search across all Parameters instances",
        "operationId": "SearchPostParameters",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Parameters"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Patient/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a Patient instance",
        "description": "VRead a Patient instance",
        "operationId": "VReadPatient",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Patient"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Patient/{id}": {
      "get": {
        "summary": "Read a Patient instance",
        "description": "Read a Patient instance",
        "operationId": "ReadPatient",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Patient"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Patient": {
      "get": {
        "summary": "Search Patients",
        "description": "Search across all Patient instances",
        "operationId": "SearchGetPatient",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "birthdate",
            "description": "Multiple Resources: * [Patient](patient.html): The patient's date of birth* [Person](person.html): The person's date of birth* [RelatedPerson](relatedperson.html): The Related Person's date of birth",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "deceased",
            "description": "This patient has been marked as deceased, or as a death date entered",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "address-state",
            "description": "Multiple Resources: * [Patient](patient.html): A state specified in an address* [Person](person.html): A state specified in an address* [Practitioner](practitioner.html): A state specified in an address* [RelatedPerson](relatedperson.html): A state specified in an address",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "gender",
            "description": "Multiple Resources: * [Patient](patient.html): Gender of the patient* [Person](person.html): The gender of the person* [Practitioner](practitioner.html): Gender of the practitioner* [RelatedPerson](relatedperson.html): Gender of the related person",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "link",
            "description": "All patients linked to the given patient",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "language",
            "description": "Language code (irrespective of use value)",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "address-country",
            "description": "Multiple Resources: * [Patient](patient.html): A country specified in an address* [Person](person.html): A country specified in an address* [Practitioner](practitioner.html): A country specified in an address* [RelatedPerson](relatedperson.html): A country specified in an address",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "death-date",
            "description": "The date of death has been provided and satisfies this search value",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "phonetic",
            "description": "Multiple Resources: * [Patient](patient.html): A portion of either family or given name using some kind of phonetic matching algorithm* [Person](person.html): A portion of name using some kind of phonetic matching algorithm* [Practitioner](practitioner.html): A portion of either family or given name using some kind of phonetic matching algorithm* [RelatedPerson](relatedperson.html): A portion of name using some kind of phonetic matching algorithm",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "telecom",
            "description": "Multiple Resources: * [Patient](patient.html): The value in any kind of telecom details of the patient* [Person](person.html): The value in any kind of contact* [Practitioner](practitioner.html): The value in any kind of contact* [PractitionerRole](practitionerrole.html): The value in any kind of contact* [RelatedPerson](relatedperson.html): The value in any kind of contact",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "address-city",
            "description": "Multiple Resources: * [Patient](patient.html): A city specified in an address* [Person](person.html): A city specified in an address* [Practitioner](practitioner.html): A city specified in an address* [RelatedPerson](relatedperson.html): A city specified in an address",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "email",
            "description": "Multiple Resources: * [Patient](patient.html): A value in an email contact* [Person](person.html): A value in an email contact* [Practitioner](practitioner.html): A value in an email contact* [PractitionerRole](practitionerrole.html): A value in an email contact* [RelatedPerson](relatedperson.html): A value in an email contact",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "given",
            "description": "Multiple Resources: * [Patient](patient.html): A portion of the given name of the patient* [Practitioner](practitioner.html): A portion of the given name",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "A patient identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "address",
            "description": "Multiple Resources: * [Patient](patient.html): A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text* [Person](person.html): A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text* [Practitioner](practitioner.html): A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text* [RelatedPerson](relatedperson.html): A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "general-practitioner",
            "description": "Patient's nominated general practitioner, not the organization that manages the record",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "active",
            "description": "Whether the patient record is active",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "address-postalcode",
            "description": "Multiple Resources: * [Patient](patient.html): A postalCode specified in an address* [Person](person.html): A postal code specified in an address* [Practitioner](practitioner.html): A postalCode specified in an address* [RelatedPerson](relatedperson.html): A postal code specified in an address",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "phone",
            "description": "Multiple Resources: * [Patient](patient.html): A value in a phone contact* [Person](person.html): A value in a phone contact* [Practitioner](practitioner.html): A value in a phone contact* [PractitionerRole](practitionerrole.html): A value in a phone contact* [RelatedPerson](relatedperson.html): A value in a phone contact",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "organization",
            "description": "The organization that is the custodian of the patient record",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "address-use",
            "description": "Multiple Resources: * [Patient](patient.html): A use code specified in an address* [Person](person.html): A use code specified in an address* [Practitioner](practitioner.html): A use code specified in an address* [RelatedPerson](relatedperson.html): A use code specified in an address",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "name",
            "description": "A server defined search that may match any of the string fields in the HumanName, including family, give, prefix, suffix, suffix, and/or text",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "family",
            "description": "Multiple Resources: * [Patient](patient.html): A portion of the family name of the patient* [Practitioner](practitioner.html): A portion of the family name",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Patient"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Patient/_search": {
      "post": {
        "summary": "Search Patients",
        "description": "Search across all Patient instances",
        "operationId": "SearchPostPatient",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "birthdate",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "deceased",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "address-state",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "gender",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "link",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "language",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "address-country",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "death-date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "phonetic",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "telecom",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "address-city",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "email",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "given",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "address",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "general-practitioner",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "active",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "address-postalcode",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "phone",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "organization",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "address-use",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "family",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Patient"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/PaymentNotice/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a PaymentNotice instance",
        "description": "VRead a PaymentNotice instance",
        "operationId": "VReadPaymentNotice",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaymentNotice"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/PaymentNotice/{id}": {
      "get": {
        "summary": "Read a PaymentNotice instance",
        "description": "Read a PaymentNotice instance",
        "operationId": "ReadPaymentNotice",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaymentNotice"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/PaymentNotice": {
      "get": {
        "summary": "Search PaymentNotices",
        "description": "Search across all PaymentNotice instances",
        "operationId": "SearchGetPaymentNotice",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "identifier",
            "description": "The business identifier of the notice",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "request",
            "description": "The Claim",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "created",
            "description": "Creation date fro the notice",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "payment-status",
            "description": "The type of payment notice",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "provider",
            "description": "The reference to the provider",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "response",
            "description": "The ClaimResponse",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "status",
            "description": "The status of the payment notice",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaymentNotice"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/PaymentNotice/_search": {
      "post": {
        "summary": "Search PaymentNotices",
        "description": "Search across all PaymentNotice instances",
        "operationId": "SearchPostPaymentNotice",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "request",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "created",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "payment-status",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "provider",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "response",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaymentNotice"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/PaymentReconciliation/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a PaymentReconciliation instance",
        "description": "VRead a PaymentReconciliation instance",
        "operationId": "VReadPaymentReconciliation",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaymentReconciliation"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/PaymentReconciliation/{id}": {
      "get": {
        "summary": "Read a PaymentReconciliation instance",
        "description": "Read a PaymentReconciliation instance",
        "operationId": "ReadPaymentReconciliation",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaymentReconciliation"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/PaymentReconciliation": {
      "get": {
        "summary": "Search PaymentReconciliations",
        "description": "Search across all PaymentReconciliation instances",
        "operationId": "SearchGetPaymentReconciliation",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "identifier",
            "description": "The business identifier of the ExplanationOfBenefit",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "request",
            "description": "The reference to the claim",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "created",
            "description": "The creation date",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "requestor",
            "description": "The reference to the provider who submitted the claim",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "disposition",
            "description": "The contents of the disposition message",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "outcome",
            "description": "The processing outcome",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "payment-issuer",
            "description": "The organization which generated this resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "status",
            "description": "The status of the payment reconciliation",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaymentReconciliation"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/PaymentReconciliation/_search": {
      "post": {
        "summary": "Search PaymentReconciliations",
        "description": "Search across all PaymentReconciliation instances",
        "operationId": "SearchPostPaymentReconciliation",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "request",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "created",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "requestor",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "disposition",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "outcome",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "payment-issuer",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaymentReconciliation"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Person/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a Person instance",
        "description": "VRead a Person instance",
        "operationId": "VReadPerson",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Person"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Person/{id}": {
      "get": {
        "summary": "Read a Person instance",
        "description": "Read a Person instance",
        "operationId": "ReadPerson",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Person"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Person": {
      "get": {
        "summary": "Search Persons",
        "description": "Search across all Person instances",
        "operationId": "SearchGetPerson",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "birthdate",
            "description": "Multiple Resources: * [Patient](patient.html): The patient's date of birth* [Person](person.html): The person's date of birth* [RelatedPerson](relatedperson.html): The Related Person's date of birth",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "address-state",
            "description": "Multiple Resources: * [Patient](patient.html): A state specified in an address* [Person](person.html): A state specified in an address* [Practitioner](practitioner.html): A state specified in an address* [RelatedPerson](relatedperson.html): A state specified in an address",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "gender",
            "description": "Multiple Resources: * [Patient](patient.html): Gender of the patient* [Person](person.html): The gender of the person* [Practitioner](practitioner.html): Gender of the practitioner* [RelatedPerson](relatedperson.html): Gender of the related person",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "link",
            "description": "Any link has this Patient, Person, RelatedPerson or Practitioner reference",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "address-country",
            "description": "Multiple Resources: * [Patient](patient.html): A country specified in an address* [Person](person.html): A country specified in an address* [Practitioner](practitioner.html): A country specified in an address* [RelatedPerson](relatedperson.html): A country specified in an address",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "phonetic",
            "description": "Multiple Resources: * [Patient](patient.html): A portion of either family or given name using some kind of phonetic matching algorithm* [Person](person.html): A portion of name using some kind of phonetic matching algorithm* [Practitioner](practitioner.html): A portion of either family or given name using some kind of phonetic matching algorithm* [RelatedPerson](relatedperson.html): A portion of name using some kind of phonetic matching algorithm",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "The Person links to this Patient",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "telecom",
            "description": "Multiple Resources: * [Patient](patient.html): The value in any kind of telecom details of the patient* [Person](person.html): The value in any kind of contact* [Practitioner](practitioner.html): The value in any kind of contact* [PractitionerRole](practitionerrole.html): The value in any kind of contact* [RelatedPerson](relatedperson.html): The value in any kind of contact",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "address-city",
            "description": "Multiple Resources: * [Patient](patient.html): A city specified in an address* [Person](person.html): A city specified in an address* [Practitioner](practitioner.html): A city specified in an address* [RelatedPerson](relatedperson.html): A city specified in an address",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "email",
            "description": "Multiple Resources: * [Patient](patient.html): A value in an email contact* [Person](person.html): A value in an email contact* [Practitioner](practitioner.html): A value in an email contact* [PractitionerRole](practitionerrole.html): A value in an email contact* [RelatedPerson](relatedperson.html): A value in an email contact",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "A person Identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "address",
            "description": "Multiple Resources: * [Patient](patient.html): A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text* [Person](person.html): A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text* [Practitioner](practitioner.html): A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text* [RelatedPerson](relatedperson.html): A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "practitioner",
            "description": "The Person links to this Practitioner",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "relatedperson",
            "description": "The Person links to this RelatedPerson",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "address-postalcode",
            "description": "Multiple Resources: * [Patient](patient.html): A postalCode specified in an address* [Person](person.html): A postal code specified in an address* [Practitioner](practitioner.html): A postalCode specified in an address* [RelatedPerson](relatedperson.html): A postal code specified in an address",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "phone",
            "description": "Multiple Resources: * [Patient](patient.html): A value in a phone contact* [Person](person.html): A value in a phone contact* [Practitioner](practitioner.html): A value in a phone contact* [PractitionerRole](practitionerrole.html): A value in a phone contact* [RelatedPerson](relatedperson.html): A value in a phone contact",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "organization",
            "description": "The organization at which this person record is being managed",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "address-use",
            "description": "Multiple Resources: * [Patient](patient.html): A use code specified in an address* [Person](person.html): A use code specified in an address* [Practitioner](practitioner.html): A use code specified in an address* [RelatedPerson](relatedperson.html): A use code specified in an address",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "name",
            "description": "A server defined search that may match any of the string fields in the HumanName, including family, give, prefix, suffix, suffix, and/or text",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Person"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Person/_search": {
      "post": {
        "summary": "Search Persons",
        "description": "Search across all Person instances",
        "operationId": "SearchPostPerson",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "birthdate",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "address-state",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "gender",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "link",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "address-country",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "phonetic",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "telecom",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "address-city",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "email",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "address",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "practitioner",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "relatedperson",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "address-postalcode",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "phone",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "organization",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "address-use",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Person"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/PlanDefinition/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a PlanDefinition instance",
        "description": "VRead a PlanDefinition instance",
        "operationId": "VReadPlanDefinition",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PlanDefinition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/PlanDefinition/{id}": {
      "get": {
        "summary": "Read a PlanDefinition instance",
        "description": "Read a PlanDefinition instance",
        "operationId": "ReadPlanDefinition",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PlanDefinition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/PlanDefinition": {
      "get": {
        "summary": "Search PlanDefinitions",
        "description": "Search across all PlanDefinition instances",
        "operationId": "SearchGetPlanDefinition",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "The plan definition publication date",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "successor",
            "description": "What resource is being referenced",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type-value",
            "description": "A use context type and value assigned to the plan definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "jurisdiction",
            "description": "Intended jurisdiction for the plan definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "derived-from",
            "description": "What resource is being referenced",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "description",
            "description": "The description of the plan definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type",
            "description": "A type of use context assigned to the plan definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "predecessor",
            "description": "What resource is being referenced",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "composed-of",
            "description": "What resource is being referenced",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "title",
            "description": "The human-friendly name of the plan definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "type",
            "description": "The type of artifact the plan (e.g. order-set, eca-rule, protocol)",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-quantity",
            "description": "A quantity- or range-valued use context assigned to the plan definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "depends-on",
            "description": "What resource is being referenced",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "effective",
            "description": "The time during which the plan definition is intended to be in use",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context",
            "description": "A use context assigned to the plan definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "definition",
            "description": "Activity or plan definitions used by plan definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type-quantity",
            "description": "A use context type and quantity- or range-based value assigned to the plan definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "External identifier for the plan definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "version",
            "description": "The business version of the plan definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "url",
            "description": "The uri that identifies the plan definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Computationally friendly name of the plan definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "publisher",
            "description": "Name of the publisher of the plan definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "topic",
            "description": "Topics associated with the module",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "status",
            "description": "The current status of the plan definition",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PlanDefinition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/PlanDefinition/_search": {
      "post": {
        "summary": "Search PlanDefinitions",
        "description": "Search across all PlanDefinition instances",
        "operationId": "SearchPostPlanDefinition",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "successor",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type-value",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "jurisdiction",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "derived-from",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "description",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "predecessor",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "composed-of",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "title",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "depends-on",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "effective",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "definition",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "version",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "url",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "publisher",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "topic",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PlanDefinition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Practitioner/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a Practitioner instance",
        "description": "VRead a Practitioner instance",
        "operationId": "VReadPractitioner",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Practitioner"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Practitioner/{id}": {
      "get": {
        "summary": "Read a Practitioner instance",
        "description": "Read a Practitioner instance",
        "operationId": "ReadPractitioner",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Practitioner"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Practitioner": {
      "get": {
        "summary": "Search Practitioners",
        "description": "Search across all Practitioner instances",
        "operationId": "SearchGetPractitioner",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "address-state",
            "description": "Multiple Resources: * [Patient](patient.html): A state specified in an address* [Person](person.html): A state specified in an address* [Practitioner](practitioner.html): A state specified in an address* [RelatedPerson](relatedperson.html): A state specified in an address",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "gender",
            "description": "Multiple Resources: * [Patient](patient.html): Gender of the patient* [Person](person.html): The gender of the person* [Practitioner](practitioner.html): Gender of the practitioner* [RelatedPerson](relatedperson.html): Gender of the related person",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "address-country",
            "description": "Multiple Resources: * [Patient](patient.html): A country specified in an address* [Person](person.html): A country specified in an address* [Practitioner](practitioner.html): A country specified in an address* [RelatedPerson](relatedperson.html): A country specified in an address",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "phonetic",
            "description": "Multiple Resources: * [Patient](patient.html): A portion of either family or given name using some kind of phonetic matching algorithm* [Person](person.html): A portion of name using some kind of phonetic matching algorithm* [Practitioner](practitioner.html): A portion of either family or given name using some kind of phonetic matching algorithm* [RelatedPerson](relatedperson.html): A portion of name using some kind of phonetic matching algorithm",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "telecom",
            "description": "Multiple Resources: * [Patient](patient.html): The value in any kind of telecom details of the patient* [Person](person.html): The value in any kind of contact* [Practitioner](practitioner.html): The value in any kind of contact* [PractitionerRole](practitionerrole.html): The value in any kind of contact* [RelatedPerson](relatedperson.html): The value in any kind of contact",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "address-city",
            "description": "Multiple Resources: * [Patient](patient.html): A city specified in an address* [Person](person.html): A city specified in an address* [Practitioner](practitioner.html): A city specified in an address* [RelatedPerson](relatedperson.html): A city specified in an address",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "communication",
            "description": "One of the languages that the practitioner can communicate with",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "email",
            "description": "Multiple Resources: * [Patient](patient.html): A value in an email contact* [Person](person.html): A value in an email contact* [Practitioner](practitioner.html): A value in an email contact* [PractitionerRole](practitionerrole.html): A value in an email contact* [RelatedPerson](relatedperson.html): A value in an email contact",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "given",
            "description": "Multiple Resources: * [Patient](patient.html): A portion of the given name of the patient* [Practitioner](practitioner.html): A portion of the given name",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "A practitioner's Identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "address",
            "description": "Multiple Resources: * [Patient](patient.html): A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text* [Person](person.html): A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text* [Practitioner](practitioner.html): A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text* [RelatedPerson](relatedperson.html): A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "active",
            "description": "Whether the practitioner record is active",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "address-postalcode",
            "description": "Multiple Resources: * [Patient](patient.html): A postalCode specified in an address* [Person](person.html): A postal code specified in an address* [Practitioner](practitioner.html): A postalCode specified in an address* [RelatedPerson](relatedperson.html): A postal code specified in an address",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "phone",
            "description": "Multiple Resources: * [Patient](patient.html): A value in a phone contact* [Person](person.html): A value in a phone contact* [Practitioner](practitioner.html): A value in a phone contact* [PractitionerRole](practitionerrole.html): A value in a phone contact* [RelatedPerson](relatedperson.html): A value in a phone contact",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "address-use",
            "description": "Multiple Resources: * [Patient](patient.html): A use code specified in an address* [Person](person.html): A use code specified in an address* [Practitioner](practitioner.html): A use code specified in an address* [RelatedPerson](relatedperson.html): A use code specified in an address",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "name",
            "description": "A server defined search that may match any of the string fields in the HumanName, including family, give, prefix, suffix, suffix, and/or text",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "family",
            "description": "Multiple Resources: * [Patient](patient.html): A portion of the family name of the patient* [Practitioner](practitioner.html): A portion of the family name",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Practitioner"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Practitioner/_search": {
      "post": {
        "summary": "Search Practitioners",
        "description": "Search across all Practitioner instances",
        "operationId": "SearchPostPractitioner",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "address-state",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "gender",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "address-country",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "phonetic",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "telecom",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "address-city",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "communication",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "email",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "given",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "address",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "active",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "address-postalcode",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "phone",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "address-use",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "family",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Practitioner"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/PractitionerRole/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a PractitionerRole instance",
        "description": "VRead a PractitionerRole instance",
        "operationId": "VReadPractitionerRole",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PractitionerRole"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/PractitionerRole/{id}": {
      "get": {
        "summary": "Read a PractitionerRole instance",
        "description": "Read a PractitionerRole instance",
        "operationId": "ReadPractitionerRole",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PractitionerRole"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/PractitionerRole": {
      "get": {
        "summary": "Search PractitionerRoles",
        "description": "Search across all PractitionerRole instances",
        "operationId": "SearchGetPractitionerRole",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "The period during which the practitioner is authorized to perform in these role(s)",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "A practitioner's Identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "specialty",
            "description": "The practitioner has this specialty at an organization",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "role",
            "description": "The practitioner can perform this role at for the organization",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "practitioner",
            "description": "Practitioner that is able to provide the defined services for the organization",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "active",
            "description": "Whether this practitioner role record is in active use",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "endpoint",
            "description": "Technical endpoints providing access to services operated for the practitioner with this role",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "phone",
            "description": "Multiple Resources: * [Patient](patient.html): A value in a phone contact* [Person](person.html): A value in a phone contact* [Practitioner](practitioner.html): A value in a phone contact* [PractitionerRole](practitionerrole.html): A value in a phone contact* [RelatedPerson](relatedperson.html): A value in a phone contact",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "service",
            "description": "The list of healthcare services that this worker provides for this role's Organization/Location(s)",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "organization",
            "description": "The identity of the organization the practitioner represents / acts on behalf of",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "in": "query",
            "name": "telecom",
            "description": "Multiple Resources: * [Patient](patient.html): The value in any kind of telecom details of the patient* [Person](person.html): The value in any kind of contact* [Practitioner](practitioner.html): The value in any kind of contact* [PractitionerRole](practitionerrole.html): The value in any kind of contact* [RelatedPerson](relatedperson.html): The value in any kind of contact",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "location",
            "description": "One of the locations at which this practitioner provides care",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "email",
            "description": "Multiple Resources: * [Patient](patient.html): A value in an email contact* [Person](person.html): A value in an email contact* [Practitioner](practitioner.html): A value in an email contact* [PractitionerRole](practitionerrole.html): A value in an email contact* [RelatedPerson](relatedperson.html): A value in an email contact",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PractitionerRole"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/PractitionerRole/_search": {
      "post": {
        "summary": "Search PractitionerRoles",
        "description": "Search across all PractitionerRole instances",
        "operationId": "SearchPostPractitionerRole",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "specialty",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "role",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "practitioner",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "active",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "endpoint",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "phone",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "service",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "organization",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "telecom",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "location",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "email",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PractitionerRole"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Procedure/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a Procedure instance",
        "description": "VRead a Procedure instance",
        "operationId": "VReadProcedure",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Procedure"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Procedure/{id}": {
      "get": {
        "summary": "Read a Procedure instance",
        "description": "Read a Procedure instance",
        "operationId": "ReadProcedure",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Procedure"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Procedure": {
      "get": {
        "summary": "Search Procedures",
        "description": "Search across all Procedure instances",
        "operationId": "SearchGetProcedure",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Date first version of the resource instance was recorded* [CarePlan](careplan.html): Time period plan covers* [CareTeam](careteam.html): Time period team covers* [ClinicalImpression](clinicalimpression.html): When the assessment was documented* [Composition](composition.html): Composition editing time* [Consent](consent.html): When this Consent was created or indexed* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report* [Encounter](encounter.html): A date within the period the Encounter lasted* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period* [FamilyMemberHistory](familymemberhistory.html): When history was recorded or last updated* [Flag](flag.html): Time period when flag is active* [Immunization](immunization.html): Vaccination  (non)-Administration Date* [List](list.html): When the list was prepared* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period* [Procedure](procedure.html): When the procedure was performed* [RiskAssessment](riskassessment.html): When was assessment made?* [SupplyRequest](supplyrequest.html): When the request was made",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "code",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance* [Condition](condition.html): Code for the condition* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered* [DiagnosticReport](diagnosticreport.html): The code for the report, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code* [List](list.html): What the purpose of this list is* [Medication](medication.html): Returns medications for a specific code* [MedicationAdministration](medicationadministration.html): Return administrations of this medication code* [MedicationDispense](medicationdispense.html): Returns dispenses of this medicine code* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication code* [MedicationStatement](medicationstatement.html): Return statements of this medication code* [Observation](observation.html): The code of the observation type* [Procedure](procedure.html): A code to identify a  procedure* [ServiceRequest](servicerequest.html): What is being requested/ordered",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "subject",
            "description": "Search by subject",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "part-of",
            "description": "Part of referenced event",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "reason-code",
            "description": "Coded reason procedure performed",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "based-on",
            "description": "A request for this procedure",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "instantiates-uri",
            "description": "Instantiates external protocol or definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "performer",
            "description": "The reference to the practitioner",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "instantiates-canonical",
            "description": "Instantiates FHIR protocol or definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "encounter",
            "description": "Multiple Resources: * [Composition](composition.html): Context of the Composition* [DeviceRequest](devicerequest.html): Encounter during which request was created* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made* [DocumentReference](documentreference.html): Context of the document  content* [Flag](flag.html): Alert relevant during encounter* [List](list.html): Context in which list created* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier* [Observation](observation.html): Encounter related to the observation* [Procedure](procedure.html): Encounter created as part of* [RiskAssessment](riskassessment.html): Where was assessment performed?* [ServiceRequest](servicerequest.html): An encounter in which this request is made* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "reason-reference",
            "description": "The justification that the procedure was performed",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "in": "query",
            "name": "location",
            "description": "Where the procedure happened",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "category",
            "description": "Classification of the procedure",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "status",
            "description": "preparation | in-progress | not-done | on-hold | stopped | completed | entered-in-error | unknown",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Procedure"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Procedure/_search": {
      "post": {
        "summary": "Search Procedures",
        "description": "Search across all Procedure instances",
        "operationId": "SearchPostProcedure",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "code",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "subject",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "part-of",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "reason-code",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "based-on",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "instantiates-uri",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "performer",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "instantiates-canonical",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "encounter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "reason-reference",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "location",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "category",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Procedure"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Provenance/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a Provenance instance",
        "description": "VRead a Provenance instance",
        "operationId": "VReadProvenance",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Provenance"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Provenance/{id}": {
      "get": {
        "summary": "Read a Provenance instance",
        "description": "Read a Provenance instance",
        "operationId": "ReadProvenance",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Provenance"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Provenance": {
      "get": {
        "summary": "Search Provenances",
        "description": "Search across all Provenance instances",
        "operationId": "SearchGetProvenance",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "agent-type",
            "description": "How the agent participated",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "agent",
            "description": "Who participated",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "signature-type",
            "description": "Indication of the reason the entity signed the object(s)",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "recorded",
            "description": "When the activity was recorded / updated",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "when",
            "description": "When the activity occurred",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "target",
            "description": "Target Reference(s) (usually version specific)",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "Target Reference(s) (usually version specific)",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "in": "query",
            "name": "location",
            "description": "Where the activity occurred, if relevant",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "agent-role",
            "description": "What the agents role was",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "entity",
            "description": "Identity of entity",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Provenance"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Provenance/_search": {
      "post": {
        "summary": "Search Provenances",
        "description": "Search across all Provenance instances",
        "operationId": "SearchPostProvenance",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "agent-type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "agent",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "signature-type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "recorded",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "when",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "target",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "location",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "agent-role",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "entity",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Provenance"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Questionnaire/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a Questionnaire instance",
        "description": "VRead a Questionnaire instance",
        "operationId": "VReadQuestionnaire",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Questionnaire"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Questionnaire/{id}": {
      "get": {
        "summary": "Read a Questionnaire instance",
        "description": "Read a Questionnaire instance",
        "operationId": "ReadQuestionnaire",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Questionnaire"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Questionnaire": {
      "get": {
        "summary": "Search Questionnaires",
        "description": "Search across all Questionnaire instances",
        "operationId": "SearchGetQuestionnaire",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "The questionnaire publication date",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "code",
            "description": "A code that corresponds to one of its items in the questionnaire",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type-value",
            "description": "A use context type and value assigned to the questionnaire",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "jurisdiction",
            "description": "Intended jurisdiction for the questionnaire",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "description",
            "description": "The description of the questionnaire",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type",
            "description": "A type of use context assigned to the questionnaire",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "title",
            "description": "The human-friendly name of the questionnaire",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-quantity",
            "description": "A quantity- or range-valued use context assigned to the questionnaire",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "effective",
            "description": "The time during which the questionnaire is intended to be in use",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context",
            "description": "A use context assigned to the questionnaire",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "definition",
            "description": "ElementDefinition - details for the item",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type-quantity",
            "description": "A use context type and quantity- or range-based value assigned to the questionnaire",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "External identifier for the questionnaire",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "version",
            "description": "The business version of the questionnaire",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "url",
            "description": "The uri that identifies the questionnaire",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "subject-type",
            "description": "Resource that can be subject of QuestionnaireResponse",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Computationally friendly name of the questionnaire",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "publisher",
            "description": "Name of the publisher of the questionnaire",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "status",
            "description": "The current status of the questionnaire",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Questionnaire"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Questionnaire/_search": {
      "post": {
        "summary": "Search Questionnaires",
        "description": "Search across all Questionnaire instances",
        "operationId": "SearchPostQuestionnaire",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "code",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type-value",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "jurisdiction",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "description",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "title",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "effective",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "definition",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "version",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "url",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "subject-type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "publisher",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Questionnaire"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/QuestionnaireResponse/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a QuestionnaireResponse instance",
        "description": "VRead a QuestionnaireResponse instance",
        "operationId": "VReadQuestionnaireResponse",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuestionnaireResponse"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/QuestionnaireResponse/{id}": {
      "get": {
        "summary": "Read a QuestionnaireResponse instance",
        "description": "Read a QuestionnaireResponse instance",
        "operationId": "ReadQuestionnaireResponse",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuestionnaireResponse"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/QuestionnaireResponse": {
      "get": {
        "summary": "Search QuestionnaireResponses",
        "description": "Search across all QuestionnaireResponse instances",
        "operationId": "SearchGetQuestionnaireResponse",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "authored",
            "description": "When the questionnaire response was last changed",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "The unique identifier for the questionnaire response",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "questionnaire",
            "description": "The questionnaire the answers are provided for",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "author",
            "description": "The author of the questionnaire response",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "subject",
            "description": "The subject of the questionnaire response",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "part-of",
            "description": "Procedure or observation this questionnaire response was performed as a part of",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "encounter",
            "description": "Encounter associated with the questionnaire response",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "source",
            "description": "The individual providing the information reflected in the questionnaire respose",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "based-on",
            "description": "Plan/proposal/order fulfilled by this questionnaire response",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "The patient that is the subject of the questionnaire response",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "status",
            "description": "The status of the questionnaire response",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuestionnaireResponse"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/QuestionnaireResponse/_search": {
      "post": {
        "summary": "Search QuestionnaireResponses",
        "description": "Search across all QuestionnaireResponse instances",
        "operationId": "SearchPostQuestionnaireResponse",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "authored",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "questionnaire",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "author",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "subject",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "part-of",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "encounter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "based-on",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuestionnaireResponse"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/RelatedPerson/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a RelatedPerson instance",
        "description": "VRead a RelatedPerson instance",
        "operationId": "VReadRelatedPerson",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RelatedPerson"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/RelatedPerson/{id}": {
      "get": {
        "summary": "Read a RelatedPerson instance",
        "description": "Read a RelatedPerson instance",
        "operationId": "ReadRelatedPerson",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RelatedPerson"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/RelatedPerson": {
      "get": {
        "summary": "Search RelatedPersons",
        "description": "Search across all RelatedPerson instances",
        "operationId": "SearchGetRelatedPerson",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "birthdate",
            "description": "Multiple Resources: * [Patient](patient.html): The patient's date of birth* [Person](person.html): The person's date of birth* [RelatedPerson](relatedperson.html): The Related Person's date of birth",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "address-state",
            "description": "Multiple Resources: * [Patient](patient.html): A state specified in an address* [Person](person.html): A state specified in an address* [Practitioner](practitioner.html): A state specified in an address* [RelatedPerson](relatedperson.html): A state specified in an address",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "gender",
            "description": "Multiple Resources: * [Patient](patient.html): Gender of the patient* [Person](person.html): The gender of the person* [Practitioner](practitioner.html): Gender of the practitioner* [RelatedPerson](relatedperson.html): Gender of the related person",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "address-country",
            "description": "Multiple Resources: * [Patient](patient.html): A country specified in an address* [Person](person.html): A country specified in an address* [Practitioner](practitioner.html): A country specified in an address* [RelatedPerson](relatedperson.html): A country specified in an address",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "phonetic",
            "description": "Multiple Resources: * [Patient](patient.html): A portion of either family or given name using some kind of phonetic matching algorithm* [Person](person.html): A portion of name using some kind of phonetic matching algorithm* [Practitioner](practitioner.html): A portion of either family or given name using some kind of phonetic matching algorithm* [RelatedPerson](relatedperson.html): A portion of name using some kind of phonetic matching algorithm",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "The patient this related person is related to",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "telecom",
            "description": "Multiple Resources: * [Patient](patient.html): The value in any kind of telecom details of the patient* [Person](person.html): The value in any kind of contact* [Practitioner](practitioner.html): The value in any kind of contact* [PractitionerRole](practitionerrole.html): The value in any kind of contact* [RelatedPerson](relatedperson.html): The value in any kind of contact",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "address-city",
            "description": "Multiple Resources: * [Patient](patient.html): A city specified in an address* [Person](person.html): A city specified in an address* [Practitioner](practitioner.html): A city specified in an address* [RelatedPerson](relatedperson.html): A city specified in an address",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "relationship",
            "description": "The relationship between the patient and the relatedperson",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "email",
            "description": "Multiple Resources: * [Patient](patient.html): A value in an email contact* [Person](person.html): A value in an email contact* [Practitioner](practitioner.html): A value in an email contact* [PractitionerRole](practitionerrole.html): A value in an email contact* [RelatedPerson](relatedperson.html): A value in an email contact",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "An Identifier of the RelatedPerson",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "address",
            "description": "Multiple Resources: * [Patient](patient.html): A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text* [Person](person.html): A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text* [Practitioner](practitioner.html): A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text* [RelatedPerson](relatedperson.html): A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "active",
            "description": "Indicates if the related person record is active",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "address-postalcode",
            "description": "Multiple Resources: * [Patient](patient.html): A postalCode specified in an address* [Person](person.html): A postal code specified in an address* [Practitioner](practitioner.html): A postalCode specified in an address* [RelatedPerson](relatedperson.html): A postal code specified in an address",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "phone",
            "description": "Multiple Resources: * [Patient](patient.html): A value in a phone contact* [Person](person.html): A value in a phone contact* [Practitioner](practitioner.html): A value in a phone contact* [PractitionerRole](practitionerrole.html): A value in a phone contact* [RelatedPerson](relatedperson.html): A value in a phone contact",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "address-use",
            "description": "Multiple Resources: * [Patient](patient.html): A use code specified in an address* [Person](person.html): A use code specified in an address* [Practitioner](practitioner.html): A use code specified in an address* [RelatedPerson](relatedperson.html): A use code specified in an address",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "name",
            "description": "A server defined search that may match any of the string fields in the HumanName, including family, give, prefix, suffix, suffix, and/or text",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RelatedPerson"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/RelatedPerson/_search": {
      "post": {
        "summary": "Search RelatedPersons",
        "description": "Search across all RelatedPerson instances",
        "operationId": "SearchPostRelatedPerson",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "birthdate",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "address-state",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "gender",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "address-country",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "phonetic",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "telecom",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "address-city",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "relationship",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "email",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "address",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "active",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "address-postalcode",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "phone",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "address-use",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RelatedPerson"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/RequestGroup/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a RequestGroup instance",
        "description": "VRead a RequestGroup instance",
        "operationId": "VReadRequestGroup",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RequestGroup"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/RequestGroup/{id}": {
      "get": {
        "summary": "Read a RequestGroup instance",
        "description": "Read a RequestGroup instance",
        "operationId": "ReadRequestGroup",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RequestGroup"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/RequestGroup": {
      "get": {
        "summary": "Search RequestGroups",
        "description": "Search across all RequestGroup instances",
        "operationId": "SearchGetRequestGroup",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "authored",
            "description": "The date the request group was authored",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "External identifiers for the request group",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "code",
            "description": "The code of the request group",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "author",
            "description": "The author of the request group",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "subject",
            "description": "The subject that the request group is about",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "instantiates-canonical",
            "description": "The FHIR-based definition from which the request group is realized",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "encounter",
            "description": "The encounter the request group applies to",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "priority",
            "description": "The priority of the request group",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "intent",
            "description": "The intent of the request group",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "participant",
            "description": "The participant in the requests in the group",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "group-identifier",
            "description": "The group identifier for the request group",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "The identity of a patient to search for request groups",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "in": "query",
            "name": "instantiates-uri",
            "description": "The external definition from which the request group is realized",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "status",
            "description": "The status of the request group",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RequestGroup"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/RequestGroup/_search": {
      "post": {
        "summary": "Search RequestGroups",
        "description": "Search across all RequestGroup instances",
        "operationId": "SearchPostRequestGroup",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "authored",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "code",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "author",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "subject",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "instantiates-canonical",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "encounter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "priority",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "intent",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "participant",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "group-identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "instantiates-uri",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RequestGroup"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ResearchDefinition/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a ResearchDefinition instance",
        "description": "VRead a ResearchDefinition instance",
        "operationId": "VReadResearchDefinition",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResearchDefinition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ResearchDefinition/{id}": {
      "get": {
        "summary": "Read a ResearchDefinition instance",
        "description": "Read a ResearchDefinition instance",
        "operationId": "ReadResearchDefinition",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResearchDefinition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ResearchDefinition": {
      "get": {
        "summary": "Search ResearchDefinitions",
        "description": "Search across all ResearchDefinition instances",
        "operationId": "SearchGetResearchDefinition",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "The research definition publication date",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "successor",
            "description": "What resource is being referenced",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type-value",
            "description": "A use context type and value assigned to the research definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "jurisdiction",
            "description": "Intended jurisdiction for the research definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "derived-from",
            "description": "What resource is being referenced",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "description",
            "description": "The description of the research definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type",
            "description": "A type of use context assigned to the research definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "predecessor",
            "description": "What resource is being referenced",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "composed-of",
            "description": "What resource is being referenced",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "title",
            "description": "The human-friendly name of the research definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-quantity",
            "description": "A quantity- or range-valued use context assigned to the research definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "depends-on",
            "description": "What resource is being referenced",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "effective",
            "description": "The time during which the research definition is intended to be in use",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context",
            "description": "A use context assigned to the research definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type-quantity",
            "description": "A use context type and quantity- or range-based value assigned to the research definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "External identifier for the research definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "version",
            "description": "The business version of the research definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "url",
            "description": "The uri that identifies the research definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Computationally friendly name of the research definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "publisher",
            "description": "Name of the publisher of the research definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "topic",
            "description": "Topics associated with the ResearchDefinition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "status",
            "description": "The current status of the research definition",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResearchDefinition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ResearchDefinition/_search": {
      "post": {
        "summary": "Search ResearchDefinitions",
        "description": "Search across all ResearchDefinition instances",
        "operationId": "SearchPostResearchDefinition",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "successor",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type-value",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "jurisdiction",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "derived-from",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "description",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "predecessor",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "composed-of",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "title",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "depends-on",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "effective",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "version",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "url",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "publisher",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "topic",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResearchDefinition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ResearchElementDefinition/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a ResearchElementDefinition instance",
        "description": "VRead a ResearchElementDefinition instance",
        "operationId": "VReadResearchElementDefinition",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResearchElementDefinition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ResearchElementDefinition/{id}": {
      "get": {
        "summary": "Read a ResearchElementDefinition instance",
        "description": "Read a ResearchElementDefinition instance",
        "operationId": "ReadResearchElementDefinition",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResearchElementDefinition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ResearchElementDefinition": {
      "get": {
        "summary": "Search ResearchElementDefinitions",
        "description": "Search across all ResearchElementDefinition instances",
        "operationId": "SearchGetResearchElementDefinition",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "The research element definition publication date",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "successor",
            "description": "What resource is being referenced",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type-value",
            "description": "A use context type and value assigned to the research element definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "jurisdiction",
            "description": "Intended jurisdiction for the research element definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "derived-from",
            "description": "What resource is being referenced",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "description",
            "description": "The description of the research element definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type",
            "description": "A type of use context assigned to the research element definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "predecessor",
            "description": "What resource is being referenced",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "composed-of",
            "description": "What resource is being referenced",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "title",
            "description": "The human-friendly name of the research element definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-quantity",
            "description": "A quantity- or range-valued use context assigned to the research element definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "depends-on",
            "description": "What resource is being referenced",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "effective",
            "description": "The time during which the research element definition is intended to be in use",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context",
            "description": "A use context assigned to the research element definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type-quantity",
            "description": "A use context type and quantity- or range-based value assigned to the research element definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "External identifier for the research element definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "version",
            "description": "The business version of the research element definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "url",
            "description": "The uri that identifies the research element definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Computationally friendly name of the research element definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "publisher",
            "description": "Name of the publisher of the research element definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "topic",
            "description": "Topics associated with the ResearchElementDefinition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "status",
            "description": "The current status of the research element definition",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResearchElementDefinition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ResearchElementDefinition/_search": {
      "post": {
        "summary": "Search ResearchElementDefinitions",
        "description": "Search across all ResearchElementDefinition instances",
        "operationId": "SearchPostResearchElementDefinition",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "successor",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type-value",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "jurisdiction",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "derived-from",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "description",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "predecessor",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "composed-of",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "title",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "depends-on",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "effective",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "version",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "url",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "publisher",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "topic",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResearchElementDefinition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ResearchStudy/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a ResearchStudy instance",
        "description": "VRead a ResearchStudy instance",
        "operationId": "VReadResearchStudy",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResearchStudy"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ResearchStudy/{id}": {
      "get": {
        "summary": "Read a ResearchStudy instance",
        "description": "Read a ResearchStudy instance",
        "operationId": "ReadResearchStudy",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResearchStudy"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ResearchStudy": {
      "get": {
        "summary": "Search ResearchStudys",
        "description": "Search across all ResearchStudy instances",
        "operationId": "SearchGetResearchStudy",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "When the study began and ended",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "Business Identifier for study",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "partof",
            "description": "Part of larger study",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "sponsor",
            "description": "Organization that initiates and is legally responsible for the study",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "focus",
            "description": "Drugs, devices, etc. under study",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "principalinvestigator",
            "description": "Researcher who oversees multiple aspects of the study",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "title",
            "description": "Name for this study",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "protocol",
            "description": "Steps followed in executing study",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "site",
            "description": "Facility where study activities are conducted",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "in": "query",
            "name": "location",
            "description": "Geographic region(s) for study",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "category",
            "description": "Classifications for the study",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "keyword",
            "description": "Used to search for the study",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "status",
            "description": "active | administratively-completed | approved | closed-to-accrual | closed-to-accrual-and-intervention | completed | disapproved | in-review | temporarily-closed-to-accrual | temporarily-closed-to-accrual-and-intervention | withdrawn",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResearchStudy"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ResearchStudy/_search": {
      "post": {
        "summary": "Search ResearchStudys",
        "description": "Search across all ResearchStudy instances",
        "operationId": "SearchPostResearchStudy",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "partof",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "sponsor",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "focus",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "principalinvestigator",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "title",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "protocol",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "site",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "location",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "category",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "keyword",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResearchStudy"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ResearchSubject/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a ResearchSubject instance",
        "description": "VRead a ResearchSubject instance",
        "operationId": "VReadResearchSubject",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResearchSubject"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ResearchSubject/{id}": {
      "get": {
        "summary": "Read a ResearchSubject instance",
        "description": "Read a ResearchSubject instance",
        "operationId": "ReadResearchSubject",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResearchSubject"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ResearchSubject": {
      "get": {
        "summary": "Search ResearchSubjects",
        "description": "Search across all ResearchSubject instances",
        "operationId": "SearchGetResearchSubject",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "Start and end of participation",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "Business Identifier for research subject in a study",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "study",
            "description": "Study subject is part of",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "individual",
            "description": "Who is part of study",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "Who is part of study",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "status",
            "description": "candidate | eligible | follow-up | ineligible | not-registered | off-study | on-study | on-study-intervention | on-study-observation | pending-on-study | potential-candidate | screening | withdrawn",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResearchSubject"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ResearchSubject/_search": {
      "post": {
        "summary": "Search ResearchSubjects",
        "description": "Search across all ResearchSubject instances",
        "operationId": "SearchPostResearchSubject",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "study",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "individual",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResearchSubject"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/RiskAssessment/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a RiskAssessment instance",
        "description": "VRead a RiskAssessment instance",
        "operationId": "VReadRiskAssessment",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RiskAssessment"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/RiskAssessment/{id}": {
      "get": {
        "summary": "Read a RiskAssessment instance",
        "description": "Read a RiskAssessment instance",
        "operationId": "ReadRiskAssessment",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RiskAssessment"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/RiskAssessment": {
      "get": {
        "summary": "Search RiskAssessments",
        "description": "Search across all RiskAssessment instances",
        "operationId": "SearchGetRiskAssessment",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Date first version of the resource instance was recorded* [CarePlan](careplan.html): Time period plan covers* [CareTeam](careteam.html): Time period team covers* [ClinicalImpression](clinicalimpression.html): When the assessment was documented* [Composition](composition.html): Composition editing time* [Consent](consent.html): When this Consent was created or indexed* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report* [Encounter](encounter.html): A date within the period the Encounter lasted* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period* [FamilyMemberHistory](familymemberhistory.html): When history was recorded or last updated* [Flag](flag.html): Time period when flag is active* [Immunization](immunization.html): Vaccination  (non)-Administration Date* [List](list.html): When the list was prepared* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period* [Procedure](procedure.html): When the procedure was performed* [RiskAssessment](riskassessment.html): When was assessment made?* [SupplyRequest](supplyrequest.html): When the request was made",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "performer",
            "description": "Who did assessment?",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "method",
            "description": "Evaluation mechanism",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "probability",
            "description": "Likelihood of specified outcome",
            "type": "number",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "subject",
            "description": "Who/what does assessment apply to?",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "encounter",
            "description": "Multiple Resources: * [Composition](composition.html): Context of the Composition* [DeviceRequest](devicerequest.html): Encounter during which request was created* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made* [DocumentReference](documentreference.html): Context of the document  content* [Flag](flag.html): Alert relevant during encounter* [List](list.html): Context in which list created* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier* [Observation](observation.html): Encounter related to the observation* [Procedure](procedure.html): Encounter created as part of* [RiskAssessment](riskassessment.html): Where was assessment performed?* [ServiceRequest](servicerequest.html): An encounter in which this request is made* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "condition",
            "description": "Condition assessed",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "in": "query",
            "name": "risk",
            "description": "Likelihood of specified outcome as a qualitative value",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RiskAssessment"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/RiskAssessment/_search": {
      "post": {
        "summary": "Search RiskAssessments",
        "description": "Search across all RiskAssessment instances",
        "operationId": "SearchPostRiskAssessment",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "performer",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "method",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "probability",
            "type": "number"
          },
          {
            "in": "formData",
            "name": "subject",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "encounter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "condition",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "risk",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RiskAssessment"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/RiskEvidenceSynthesis/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a RiskEvidenceSynthesis instance",
        "description": "VRead a RiskEvidenceSynthesis instance",
        "operationId": "VReadRiskEvidenceSynthesis",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RiskEvidenceSynthesis"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/RiskEvidenceSynthesis/{id}": {
      "get": {
        "summary": "Read a RiskEvidenceSynthesis instance",
        "description": "Read a RiskEvidenceSynthesis instance",
        "operationId": "ReadRiskEvidenceSynthesis",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RiskEvidenceSynthesis"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/RiskEvidenceSynthesis": {
      "get": {
        "summary": "Search RiskEvidenceSynthesiss",
        "description": "Search across all RiskEvidenceSynthesis instances",
        "operationId": "SearchGetRiskEvidenceSynthesis",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "The risk evidence synthesis publication date",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type-value",
            "description": "A use context type and value assigned to the risk evidence synthesis",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "jurisdiction",
            "description": "Intended jurisdiction for the risk evidence synthesis",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "description",
            "description": "The description of the risk evidence synthesis",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type",
            "description": "A type of use context assigned to the risk evidence synthesis",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "title",
            "description": "The human-friendly name of the risk evidence synthesis",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-quantity",
            "description": "A quantity- or range-valued use context assigned to the risk evidence synthesis",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "effective",
            "description": "The time during which the risk evidence synthesis is intended to be in use",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context",
            "description": "A use context assigned to the risk evidence synthesis",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type-quantity",
            "description": "A use context type and quantity- or range-based value assigned to the risk evidence synthesis",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "External identifier for the risk evidence synthesis",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "version",
            "description": "The business version of the risk evidence synthesis",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "url",
            "description": "The uri that identifies the risk evidence synthesis",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Computationally friendly name of the risk evidence synthesis",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "publisher",
            "description": "Name of the publisher of the risk evidence synthesis",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "status",
            "description": "The current status of the risk evidence synthesis",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RiskEvidenceSynthesis"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/RiskEvidenceSynthesis/_search": {
      "post": {
        "summary": "Search RiskEvidenceSynthesiss",
        "description": "Search across all RiskEvidenceSynthesis instances",
        "operationId": "SearchPostRiskEvidenceSynthesis",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type-value",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "jurisdiction",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "description",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "title",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "effective",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "version",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "url",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "publisher",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RiskEvidenceSynthesis"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Schedule/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a Schedule instance",
        "description": "VRead a Schedule instance",
        "operationId": "VReadSchedule",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Schedule"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Schedule/{id}": {
      "get": {
        "summary": "Read a Schedule instance",
        "description": "Read a Schedule instance",
        "operationId": "ReadSchedule",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Schedule"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Schedule": {
      "get": {
        "summary": "Search Schedules",
        "description": "Search across all Schedule instances",
        "operationId": "SearchGetSchedule",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "Search for Schedule resources that have a period that contains this date specified",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "A Schedule Identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "specialty",
            "description": "Type of specialty needed",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "service-category",
            "description": "High-level category",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "service-type",
            "description": "The type of appointments that can be booked into associated slot(s)",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "active",
            "description": "Is the schedule in active use",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "actor",
            "description": "The individual(HealthcareService, Practitioner, Location, ...) to find a Schedule for",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Schedule"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Schedule/_search": {
      "post": {
        "summary": "Search Schedules",
        "description": "Search across all Schedule instances",
        "operationId": "SearchPostSchedule",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "specialty",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "service-category",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "service-type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "active",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "actor",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Schedule"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/SearchParameter/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a SearchParameter instance",
        "description": "VRead a SearchParameter instance",
        "operationId": "VReadSearchParameter",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SearchParameter"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/SearchParameter/{id}": {
      "get": {
        "summary": "Read a SearchParameter instance",
        "description": "Read a SearchParameter instance",
        "operationId": "ReadSearchParameter",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SearchParameter"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/SearchParameter": {
      "get": {
        "summary": "Search SearchParameters",
        "description": "Search across all SearchParameter instances",
        "operationId": "SearchGetSearchParameter",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The capability statement publication date* [CodeSystem](codesystem.html): The code system publication date* [CompartmentDefinition](compartmentdefinition.html): The compartment definition publication date* [ConceptMap](conceptmap.html): The concept map publication date* [GraphDefinition](graphdefinition.html): The graph definition publication date* [ImplementationGuide](implementationguide.html): The implementation guide publication date* [MessageDefinition](messagedefinition.html): The message definition publication date* [NamingSystem](namingsystem.html): The naming system publication date* [OperationDefinition](operationdefinition.html): The operation definition publication date* [SearchParameter](searchparameter.html): The search parameter publication date* [StructureDefinition](structuredefinition.html): The structure definition publication date* [StructureMap](structuremap.html): The structure map publication date* [TerminologyCapabilities](terminologycapabilities.html): The terminology capabilities publication date* [ValueSet](valueset.html): The value set publication date",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "code",
            "description": "Code used in URL",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type-value",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A use context type and value assigned to the capability statement* [CodeSystem](codesystem.html): A use context type and value assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A use context type and value assigned to the compartment definition* [ConceptMap](conceptmap.html): A use context type and value assigned to the concept map* [GraphDefinition](graphdefinition.html): A use context type and value assigned to the graph definition* [ImplementationGuide](implementationguide.html): A use context type and value assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A use context type and value assigned to the message definition* [NamingSystem](namingsystem.html): A use context type and value assigned to the naming system* [OperationDefinition](operationdefinition.html): A use context type and value assigned to the operation definition* [SearchParameter](searchparameter.html): A use context type and value assigned to the search parameter* [StructureDefinition](structuredefinition.html): A use context type and value assigned to the structure definition* [StructureMap](structuremap.html): A use context type and value assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A use context type and value assigned to the terminology capabilities* [ValueSet](valueset.html): A use context type and value assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "jurisdiction",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Intended jurisdiction for the capability statement* [CodeSystem](codesystem.html): Intended jurisdiction for the code system* [ConceptMap](conceptmap.html): Intended jurisdiction for the concept map* [GraphDefinition](graphdefinition.html): Intended jurisdiction for the graph definition* [ImplementationGuide](implementationguide.html): Intended jurisdiction for the implementation guide* [MessageDefinition](messagedefinition.html): Intended jurisdiction for the message definition* [NamingSystem](namingsystem.html): Intended jurisdiction for the naming system* [OperationDefinition](operationdefinition.html): Intended jurisdiction for the operation definition* [SearchParameter](searchparameter.html): Intended jurisdiction for the search parameter* [StructureDefinition](structuredefinition.html): Intended jurisdiction for the structure definition* [StructureMap](structuremap.html): Intended jurisdiction for the structure map* [TerminologyCapabilities](terminologycapabilities.html): Intended jurisdiction for the terminology capabilities* [ValueSet](valueset.html): Intended jurisdiction for the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "description",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The description of the capability statement* [CodeSystem](codesystem.html): The description of the code system* [CompartmentDefinition](compartmentdefinition.html): The description of the compartment definition* [ConceptMap](conceptmap.html): The description of the concept map* [GraphDefinition](graphdefinition.html): The description of the graph definition* [ImplementationGuide](implementationguide.html): The description of the implementation guide* [MessageDefinition](messagedefinition.html): The description of the message definition* [NamingSystem](namingsystem.html): The description of the naming system* [OperationDefinition](operationdefinition.html): The description of the operation definition* [SearchParameter](searchparameter.html): The description of the search parameter* [StructureDefinition](structuredefinition.html): The description of the structure definition* [StructureMap](structuremap.html): The description of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The description of the terminology capabilities* [ValueSet](valueset.html): The description of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "derived-from",
            "description": "Original definition for the search parameter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A type of use context assigned to the capability statement* [CodeSystem](codesystem.html): A type of use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A type of use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A type of use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A type of use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A type of use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A type of use context assigned to the message definition* [NamingSystem](namingsystem.html): A type of use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A type of use context assigned to the operation definition* [SearchParameter](searchparameter.html): A type of use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A type of use context assigned to the structure definition* [StructureMap](structuremap.html): A type of use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A type of use context assigned to the terminology capabilities* [ValueSet](valueset.html): A type of use context assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "type",
            "description": "number | date | string | token | reference | composite | quantity | uri | special",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-quantity",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A quantity- or range-valued use context assigned to the capability statement* [CodeSystem](codesystem.html): A quantity- or range-valued use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A quantity- or range-valued use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A quantity- or range-valued use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A quantity- or range-valued use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A quantity- or range-valued use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A quantity- or range-valued use context assigned to the message definition* [NamingSystem](namingsystem.html): A quantity- or range-valued use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A quantity- or range-valued use context assigned to the operation definition* [SearchParameter](searchparameter.html): A quantity- or range-valued use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A quantity- or range-valued use context assigned to the structure definition* [StructureMap](structuremap.html): A quantity- or range-valued use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A quantity- or range-valued use context assigned to the terminology capabilities* [ValueSet](valueset.html): A quantity- or range-valued use context assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A use context assigned to the capability statement* [CodeSystem](codesystem.html): A use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A use context assigned to the message definition* [NamingSystem](namingsystem.html): A use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A use context assigned to the operation definition* [SearchParameter](searchparameter.html): A use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A use context assigned to the structure definition* [StructureMap](structuremap.html): A use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A use context assigned to the terminology capabilities* [ValueSet](valueset.html): A use context assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type-quantity",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A use context type and quantity- or range-based value assigned to the capability statement* [CodeSystem](codesystem.html): A use context type and quantity- or range-based value assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A use context type and quantity- or range-based value assigned to the compartment definition* [ConceptMap](conceptmap.html): A use context type and quantity- or range-based value assigned to the concept map* [GraphDefinition](graphdefinition.html): A use context type and quantity- or range-based value assigned to the graph definition* [ImplementationGuide](implementationguide.html): A use context type and quantity- or range-based value assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A use context type and quantity- or range-based value assigned to the message definition* [NamingSystem](namingsystem.html): A use context type and quantity- or range-based value assigned to the naming system* [OperationDefinition](operationdefinition.html): A use context type and quantity- or range-based value assigned to the operation definition* [SearchParameter](searchparameter.html): A use context type and quantity- or range-based value assigned to the search parameter* [StructureDefinition](structuredefinition.html): A use context type and quantity- or range-based value assigned to the structure definition* [StructureMap](structuremap.html): A use context type and quantity- or range-based value assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A use context type and quantity- or range-based value assigned to the terminology capabilities* [ValueSet](valueset.html): A use context type and quantity- or range-based value assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "version",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The business version of the capability statement* [CodeSystem](codesystem.html): The business version of the code system* [CompartmentDefinition](compartmentdefinition.html): The business version of the compartment definition* [ConceptMap](conceptmap.html): The business version of the concept map* [GraphDefinition](graphdefinition.html): The business version of the graph definition* [ImplementationGuide](implementationguide.html): The business version of the implementation guide* [MessageDefinition](messagedefinition.html): The business version of the message definition* [OperationDefinition](operationdefinition.html): The business version of the operation definition* [SearchParameter](searchparameter.html): The business version of the search parameter* [StructureDefinition](structuredefinition.html): The business version of the structure definition* [StructureMap](structuremap.html): The business version of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The business version of the terminology capabilities* [ValueSet](valueset.html): The business version of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "url",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The uri that identifies the capability statement* [CodeSystem](codesystem.html): The uri that identifies the code system* [CompartmentDefinition](compartmentdefinition.html): The uri that identifies the compartment definition* [ConceptMap](conceptmap.html): The uri that identifies the concept map* [GraphDefinition](graphdefinition.html): The uri that identifies the graph definition* [ImplementationGuide](implementationguide.html): The uri that identifies the implementation guide* [MessageDefinition](messagedefinition.html): The uri that identifies the message definition* [OperationDefinition](operationdefinition.html): The uri that identifies the operation definition* [SearchParameter](searchparameter.html): The uri that identifies the search parameter* [StructureDefinition](structuredefinition.html): The uri that identifies the structure definition* [StructureMap](structuremap.html): The uri that identifies the structure map* [TerminologyCapabilities](terminologycapabilities.html): The uri that identifies the terminology capabilities* [ValueSet](valueset.html): The uri that identifies the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "target",
            "description": "Types of resource (if a resource reference)",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "component",
            "description": "Defines how the part works",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Computationally friendly name of the capability statement* [CodeSystem](codesystem.html): Computationally friendly name of the code system* [CompartmentDefinition](compartmentdefinition.html): Computationally friendly name of the compartment definition* [ConceptMap](conceptmap.html): Computationally friendly name of the concept map* [GraphDefinition](graphdefinition.html): Computationally friendly name of the graph definition* [ImplementationGuide](implementationguide.html): Computationally friendly name of the implementation guide* [MessageDefinition](messagedefinition.html): Computationally friendly name of the message definition* [NamingSystem](namingsystem.html): Computationally friendly name of the naming system* [OperationDefinition](operationdefinition.html): Computationally friendly name of the operation definition* [SearchParameter](searchparameter.html): Computationally friendly name of the search parameter* [StructureDefinition](structuredefinition.html): Computationally friendly name of the structure definition* [StructureMap](structuremap.html): Computationally friendly name of the structure map* [TerminologyCapabilities](terminologycapabilities.html): Computationally friendly name of the terminology capabilities* [ValueSet](valueset.html): Computationally friendly name of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "publisher",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Name of the publisher of the capability statement* [CodeSystem](codesystem.html): Name of the publisher of the code system* [CompartmentDefinition](compartmentdefinition.html): Name of the publisher of the compartment definition* [ConceptMap](conceptmap.html): Name of the publisher of the concept map* [GraphDefinition](graphdefinition.html): Name of the publisher of the graph definition* [ImplementationGuide](implementationguide.html): Name of the publisher of the implementation guide* [MessageDefinition](messagedefinition.html): Name of the publisher of the message definition* [NamingSystem](namingsystem.html): Name of the publisher of the naming system* [OperationDefinition](operationdefinition.html): Name of the publisher of the operation definition* [SearchParameter](searchparameter.html): Name of the publisher of the search parameter* [StructureDefinition](structuredefinition.html): Name of the publisher of the structure definition* [StructureMap](structuremap.html): Name of the publisher of the structure map* [TerminologyCapabilities](terminologycapabilities.html): Name of the publisher of the terminology capabilities* [ValueSet](valueset.html): Name of the publisher of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "status",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The current status of the capability statement* [CodeSystem](codesystem.html): The current status of the code system* [CompartmentDefinition](compartmentdefinition.html): The current status of the compartment definition* [ConceptMap](conceptmap.html): The current status of the concept map* [GraphDefinition](graphdefinition.html): The current status of the graph definition* [ImplementationGuide](implementationguide.html): The current status of the implementation guide* [MessageDefinition](messagedefinition.html): The current status of the message definition* [NamingSystem](namingsystem.html): The current status of the naming system* [OperationDefinition](operationdefinition.html): The current status of the operation definition* [SearchParameter](searchparameter.html): The current status of the search parameter* [StructureDefinition](structuredefinition.html): The current status of the structure definition* [StructureMap](structuremap.html): The current status of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The current status of the terminology capabilities* [ValueSet](valueset.html): The current status of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "base",
            "description": "The resource type(s) this search parameter applies to",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SearchParameter"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/SearchParameter/_search": {
      "post": {
        "summary": "Search SearchParameters",
        "description": "Search across all SearchParameter instances",
        "operationId": "SearchPostSearchParameter",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "code",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type-value",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "jurisdiction",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "description",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "derived-from",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "version",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "url",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "target",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "component",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "publisher",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "base",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SearchParameter"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ServiceRequest/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a ServiceRequest instance",
        "description": "VRead a ServiceRequest instance",
        "operationId": "VReadServiceRequest",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServiceRequest"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ServiceRequest/{id}": {
      "get": {
        "summary": "Read a ServiceRequest instance",
        "description": "Read a ServiceRequest instance",
        "operationId": "ReadServiceRequest",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServiceRequest"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ServiceRequest": {
      "get": {
        "summary": "Search ServiceRequests",
        "description": "Search across all ServiceRequest instances",
        "operationId": "SearchGetServiceRequest",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "authored",
            "description": "Date request signed",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "code",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance* [Condition](condition.html): Code for the condition* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered* [DiagnosticReport](diagnosticreport.html): The code for the report, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code* [List](list.html): What the purpose of this list is* [Medication](medication.html): Returns medications for a specific code* [MedicationAdministration](medicationadministration.html): Return administrations of this medication code* [MedicationDispense](medicationdispense.html): Returns dispenses of this medicine code* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication code* [MedicationStatement](medicationstatement.html): Return statements of this medication code* [Observation](observation.html): The code of the observation type* [Procedure](procedure.html): A code to identify a  procedure* [ServiceRequest](servicerequest.html): What is being requested/ordered",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "requisition",
            "description": "Composite Request ID",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "subject",
            "description": "Search by subject",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "occurrence",
            "description": "When service should occur",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "based-on",
            "description": "What request fulfills",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "specimen",
            "description": "Specimen to be tested",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "instantiates-uri",
            "description": "Instantiates external protocol or definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "requester",
            "description": "Who/what is requesting service",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "performer",
            "description": "Requested performer",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "replaces",
            "description": "What request replaces",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "instantiates-canonical",
            "description": "Instantiates FHIR protocol or definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "encounter",
            "description": "Multiple Resources: * [Composition](composition.html): Context of the Composition* [DeviceRequest](devicerequest.html): Encounter during which request was created* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made* [DocumentReference](documentreference.html): Context of the document  content* [Flag](flag.html): Alert relevant during encounter* [List](list.html): Context in which list created* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier* [Observation](observation.html): Encounter related to the observation* [Procedure](procedure.html): Encounter created as part of* [RiskAssessment](riskassessment.html): Where was assessment performed?* [ServiceRequest](servicerequest.html): An encounter in which this request is made* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "priority",
            "description": "routine | urgent | asap | stat",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "intent",
            "description": "proposal | plan | directive | order | original-order | reflex-order | filler-order | instance-order | option",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "performer-type",
            "description": "Performer role",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "body-site",
            "description": "Where procedure is going to be done",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "category",
            "description": "Classification of service",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "status",
            "description": "draft | active | on-hold | revoked | completed | entered-in-error | unknown",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServiceRequest"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ServiceRequest/_search": {
      "post": {
        "summary": "Search ServiceRequests",
        "description": "Search across all ServiceRequest instances",
        "operationId": "SearchPostServiceRequest",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "authored",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "code",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "requisition",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "subject",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "occurrence",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "based-on",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "specimen",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "instantiates-uri",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "requester",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "performer",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "replaces",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "instantiates-canonical",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "encounter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "priority",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "intent",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "performer-type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "body-site",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "category",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServiceRequest"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Slot/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a Slot instance",
        "description": "VRead a Slot instance",
        "operationId": "VReadSlot",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Slot"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Slot/{id}": {
      "get": {
        "summary": "Read a Slot instance",
        "description": "Read a Slot instance",
        "operationId": "ReadSlot",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Slot"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Slot": {
      "get": {
        "summary": "Search Slots",
        "description": "Search across all Slot instances",
        "operationId": "SearchGetSlot",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "identifier",
            "description": "A Slot Identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "specialty",
            "description": "The specialty of a practitioner that would be required to perform the service requested in this appointment",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "service-category",
            "description": "A broad categorization of the service that is to be performed during this appointment",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "appointment-type",
            "description": "The style of appointment or patient that may be booked in the slot (not service type)",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "service-type",
            "description": "The type of appointments that can be booked into the slot",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "start",
            "description": "Appointment date/time.",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "schedule",
            "description": "The Schedule Resource that we are seeking a slot within",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "status",
            "description": "The free/busy status of the appointment",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Slot"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Slot/_search": {
      "post": {
        "summary": "Search Slots",
        "description": "Search across all Slot instances",
        "operationId": "SearchPostSlot",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "specialty",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "service-category",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "appointment-type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "service-type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "start",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "schedule",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Slot"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Specimen/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a Specimen instance",
        "description": "VRead a Specimen instance",
        "operationId": "VReadSpecimen",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Specimen"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Specimen/{id}": {
      "get": {
        "summary": "Read a Specimen instance",
        "description": "Read a Specimen instance",
        "operationId": "ReadSpecimen",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Specimen"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Specimen": {
      "get": {
        "summary": "Search Specimens",
        "description": "Search across all Specimen instances",
        "operationId": "SearchGetSpecimen",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "container",
            "description": "The kind of specimen container",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "container-id",
            "description": "The unique identifier associated with the specimen container",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "The unique identifier associated with the specimen",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "parent",
            "description": "The parent of the specimen",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "bodysite",
            "description": "The code for the body site from where the specimen originated",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "subject",
            "description": "The subject of the specimen",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "collected",
            "description": "The date the specimen was collected",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "accession",
            "description": "The accession number associated with the specimen",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "type",
            "description": "The specimen type",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "collector",
            "description": "Who collected the specimen",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "The patient the specimen comes from",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "status",
            "description": "available | unavailable | unsatisfactory | entered-in-error",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Specimen"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Specimen/_search": {
      "post": {
        "summary": "Search Specimens",
        "description": "Search across all Specimen instances",
        "operationId": "SearchPostSpecimen",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "container",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "container-id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "parent",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "bodysite",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "subject",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "collected",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "accession",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "collector",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Specimen"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/SpecimenDefinition/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a SpecimenDefinition instance",
        "description": "VRead a SpecimenDefinition instance",
        "operationId": "VReadSpecimenDefinition",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SpecimenDefinition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/SpecimenDefinition/{id}": {
      "get": {
        "summary": "Read a SpecimenDefinition instance",
        "description": "Read a SpecimenDefinition instance",
        "operationId": "ReadSpecimenDefinition",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SpecimenDefinition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/SpecimenDefinition": {
      "get": {
        "summary": "Search SpecimenDefinitions",
        "description": "Search across all SpecimenDefinition instances",
        "operationId": "SearchGetSpecimenDefinition",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "container",
            "description": "The type of specimen conditioned in container expected by the lab",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "The unique identifier associated with the specimen",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "type",
            "description": "The type of collected specimen",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SpecimenDefinition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/SpecimenDefinition/_search": {
      "post": {
        "summary": "Search SpecimenDefinitions",
        "description": "Search across all SpecimenDefinition instances",
        "operationId": "SearchPostSpecimenDefinition",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "container",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SpecimenDefinition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/StructureDefinition/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a StructureDefinition instance",
        "description": "VRead a StructureDefinition instance",
        "operationId": "VReadStructureDefinition",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StructureDefinition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/StructureDefinition/{id}": {
      "get": {
        "summary": "Read a StructureDefinition instance",
        "description": "Read a StructureDefinition instance",
        "operationId": "ReadStructureDefinition",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StructureDefinition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/StructureDefinition": {
      "get": {
        "summary": "Search StructureDefinitions",
        "description": "Search across all StructureDefinition instances",
        "operationId": "SearchGetStructureDefinition",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The capability statement publication date* [CodeSystem](codesystem.html): The code system publication date* [CompartmentDefinition](compartmentdefinition.html): The compartment definition publication date* [ConceptMap](conceptmap.html): The concept map publication date* [GraphDefinition](graphdefinition.html): The graph definition publication date* [ImplementationGuide](implementationguide.html): The implementation guide publication date* [MessageDefinition](messagedefinition.html): The message definition publication date* [NamingSystem](namingsystem.html): The naming system publication date* [OperationDefinition](operationdefinition.html): The operation definition publication date* [SearchParameter](searchparameter.html): The search parameter publication date* [StructureDefinition](structuredefinition.html): The structure definition publication date* [StructureMap](structuremap.html): The structure map publication date* [TerminologyCapabilities](terminologycapabilities.html): The terminology capabilities publication date* [ValueSet](valueset.html): The value set publication date",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type-value",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A use context type and value assigned to the capability statement* [CodeSystem](codesystem.html): A use context type and value assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A use context type and value assigned to the compartment definition* [ConceptMap](conceptmap.html): A use context type and value assigned to the concept map* [GraphDefinition](graphdefinition.html): A use context type and value assigned to the graph definition* [ImplementationGuide](implementationguide.html): A use context type and value assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A use context type and value assigned to the message definition* [NamingSystem](namingsystem.html): A use context type and value assigned to the naming system* [OperationDefinition](operationdefinition.html): A use context type and value assigned to the operation definition* [SearchParameter](searchparameter.html): A use context type and value assigned to the search parameter* [StructureDefinition](structuredefinition.html): A use context type and value assigned to the structure definition* [StructureMap](structuremap.html): A use context type and value assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A use context type and value assigned to the terminology capabilities* [ValueSet](valueset.html): A use context type and value assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "jurisdiction",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Intended jurisdiction for the capability statement* [CodeSystem](codesystem.html): Intended jurisdiction for the code system* [ConceptMap](conceptmap.html): Intended jurisdiction for the concept map* [GraphDefinition](graphdefinition.html): Intended jurisdiction for the graph definition* [ImplementationGuide](implementationguide.html): Intended jurisdiction for the implementation guide* [MessageDefinition](messagedefinition.html): Intended jurisdiction for the message definition* [NamingSystem](namingsystem.html): Intended jurisdiction for the naming system* [OperationDefinition](operationdefinition.html): Intended jurisdiction for the operation definition* [SearchParameter](searchparameter.html): Intended jurisdiction for the search parameter* [StructureDefinition](structuredefinition.html): Intended jurisdiction for the structure definition* [StructureMap](structuremap.html): Intended jurisdiction for the structure map* [TerminologyCapabilities](terminologycapabilities.html): Intended jurisdiction for the terminology capabilities* [ValueSet](valueset.html): Intended jurisdiction for the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "description",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The description of the capability statement* [CodeSystem](codesystem.html): The description of the code system* [CompartmentDefinition](compartmentdefinition.html): The description of the compartment definition* [ConceptMap](conceptmap.html): The description of the concept map* [GraphDefinition](graphdefinition.html): The description of the graph definition* [ImplementationGuide](implementationguide.html): The description of the implementation guide* [MessageDefinition](messagedefinition.html): The description of the message definition* [NamingSystem](namingsystem.html): The description of the naming system* [OperationDefinition](operationdefinition.html): The description of the operation definition* [SearchParameter](searchparameter.html): The description of the search parameter* [StructureDefinition](structuredefinition.html): The description of the structure definition* [StructureMap](structuremap.html): The description of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The description of the terminology capabilities* [ValueSet](valueset.html): The description of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A type of use context assigned to the capability statement* [CodeSystem](codesystem.html): A type of use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A type of use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A type of use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A type of use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A type of use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A type of use context assigned to the message definition* [NamingSystem](namingsystem.html): A type of use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A type of use context assigned to the operation definition* [SearchParameter](searchparameter.html): A type of use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A type of use context assigned to the structure definition* [StructureMap](structuremap.html): A type of use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A type of use context assigned to the terminology capabilities* [ValueSet](valueset.html): A type of use context assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "experimental",
            "description": "For testing purposes, not real usage",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "title",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The human-friendly name of the capability statement* [CodeSystem](codesystem.html): The human-friendly name of the code system* [ConceptMap](conceptmap.html): The human-friendly name of the concept map* [ImplementationGuide](implementationguide.html): The human-friendly name of the implementation guide* [MessageDefinition](messagedefinition.html): The human-friendly name of the message definition* [OperationDefinition](operationdefinition.html): The human-friendly name of the operation definition* [StructureDefinition](structuredefinition.html): The human-friendly name of the structure definition* [StructureMap](structuremap.html): The human-friendly name of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The human-friendly name of the terminology capabilities* [ValueSet](valueset.html): The human-friendly name of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "type",
            "description": "Type defined or constrained by this structure",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-quantity",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A quantity- or range-valued use context assigned to the capability statement* [CodeSystem](codesystem.html): A quantity- or range-valued use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A quantity- or range-valued use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A quantity- or range-valued use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A quantity- or range-valued use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A quantity- or range-valued use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A quantity- or range-valued use context assigned to the message definition* [NamingSystem](namingsystem.html): A quantity- or range-valued use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A quantity- or range-valued use context assigned to the operation definition* [SearchParameter](searchparameter.html): A quantity- or range-valued use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A quantity- or range-valued use context assigned to the structure definition* [StructureMap](structuremap.html): A quantity- or range-valued use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A quantity- or range-valued use context assigned to the terminology capabilities* [ValueSet](valueset.html): A quantity- or range-valued use context assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "path",
            "description": "A path that is constrained in the StructureDefinition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A use context assigned to the capability statement* [CodeSystem](codesystem.html): A use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A use context assigned to the message definition* [NamingSystem](namingsystem.html): A use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A use context assigned to the operation definition* [SearchParameter](searchparameter.html): A use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A use context assigned to the structure definition* [StructureMap](structuremap.html): A use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A use context assigned to the terminology capabilities* [ValueSet](valueset.html): A use context assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "base-path",
            "description": "Path that identifies the base element",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "keyword",
            "description": "A code for the StructureDefinition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type-quantity",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A use context type and quantity- or range-based value assigned to the capability statement* [CodeSystem](codesystem.html): A use context type and quantity- or range-based value assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A use context type and quantity- or range-based value assigned to the compartment definition* [ConceptMap](conceptmap.html): A use context type and quantity- or range-based value assigned to the concept map* [GraphDefinition](graphdefinition.html): A use context type and quantity- or range-based value assigned to the graph definition* [ImplementationGuide](implementationguide.html): A use context type and quantity- or range-based value assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A use context type and quantity- or range-based value assigned to the message definition* [NamingSystem](namingsystem.html): A use context type and quantity- or range-based value assigned to the naming system* [OperationDefinition](operationdefinition.html): A use context type and quantity- or range-based value assigned to the operation definition* [SearchParameter](searchparameter.html): A use context type and quantity- or range-based value assigned to the search parameter* [StructureDefinition](structuredefinition.html): A use context type and quantity- or range-based value assigned to the structure definition* [StructureMap](structuremap.html): A use context type and quantity- or range-based value assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A use context type and quantity- or range-based value assigned to the terminology capabilities* [ValueSet](valueset.html): A use context type and quantity- or range-based value assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "Multiple Resources: * [CodeSystem](codesystem.html): External identifier for the code system* [ConceptMap](conceptmap.html): External identifier for the concept map* [MessageDefinition](messagedefinition.html): External identifier for the message definition* [StructureDefinition](structuredefinition.html): External identifier for the structure definition* [StructureMap](structuremap.html): External identifier for the structure map* [ValueSet](valueset.html): External identifier for the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "valueset",
            "description": "A vocabulary binding reference",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "kind",
            "description": "primitive-type | complex-type | resource | logical",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "abstract",
            "description": "Whether the structure is abstract",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "version",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The business version of the capability statement* [CodeSystem](codesystem.html): The business version of the code system* [CompartmentDefinition](compartmentdefinition.html): The business version of the compartment definition* [ConceptMap](conceptmap.html): The business version of the concept map* [GraphDefinition](graphdefinition.html): The business version of the graph definition* [ImplementationGuide](implementationguide.html): The business version of the implementation guide* [MessageDefinition](messagedefinition.html): The business version of the message definition* [OperationDefinition](operationdefinition.html): The business version of the operation definition* [SearchParameter](searchparameter.html): The business version of the search parameter* [StructureDefinition](structuredefinition.html): The business version of the structure definition* [StructureMap](structuremap.html): The business version of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The business version of the terminology capabilities* [ValueSet](valueset.html): The business version of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "url",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The uri that identifies the capability statement* [CodeSystem](codesystem.html): The uri that identifies the code system* [CompartmentDefinition](compartmentdefinition.html): The uri that identifies the compartment definition* [ConceptMap](conceptmap.html): The uri that identifies the concept map* [GraphDefinition](graphdefinition.html): The uri that identifies the graph definition* [ImplementationGuide](implementationguide.html): The uri that identifies the implementation guide* [MessageDefinition](messagedefinition.html): The uri that identifies the message definition* [OperationDefinition](operationdefinition.html): The uri that identifies the operation definition* [SearchParameter](searchparameter.html): The uri that identifies the search parameter* [StructureDefinition](structuredefinition.html): The uri that identifies the structure definition* [StructureMap](structuremap.html): The uri that identifies the structure map* [TerminologyCapabilities](terminologycapabilities.html): The uri that identifies the terminology capabilities* [ValueSet](valueset.html): The uri that identifies the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "ext-context",
            "description": "The system is the URL for the context-type: e.g. http://hl7.org/fhir/extension-context-type#element|CodeableConcept.text",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Computationally friendly name of the capability statement* [CodeSystem](codesystem.html): Computationally friendly name of the code system* [CompartmentDefinition](compartmentdefinition.html): Computationally friendly name of the compartment definition* [ConceptMap](conceptmap.html): Computationally friendly name of the concept map* [GraphDefinition](graphdefinition.html): Computationally friendly name of the graph definition* [ImplementationGuide](implementationguide.html): Computationally friendly name of the implementation guide* [MessageDefinition](messagedefinition.html): Computationally friendly name of the message definition* [NamingSystem](namingsystem.html): Computationally friendly name of the naming system* [OperationDefinition](operationdefinition.html): Computationally friendly name of the operation definition* [SearchParameter](searchparameter.html): Computationally friendly name of the search parameter* [StructureDefinition](structuredefinition.html): Computationally friendly name of the structure definition* [StructureMap](structuremap.html): Computationally friendly name of the structure map* [TerminologyCapabilities](terminologycapabilities.html): Computationally friendly name of the terminology capabilities* [ValueSet](valueset.html): Computationally friendly name of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "publisher",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Name of the publisher of the capability statement* [CodeSystem](codesystem.html): Name of the publisher of the code system* [CompartmentDefinition](compartmentdefinition.html): Name of the publisher of the compartment definition* [ConceptMap](conceptmap.html): Name of the publisher of the concept map* [GraphDefinition](graphdefinition.html): Name of the publisher of the graph definition* [ImplementationGuide](implementationguide.html): Name of the publisher of the implementation guide* [MessageDefinition](messagedefinition.html): Name of the publisher of the message definition* [NamingSystem](namingsystem.html): Name of the publisher of the naming system* [OperationDefinition](operationdefinition.html): Name of the publisher of the operation definition* [SearchParameter](searchparameter.html): Name of the publisher of the search parameter* [StructureDefinition](structuredefinition.html): Name of the publisher of the structure definition* [StructureMap](structuremap.html): Name of the publisher of the structure map* [TerminologyCapabilities](terminologycapabilities.html): Name of the publisher of the terminology capabilities* [ValueSet](valueset.html): Name of the publisher of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "in": "query",
            "name": "derivation",
            "description": "specialization | constraint - How relates to base definition",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "status",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The current status of the capability statement* [CodeSystem](codesystem.html): The current status of the code system* [CompartmentDefinition](compartmentdefinition.html): The current status of the compartment definition* [ConceptMap](conceptmap.html): The current status of the concept map* [GraphDefinition](graphdefinition.html): The current status of the graph definition* [ImplementationGuide](implementationguide.html): The current status of the implementation guide* [MessageDefinition](messagedefinition.html): The current status of the message definition* [NamingSystem](namingsystem.html): The current status of the naming system* [OperationDefinition](operationdefinition.html): The current status of the operation definition* [SearchParameter](searchparameter.html): The current status of the search parameter* [StructureDefinition](structuredefinition.html): The current status of the structure definition* [StructureMap](structuremap.html): The current status of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The current status of the terminology capabilities* [ValueSet](valueset.html): The current status of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "base",
            "description": "Definition that this type is constrained/specialized from",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StructureDefinition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/StructureDefinition/_search": {
      "post": {
        "summary": "Search StructureDefinitions",
        "description": "Search across all StructureDefinition instances",
        "operationId": "SearchPostStructureDefinition",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type-value",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "jurisdiction",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "description",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "experimental",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "title",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "path",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "base-path",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "keyword",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "valueset",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "kind",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "abstract",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "version",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "url",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ext-context",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "publisher",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "derivation",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "base",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StructureDefinition"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/StructureMap/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a StructureMap instance",
        "description": "VRead a StructureMap instance",
        "operationId": "VReadStructureMap",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StructureMap"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/StructureMap/{id}": {
      "get": {
        "summary": "Read a StructureMap instance",
        "description": "Read a StructureMap instance",
        "operationId": "ReadStructureMap",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StructureMap"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/StructureMap": {
      "get": {
        "summary": "Search StructureMaps",
        "description": "Search across all StructureMap instances",
        "operationId": "SearchGetStructureMap",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The capability statement publication date* [CodeSystem](codesystem.html): The code system publication date* [CompartmentDefinition](compartmentdefinition.html): The compartment definition publication date* [ConceptMap](conceptmap.html): The concept map publication date* [GraphDefinition](graphdefinition.html): The graph definition publication date* [ImplementationGuide](implementationguide.html): The implementation guide publication date* [MessageDefinition](messagedefinition.html): The message definition publication date* [NamingSystem](namingsystem.html): The naming system publication date* [OperationDefinition](operationdefinition.html): The operation definition publication date* [SearchParameter](searchparameter.html): The search parameter publication date* [StructureDefinition](structuredefinition.html): The structure definition publication date* [StructureMap](structuremap.html): The structure map publication date* [TerminologyCapabilities](terminologycapabilities.html): The terminology capabilities publication date* [ValueSet](valueset.html): The value set publication date",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type-value",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A use context type and value assigned to the capability statement* [CodeSystem](codesystem.html): A use context type and value assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A use context type and value assigned to the compartment definition* [ConceptMap](conceptmap.html): A use context type and value assigned to the concept map* [GraphDefinition](graphdefinition.html): A use context type and value assigned to the graph definition* [ImplementationGuide](implementationguide.html): A use context type and value assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A use context type and value assigned to the message definition* [NamingSystem](namingsystem.html): A use context type and value assigned to the naming system* [OperationDefinition](operationdefinition.html): A use context type and value assigned to the operation definition* [SearchParameter](searchparameter.html): A use context type and value assigned to the search parameter* [StructureDefinition](structuredefinition.html): A use context type and value assigned to the structure definition* [StructureMap](structuremap.html): A use context type and value assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A use context type and value assigned to the terminology capabilities* [ValueSet](valueset.html): A use context type and value assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "jurisdiction",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Intended jurisdiction for the capability statement* [CodeSystem](codesystem.html): Intended jurisdiction for the code system* [ConceptMap](conceptmap.html): Intended jurisdiction for the concept map* [GraphDefinition](graphdefinition.html): Intended jurisdiction for the graph definition* [ImplementationGuide](implementationguide.html): Intended jurisdiction for the implementation guide* [MessageDefinition](messagedefinition.html): Intended jurisdiction for the message definition* [NamingSystem](namingsystem.html): Intended jurisdiction for the naming system* [OperationDefinition](operationdefinition.html): Intended jurisdiction for the operation definition* [SearchParameter](searchparameter.html): Intended jurisdiction for the search parameter* [StructureDefinition](structuredefinition.html): Intended jurisdiction for the structure definition* [StructureMap](structuremap.html): Intended jurisdiction for the structure map* [TerminologyCapabilities](terminologycapabilities.html): Intended jurisdiction for the terminology capabilities* [ValueSet](valueset.html): Intended jurisdiction for the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "description",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The description of the capability statement* [CodeSystem](codesystem.html): The description of the code system* [CompartmentDefinition](compartmentdefinition.html): The description of the compartment definition* [ConceptMap](conceptmap.html): The description of the concept map* [GraphDefinition](graphdefinition.html): The description of the graph definition* [ImplementationGuide](implementationguide.html): The description of the implementation guide* [MessageDefinition](messagedefinition.html): The description of the message definition* [NamingSystem](namingsystem.html): The description of the naming system* [OperationDefinition](operationdefinition.html): The description of the operation definition* [SearchParameter](searchparameter.html): The description of the search parameter* [StructureDefinition](structuredefinition.html): The description of the structure definition* [StructureMap](structuremap.html): The description of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The description of the terminology capabilities* [ValueSet](valueset.html): The description of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A type of use context assigned to the capability statement* [CodeSystem](codesystem.html): A type of use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A type of use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A type of use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A type of use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A type of use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A type of use context assigned to the message definition* [NamingSystem](namingsystem.html): A type of use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A type of use context assigned to the operation definition* [SearchParameter](searchparameter.html): A type of use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A type of use context assigned to the structure definition* [StructureMap](structuremap.html): A type of use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A type of use context assigned to the terminology capabilities* [ValueSet](valueset.html): A type of use context assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "title",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The human-friendly name of the capability statement* [CodeSystem](codesystem.html): The human-friendly name of the code system* [ConceptMap](conceptmap.html): The human-friendly name of the concept map* [ImplementationGuide](implementationguide.html): The human-friendly name of the implementation guide* [MessageDefinition](messagedefinition.html): The human-friendly name of the message definition* [OperationDefinition](operationdefinition.html): The human-friendly name of the operation definition* [StructureDefinition](structuredefinition.html): The human-friendly name of the structure definition* [StructureMap](structuremap.html): The human-friendly name of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The human-friendly name of the terminology capabilities* [ValueSet](valueset.html): The human-friendly name of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-quantity",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A quantity- or range-valued use context assigned to the capability statement* [CodeSystem](codesystem.html): A quantity- or range-valued use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A quantity- or range-valued use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A quantity- or range-valued use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A quantity- or range-valued use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A quantity- or range-valued use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A quantity- or range-valued use context assigned to the message definition* [NamingSystem](namingsystem.html): A quantity- or range-valued use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A quantity- or range-valued use context assigned to the operation definition* [SearchParameter](searchparameter.html): A quantity- or range-valued use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A quantity- or range-valued use context assigned to the structure definition* [StructureMap](structuremap.html): A quantity- or range-valued use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A quantity- or range-valued use context assigned to the terminology capabilities* [ValueSet](valueset.html): A quantity- or range-valued use context assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A use context assigned to the capability statement* [CodeSystem](codesystem.html): A use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A use context assigned to the message definition* [NamingSystem](namingsystem.html): A use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A use context assigned to the operation definition* [SearchParameter](searchparameter.html): A use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A use context assigned to the structure definition* [StructureMap](structuremap.html): A use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A use context assigned to the terminology capabilities* [ValueSet](valueset.html): A use context assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type-quantity",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A use context type and quantity- or range-based value assigned to the capability statement* [CodeSystem](codesystem.html): A use context type and quantity- or range-based value assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A use context type and quantity- or range-based value assigned to the compartment definition* [ConceptMap](conceptmap.html): A use context type and quantity- or range-based value assigned to the concept map* [GraphDefinition](graphdefinition.html): A use context type and quantity- or range-based value assigned to the graph definition* [ImplementationGuide](implementationguide.html): A use context type and quantity- or range-based value assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A use context type and quantity- or range-based value assigned to the message definition* [NamingSystem](namingsystem.html): A use context type and quantity- or range-based value assigned to the naming system* [OperationDefinition](operationdefinition.html): A use context type and quantity- or range-based value assigned to the operation definition* [SearchParameter](searchparameter.html): A use context type and quantity- or range-based value assigned to the search parameter* [StructureDefinition](structuredefinition.html): A use context type and quantity- or range-based value assigned to the structure definition* [StructureMap](structuremap.html): A use context type and quantity- or range-based value assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A use context type and quantity- or range-based value assigned to the terminology capabilities* [ValueSet](valueset.html): A use context type and quantity- or range-based value assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "Multiple Resources: * [CodeSystem](codesystem.html): External identifier for the code system* [ConceptMap](conceptmap.html): External identifier for the concept map* [MessageDefinition](messagedefinition.html): External identifier for the message definition* [StructureDefinition](structuredefinition.html): External identifier for the structure definition* [StructureMap](structuremap.html): External identifier for the structure map* [ValueSet](valueset.html): External identifier for the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "version",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The business version of the capability statement* [CodeSystem](codesystem.html): The business version of the code system* [CompartmentDefinition](compartmentdefinition.html): The business version of the compartment definition* [ConceptMap](conceptmap.html): The business version of the concept map* [GraphDefinition](graphdefinition.html): The business version of the graph definition* [ImplementationGuide](implementationguide.html): The business version of the implementation guide* [MessageDefinition](messagedefinition.html): The business version of the message definition* [OperationDefinition](operationdefinition.html): The business version of the operation definition* [SearchParameter](searchparameter.html): The business version of the search parameter* [StructureDefinition](structuredefinition.html): The business version of the structure definition* [StructureMap](structuremap.html): The business version of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The business version of the terminology capabilities* [ValueSet](valueset.html): The business version of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "url",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The uri that identifies the capability statement* [CodeSystem](codesystem.html): The uri that identifies the code system* [CompartmentDefinition](compartmentdefinition.html): The uri that identifies the compartment definition* [ConceptMap](conceptmap.html): The uri that identifies the concept map* [GraphDefinition](graphdefinition.html): The uri that identifies the graph definition* [ImplementationGuide](implementationguide.html): The uri that identifies the implementation guide* [MessageDefinition](messagedefinition.html): The uri that identifies the message definition* [OperationDefinition](operationdefinition.html): The uri that identifies the operation definition* [SearchParameter](searchparameter.html): The uri that identifies the search parameter* [StructureDefinition](structuredefinition.html): The uri that identifies the structure definition* [StructureMap](structuremap.html): The uri that identifies the structure map* [TerminologyCapabilities](terminologycapabilities.html): The uri that identifies the terminology capabilities* [ValueSet](valueset.html): The uri that identifies the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Computationally friendly name of the capability statement* [CodeSystem](codesystem.html): Computationally friendly name of the code system* [CompartmentDefinition](compartmentdefinition.html): Computationally friendly name of the compartment definition* [ConceptMap](conceptmap.html): Computationally friendly name of the concept map* [GraphDefinition](graphdefinition.html): Computationally friendly name of the graph definition* [ImplementationGuide](implementationguide.html): Computationally friendly name of the implementation guide* [MessageDefinition](messagedefinition.html): Computationally friendly name of the message definition* [NamingSystem](namingsystem.html): Computationally friendly name of the naming system* [OperationDefinition](operationdefinition.html): Computationally friendly name of the operation definition* [SearchParameter](searchparameter.html): Computationally friendly name of the search parameter* [StructureDefinition](structuredefinition.html): Computationally friendly name of the structure definition* [StructureMap](structuremap.html): Computationally friendly name of the structure map* [TerminologyCapabilities](terminologycapabilities.html): Computationally friendly name of the terminology capabilities* [ValueSet](valueset.html): Computationally friendly name of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "publisher",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Name of the publisher of the capability statement* [CodeSystem](codesystem.html): Name of the publisher of the code system* [CompartmentDefinition](compartmentdefinition.html): Name of the publisher of the compartment definition* [ConceptMap](conceptmap.html): Name of the publisher of the concept map* [GraphDefinition](graphdefinition.html): Name of the publisher of the graph definition* [ImplementationGuide](implementationguide.html): Name of the publisher of the implementation guide* [MessageDefinition](messagedefinition.html): Name of the publisher of the message definition* [NamingSystem](namingsystem.html): Name of the publisher of the naming system* [OperationDefinition](operationdefinition.html): Name of the publisher of the operation definition* [SearchParameter](searchparameter.html): Name of the publisher of the search parameter* [StructureDefinition](structuredefinition.html): Name of the publisher of the structure definition* [StructureMap](structuremap.html): Name of the publisher of the structure map* [TerminologyCapabilities](terminologycapabilities.html): Name of the publisher of the terminology capabilities* [ValueSet](valueset.html): Name of the publisher of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "status",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The current status of the capability statement* [CodeSystem](codesystem.html): The current status of the code system* [CompartmentDefinition](compartmentdefinition.html): The current status of the compartment definition* [ConceptMap](conceptmap.html): The current status of the concept map* [GraphDefinition](graphdefinition.html): The current status of the graph definition* [ImplementationGuide](implementationguide.html): The current status of the implementation guide* [MessageDefinition](messagedefinition.html): The current status of the message definition* [NamingSystem](namingsystem.html): The current status of the naming system* [OperationDefinition](operationdefinition.html): The current status of the operation definition* [SearchParameter](searchparameter.html): The current status of the search parameter* [StructureDefinition](structuredefinition.html): The current status of the structure definition* [StructureMap](structuremap.html): The current status of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The current status of the terminology capabilities* [ValueSet](valueset.html): The current status of the value set",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StructureMap"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/StructureMap/_search": {
      "post": {
        "summary": "Search StructureMaps",
        "description": "Search across all StructureMap instances",
        "operationId": "SearchPostStructureMap",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type-value",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "jurisdiction",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "description",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "title",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "version",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "url",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "publisher",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StructureMap"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Subscription/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a Subscription instance",
        "description": "VRead a Subscription instance",
        "operationId": "VReadSubscription",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Subscription"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Subscription/{id}": {
      "get": {
        "summary": "Read a Subscription instance",
        "description": "Read a Subscription instance",
        "operationId": "ReadSubscription",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Subscription"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Subscription": {
      "get": {
        "summary": "Search Subscriptions",
        "description": "Search across all Subscription instances",
        "operationId": "SearchGetSubscription",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "criteria",
            "description": "The search rules used to determine when to send a notification",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "type",
            "description": "The type of channel for the sent notifications",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "url",
            "description": "The uri that will receive the notifications",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "payload",
            "description": "The mime-type of the notification payload",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "contact",
            "description": "Contact details for the subscription",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "status",
            "description": "The current state of the subscription",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Subscription"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Subscription/_search": {
      "post": {
        "summary": "Search Subscriptions",
        "description": "Search across all Subscription instances",
        "operationId": "SearchPostSubscription",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "criteria",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "url",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "payload",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "contact",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Subscription"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Substance/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a Substance instance",
        "description": "VRead a Substance instance",
        "operationId": "VReadSubstance",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Substance"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Substance/{id}": {
      "get": {
        "summary": "Read a Substance instance",
        "description": "Read a Substance instance",
        "operationId": "ReadSubstance",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Substance"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Substance": {
      "get": {
        "summary": "Search Substances",
        "description": "Search across all Substance instances",
        "operationId": "SearchGetSubstance",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "identifier",
            "description": "Unique identifier for the substance",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "container-identifier",
            "description": "Identifier of the package/container",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "code",
            "description": "The code of the substance or ingredient",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "quantity",
            "description": "Amount of substance in the package",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "substance-reference",
            "description": "A component of the substance",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "expiry",
            "description": "Expiry date of package or container of substance",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "category",
            "description": "The category of the substance",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "status",
            "description": "active | inactive | entered-in-error",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Substance"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Substance/_search": {
      "post": {
        "summary": "Search Substances",
        "description": "Search across all Substance instances",
        "operationId": "SearchPostSubstance",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "container-identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "code",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "substance-reference",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "expiry",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "category",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Substance"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/SubstanceNucleicAcid/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a SubstanceNucleicAcid instance",
        "description": "VRead a SubstanceNucleicAcid instance",
        "operationId": "VReadSubstanceNucleicAcid",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubstanceNucleicAcid"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/SubstanceNucleicAcid/{id}": {
      "get": {
        "summary": "Read a SubstanceNucleicAcid instance",
        "description": "Read a SubstanceNucleicAcid instance",
        "operationId": "ReadSubstanceNucleicAcid",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubstanceNucleicAcid"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/SubstanceNucleicAcid": {
      "get": {
        "summary": "Search SubstanceNucleicAcids",
        "description": "Search across all SubstanceNucleicAcid instances",
        "operationId": "SearchGetSubstanceNucleicAcid",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubstanceNucleicAcid"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/SubstanceNucleicAcid/_search": {
      "post": {
        "summary": "Search SubstanceNucleicAcids",
        "description": "Search across all SubstanceNucleicAcid instances",
        "operationId": "SearchPostSubstanceNucleicAcid",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubstanceNucleicAcid"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/SubstancePolymer/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a SubstancePolymer instance",
        "description": "VRead a SubstancePolymer instance",
        "operationId": "VReadSubstancePolymer",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubstancePolymer"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/SubstancePolymer/{id}": {
      "get": {
        "summary": "Read a SubstancePolymer instance",
        "description": "Read a SubstancePolymer instance",
        "operationId": "ReadSubstancePolymer",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubstancePolymer"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/SubstancePolymer": {
      "get": {
        "summary": "Search SubstancePolymers",
        "description": "Search across all SubstancePolymer instances",
        "operationId": "SearchGetSubstancePolymer",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubstancePolymer"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/SubstancePolymer/_search": {
      "post": {
        "summary": "Search SubstancePolymers",
        "description": "Search across all SubstancePolymer instances",
        "operationId": "SearchPostSubstancePolymer",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubstancePolymer"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/SubstanceProtein/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a SubstanceProtein instance",
        "description": "VRead a SubstanceProtein instance",
        "operationId": "VReadSubstanceProtein",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubstanceProtein"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/SubstanceProtein/{id}": {
      "get": {
        "summary": "Read a SubstanceProtein instance",
        "description": "Read a SubstanceProtein instance",
        "operationId": "ReadSubstanceProtein",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubstanceProtein"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/SubstanceProtein": {
      "get": {
        "summary": "Search SubstanceProteins",
        "description": "Search across all SubstanceProtein instances",
        "operationId": "SearchGetSubstanceProtein",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubstanceProtein"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/SubstanceProtein/_search": {
      "post": {
        "summary": "Search SubstanceProteins",
        "description": "Search across all SubstanceProtein instances",
        "operationId": "SearchPostSubstanceProtein",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubstanceProtein"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/SubstanceReferenceInformation/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a SubstanceReferenceInformation instance",
        "description": "VRead a SubstanceReferenceInformation instance",
        "operationId": "VReadSubstanceReferenceInformation",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubstanceReferenceInformation"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/SubstanceReferenceInformation/{id}": {
      "get": {
        "summary": "Read a SubstanceReferenceInformation instance",
        "description": "Read a SubstanceReferenceInformation instance",
        "operationId": "ReadSubstanceReferenceInformation",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubstanceReferenceInformation"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/SubstanceReferenceInformation": {
      "get": {
        "summary": "Search SubstanceReferenceInformations",
        "description": "Search across all SubstanceReferenceInformation instances",
        "operationId": "SearchGetSubstanceReferenceInformation",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubstanceReferenceInformation"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/SubstanceReferenceInformation/_search": {
      "post": {
        "summary": "Search SubstanceReferenceInformations",
        "description": "Search across all SubstanceReferenceInformation instances",
        "operationId": "SearchPostSubstanceReferenceInformation",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubstanceReferenceInformation"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/SubstanceSourceMaterial/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a SubstanceSourceMaterial instance",
        "description": "VRead a SubstanceSourceMaterial instance",
        "operationId": "VReadSubstanceSourceMaterial",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubstanceSourceMaterial"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/SubstanceSourceMaterial/{id}": {
      "get": {
        "summary": "Read a SubstanceSourceMaterial instance",
        "description": "Read a SubstanceSourceMaterial instance",
        "operationId": "ReadSubstanceSourceMaterial",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubstanceSourceMaterial"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/SubstanceSourceMaterial": {
      "get": {
        "summary": "Search SubstanceSourceMaterials",
        "description": "Search across all SubstanceSourceMaterial instances",
        "operationId": "SearchGetSubstanceSourceMaterial",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubstanceSourceMaterial"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/SubstanceSourceMaterial/_search": {
      "post": {
        "summary": "Search SubstanceSourceMaterials",
        "description": "Search across all SubstanceSourceMaterial instances",
        "operationId": "SearchPostSubstanceSourceMaterial",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubstanceSourceMaterial"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/SubstanceSpecification/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a SubstanceSpecification instance",
        "description": "VRead a SubstanceSpecification instance",
        "operationId": "VReadSubstanceSpecification",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubstanceSpecification"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/SubstanceSpecification/{id}": {
      "get": {
        "summary": "Read a SubstanceSpecification instance",
        "description": "Read a SubstanceSpecification instance",
        "operationId": "ReadSubstanceSpecification",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubstanceSpecification"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/SubstanceSpecification": {
      "get": {
        "summary": "Search SubstanceSpecifications",
        "description": "Search across all SubstanceSpecification instances",
        "operationId": "SearchGetSubstanceSpecification",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "code",
            "description": "The specific code",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubstanceSpecification"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/SubstanceSpecification/_search": {
      "post": {
        "summary": "Search SubstanceSpecifications",
        "description": "Search across all SubstanceSpecification instances",
        "operationId": "SearchPostSubstanceSpecification",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "code",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubstanceSpecification"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/SupplyDelivery/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a SupplyDelivery instance",
        "description": "VRead a SupplyDelivery instance",
        "operationId": "VReadSupplyDelivery",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SupplyDelivery"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/SupplyDelivery/{id}": {
      "get": {
        "summary": "Read a SupplyDelivery instance",
        "description": "Read a SupplyDelivery instance",
        "operationId": "ReadSupplyDelivery",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SupplyDelivery"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/SupplyDelivery": {
      "get": {
        "summary": "Search SupplyDeliverys",
        "description": "Search across all SupplyDelivery instances",
        "operationId": "SearchGetSupplyDelivery",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "identifier",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "receiver",
            "description": "Who collected the Supply",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "supplier",
            "description": "Dispenser",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "status",
            "description": "in-progress | completed | abandoned | entered-in-error",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SupplyDelivery"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/SupplyDelivery/_search": {
      "post": {
        "summary": "Search SupplyDeliverys",
        "description": "Search across all SupplyDelivery instances",
        "operationId": "SearchPostSupplyDelivery",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "receiver",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "supplier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SupplyDelivery"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/SupplyRequest/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a SupplyRequest instance",
        "description": "VRead a SupplyRequest instance",
        "operationId": "VReadSupplyRequest",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SupplyRequest"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/SupplyRequest/{id}": {
      "get": {
        "summary": "Read a SupplyRequest instance",
        "description": "Read a SupplyRequest instance",
        "operationId": "ReadSupplyRequest",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SupplyRequest"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/SupplyRequest": {
      "get": {
        "summary": "Search SupplyRequests",
        "description": "Search across all SupplyRequest instances",
        "operationId": "SearchGetSupplyRequest",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Date first version of the resource instance was recorded* [CarePlan](careplan.html): Time period plan covers* [CareTeam](careteam.html): Time period team covers* [ClinicalImpression](clinicalimpression.html): When the assessment was documented* [Composition](composition.html): Composition editing time* [Consent](consent.html): When this Consent was created or indexed* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report* [Encounter](encounter.html): A date within the period the Encounter lasted* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period* [FamilyMemberHistory](familymemberhistory.html): When history was recorded or last updated* [Flag](flag.html): Time period when flag is active* [Immunization](immunization.html): Vaccination  (non)-Administration Date* [List](list.html): When the list was prepared* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period* [Procedure](procedure.html): When the procedure was performed* [RiskAssessment](riskassessment.html): When was assessment made?* [SupplyRequest](supplyrequest.html): When the request was made",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "requester",
            "description": "Individual making the request",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "subject",
            "description": "The destination of the supply",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "supplier",
            "description": "Who is intended to fulfill the request",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "category",
            "description": "The kind of supply (central, non-stock, etc.)",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "status",
            "description": "draft | active | suspended +",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SupplyRequest"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/SupplyRequest/_search": {
      "post": {
        "summary": "Search SupplyRequests",
        "description": "Search across all SupplyRequest instances",
        "operationId": "SearchPostSupplyRequest",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "requester",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "subject",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "supplier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "category",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SupplyRequest"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Task/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a Task instance",
        "description": "VRead a Task instance",
        "operationId": "VReadTask",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Task/{id}": {
      "get": {
        "summary": "Read a Task instance",
        "description": "Read a Task instance",
        "operationId": "ReadTask",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Task": {
      "get": {
        "summary": "Search Tasks",
        "description": "Search across all Task instances",
        "operationId": "SearchGetTask",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "code",
            "description": "Search by task code",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "subject",
            "description": "Search by subject",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "focus",
            "description": "Search by task focus",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "part-of",
            "description": "Search by task this task is part of",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "group-identifier",
            "description": "Search by group identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "based-on",
            "description": "Search by requests this task is based on",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "Search by patient",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "modified",
            "description": "Search by last modification date",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "owner",
            "description": "Search by task owner",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "requester",
            "description": "Search by task requester",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "business-status",
            "description": "Search by business status",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "Search for a task instance by its business identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "period",
            "description": "Search by period Task is/was underway",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "performer",
            "description": "Search by recommended type of performer (e.g., Requester, Performer, Scheduler).",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "encounter",
            "description": "Search by encounter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "authored-on",
            "description": "Search by creation date",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "priority",
            "description": "Search by task priority",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "intent",
            "description": "Search by task intent",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "status",
            "description": "Search by task status",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/Task/_search": {
      "post": {
        "summary": "Search Tasks",
        "description": "Search across all Task instances",
        "operationId": "SearchPostTask",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "code",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "subject",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "focus",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "part-of",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "group-identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "based-on",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "modified",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "owner",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "requester",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "business-status",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "period",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "performer",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "encounter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "authored-on",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "priority",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "intent",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/TerminologyCapabilities/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a TerminologyCapabilities instance",
        "description": "VRead a TerminologyCapabilities instance",
        "operationId": "VReadTerminologyCapabilities",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TerminologyCapabilities"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/TerminologyCapabilities/{id}": {
      "get": {
        "summary": "Read a TerminologyCapabilities instance",
        "description": "Read a TerminologyCapabilities instance",
        "operationId": "ReadTerminologyCapabilities",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TerminologyCapabilities"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/TerminologyCapabilities": {
      "get": {
        "summary": "Search TerminologyCapabilitiess",
        "description": "Search across all TerminologyCapabilities instances",
        "operationId": "SearchGetTerminologyCapabilities",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The capability statement publication date* [CodeSystem](codesystem.html): The code system publication date* [CompartmentDefinition](compartmentdefinition.html): The compartment definition publication date* [ConceptMap](conceptmap.html): The concept map publication date* [GraphDefinition](graphdefinition.html): The graph definition publication date* [ImplementationGuide](implementationguide.html): The implementation guide publication date* [MessageDefinition](messagedefinition.html): The message definition publication date* [NamingSystem](namingsystem.html): The naming system publication date* [OperationDefinition](operationdefinition.html): The operation definition publication date* [SearchParameter](searchparameter.html): The search parameter publication date* [StructureDefinition](structuredefinition.html): The structure definition publication date* [StructureMap](structuremap.html): The structure map publication date* [TerminologyCapabilities](terminologycapabilities.html): The terminology capabilities publication date* [ValueSet](valueset.html): The value set publication date",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type-value",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A use context type and value assigned to the capability statement* [CodeSystem](codesystem.html): A use context type and value assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A use context type and value assigned to the compartment definition* [ConceptMap](conceptmap.html): A use context type and value assigned to the concept map* [GraphDefinition](graphdefinition.html): A use context type and value assigned to the graph definition* [ImplementationGuide](implementationguide.html): A use context type and value assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A use context type and value assigned to the message definition* [NamingSystem](namingsystem.html): A use context type and value assigned to the naming system* [OperationDefinition](operationdefinition.html): A use context type and value assigned to the operation definition* [SearchParameter](searchparameter.html): A use context type and value assigned to the search parameter* [StructureDefinition](structuredefinition.html): A use context type and value assigned to the structure definition* [StructureMap](structuremap.html): A use context type and value assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A use context type and value assigned to the terminology capabilities* [ValueSet](valueset.html): A use context type and value assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "jurisdiction",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Intended jurisdiction for the capability statement* [CodeSystem](codesystem.html): Intended jurisdiction for the code system* [ConceptMap](conceptmap.html): Intended jurisdiction for the concept map* [GraphDefinition](graphdefinition.html): Intended jurisdiction for the graph definition* [ImplementationGuide](implementationguide.html): Intended jurisdiction for the implementation guide* [MessageDefinition](messagedefinition.html): Intended jurisdiction for the message definition* [NamingSystem](namingsystem.html): Intended jurisdiction for the naming system* [OperationDefinition](operationdefinition.html): Intended jurisdiction for the operation definition* [SearchParameter](searchparameter.html): Intended jurisdiction for the search parameter* [StructureDefinition](structuredefinition.html): Intended jurisdiction for the structure definition* [StructureMap](structuremap.html): Intended jurisdiction for the structure map* [TerminologyCapabilities](terminologycapabilities.html): Intended jurisdiction for the terminology capabilities* [ValueSet](valueset.html): Intended jurisdiction for the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "description",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The description of the capability statement* [CodeSystem](codesystem.html): The description of the code system* [CompartmentDefinition](compartmentdefinition.html): The description of the compartment definition* [ConceptMap](conceptmap.html): The description of the concept map* [GraphDefinition](graphdefinition.html): The description of the graph definition* [ImplementationGuide](implementationguide.html): The description of the implementation guide* [MessageDefinition](messagedefinition.html): The description of the message definition* [NamingSystem](namingsystem.html): The description of the naming system* [OperationDefinition](operationdefinition.html): The description of the operation definition* [SearchParameter](searchparameter.html): The description of the search parameter* [StructureDefinition](structuredefinition.html): The description of the structure definition* [StructureMap](structuremap.html): The description of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The description of the terminology capabilities* [ValueSet](valueset.html): The description of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A type of use context assigned to the capability statement* [CodeSystem](codesystem.html): A type of use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A type of use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A type of use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A type of use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A type of use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A type of use context assigned to the message definition* [NamingSystem](namingsystem.html): A type of use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A type of use context assigned to the operation definition* [SearchParameter](searchparameter.html): A type of use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A type of use context assigned to the structure definition* [StructureMap](structuremap.html): A type of use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A type of use context assigned to the terminology capabilities* [ValueSet](valueset.html): A type of use context assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "title",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The human-friendly name of the capability statement* [CodeSystem](codesystem.html): The human-friendly name of the code system* [ConceptMap](conceptmap.html): The human-friendly name of the concept map* [ImplementationGuide](implementationguide.html): The human-friendly name of the implementation guide* [MessageDefinition](messagedefinition.html): The human-friendly name of the message definition* [OperationDefinition](operationdefinition.html): The human-friendly name of the operation definition* [StructureDefinition](structuredefinition.html): The human-friendly name of the structure definition* [StructureMap](structuremap.html): The human-friendly name of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The human-friendly name of the terminology capabilities* [ValueSet](valueset.html): The human-friendly name of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "version",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The business version of the capability statement* [CodeSystem](codesystem.html): The business version of the code system* [CompartmentDefinition](compartmentdefinition.html): The business version of the compartment definition* [ConceptMap](conceptmap.html): The business version of the concept map* [GraphDefinition](graphdefinition.html): The business version of the graph definition* [ImplementationGuide](implementationguide.html): The business version of the implementation guide* [MessageDefinition](messagedefinition.html): The business version of the message definition* [OperationDefinition](operationdefinition.html): The business version of the operation definition* [SearchParameter](searchparameter.html): The business version of the search parameter* [StructureDefinition](structuredefinition.html): The business version of the structure definition* [StructureMap](structuremap.html): The business version of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The business version of the terminology capabilities* [ValueSet](valueset.html): The business version of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "url",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The uri that identifies the capability statement* [CodeSystem](codesystem.html): The uri that identifies the code system* [CompartmentDefinition](compartmentdefinition.html): The uri that identifies the compartment definition* [ConceptMap](conceptmap.html): The uri that identifies the concept map* [GraphDefinition](graphdefinition.html): The uri that identifies the graph definition* [ImplementationGuide](implementationguide.html): The uri that identifies the implementation guide* [MessageDefinition](messagedefinition.html): The uri that identifies the message definition* [OperationDefinition](operationdefinition.html): The uri that identifies the operation definition* [SearchParameter](searchparameter.html): The uri that identifies the search parameter* [StructureDefinition](structuredefinition.html): The uri that identifies the structure definition* [StructureMap](structuremap.html): The uri that identifies the structure map* [TerminologyCapabilities](terminologycapabilities.html): The uri that identifies the terminology capabilities* [ValueSet](valueset.html): The uri that identifies the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-quantity",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A quantity- or range-valued use context assigned to the capability statement* [CodeSystem](codesystem.html): A quantity- or range-valued use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A quantity- or range-valued use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A quantity- or range-valued use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A quantity- or range-valued use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A quantity- or range-valued use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A quantity- or range-valued use context assigned to the message definition* [NamingSystem](namingsystem.html): A quantity- or range-valued use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A quantity- or range-valued use context assigned to the operation definition* [SearchParameter](searchparameter.html): A quantity- or range-valued use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A quantity- or range-valued use context assigned to the structure definition* [StructureMap](structuremap.html): A quantity- or range-valued use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A quantity- or range-valued use context assigned to the terminology capabilities* [ValueSet](valueset.html): A quantity- or range-valued use context assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A use context assigned to the capability statement* [CodeSystem](codesystem.html): A use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A use context assigned to the message definition* [NamingSystem](namingsystem.html): A use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A use context assigned to the operation definition* [SearchParameter](searchparameter.html): A use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A use context assigned to the structure definition* [StructureMap](structuremap.html): A use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A use context assigned to the terminology capabilities* [ValueSet](valueset.html): A use context assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Computationally friendly name of the capability statement* [CodeSystem](codesystem.html): Computationally friendly name of the code system* [CompartmentDefinition](compartmentdefinition.html): Computationally friendly name of the compartment definition* [ConceptMap](conceptmap.html): Computationally friendly name of the concept map* [GraphDefinition](graphdefinition.html): Computationally friendly name of the graph definition* [ImplementationGuide](implementationguide.html): Computationally friendly name of the implementation guide* [MessageDefinition](messagedefinition.html): Computationally friendly name of the message definition* [NamingSystem](namingsystem.html): Computationally friendly name of the naming system* [OperationDefinition](operationdefinition.html): Computationally friendly name of the operation definition* [SearchParameter](searchparameter.html): Computationally friendly name of the search parameter* [StructureDefinition](structuredefinition.html): Computationally friendly name of the structure definition* [StructureMap](structuremap.html): Computationally friendly name of the structure map* [TerminologyCapabilities](terminologycapabilities.html): Computationally friendly name of the terminology capabilities* [ValueSet](valueset.html): Computationally friendly name of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "publisher",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Name of the publisher of the capability statement* [CodeSystem](codesystem.html): Name of the publisher of the code system* [CompartmentDefinition](compartmentdefinition.html): Name of the publisher of the compartment definition* [ConceptMap](conceptmap.html): Name of the publisher of the concept map* [GraphDefinition](graphdefinition.html): Name of the publisher of the graph definition* [ImplementationGuide](implementationguide.html): Name of the publisher of the implementation guide* [MessageDefinition](messagedefinition.html): Name of the publisher of the message definition* [NamingSystem](namingsystem.html): Name of the publisher of the naming system* [OperationDefinition](operationdefinition.html): Name of the publisher of the operation definition* [SearchParameter](searchparameter.html): Name of the publisher of the search parameter* [StructureDefinition](structuredefinition.html): Name of the publisher of the structure definition* [StructureMap](structuremap.html): Name of the publisher of the structure map* [TerminologyCapabilities](terminologycapabilities.html): Name of the publisher of the terminology capabilities* [ValueSet](valueset.html): Name of the publisher of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "context-type-quantity",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A use context type and quantity- or range-based value assigned to the capability statement* [CodeSystem](codesystem.html): A use context type and quantity- or range-based value assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A use context type and quantity- or range-based value assigned to the compartment definition* [ConceptMap](conceptmap.html): A use context type and quantity- or range-based value assigned to the concept map* [GraphDefinition](graphdefinition.html): A use context type and quantity- or range-based value assigned to the graph definition* [ImplementationGuide](implementationguide.html): A use context type and quantity- or range-based value assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A use context type and quantity- or range-based value assigned to the message definition* [NamingSystem](namingsystem.html): A use context type and quantity- or range-based value assigned to the naming system* [OperationDefinition](operationdefinition.html): A use context type and quantity- or range-based value assigned to the operation definition* [SearchParameter](searchparameter.html): A use context type and quantity- or range-based value assigned to the search parameter* [StructureDefinition](structuredefinition.html): A use context type and quantity- or range-based value assigned to the structure definition* [StructureMap](structuremap.html): A use context type and quantity- or range-based value assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A use context type and quantity- or range-based value assigned to the terminology capabilities* [ValueSet](valueset.html): A use context type and quantity- or range-based value assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "status",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The current status of the capability statement* [CodeSystem](codesystem.html): The current status of the code system* [CompartmentDefinition](compartmentdefinition.html): The current status of the compartment definition* [ConceptMap](conceptmap.html): The current status of the concept map* [GraphDefinition](graphdefinition.html): The current status of the graph definition* [ImplementationGuide](implementationguide.html): The current status of the implementation guide* [MessageDefinition](messagedefinition.html): The current status of the message definition* [NamingSystem](namingsystem.html): The current status of the naming system* [OperationDefinition](operationdefinition.html): The current status of the operation definition* [SearchParameter](searchparameter.html): The current status of the search parameter* [StructureDefinition](structuredefinition.html): The current status of the structure definition* [StructureMap](structuremap.html): The current status of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The current status of the terminology capabilities* [ValueSet](valueset.html): The current status of the value set",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TerminologyCapabilities"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/TerminologyCapabilities/_search": {
      "post": {
        "summary": "Search TerminologyCapabilitiess",
        "description": "Search across all TerminologyCapabilities instances",
        "operationId": "SearchPostTerminologyCapabilities",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type-value",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "jurisdiction",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "description",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "title",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "version",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "url",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "publisher",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TerminologyCapabilities"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/TestReport/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a TestReport instance",
        "description": "VRead a TestReport instance",
        "operationId": "VReadTestReport",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TestReport"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/TestReport/{id}": {
      "get": {
        "summary": "Read a TestReport instance",
        "description": "Read a TestReport instance",
        "operationId": "ReadTestReport",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TestReport"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/TestReport": {
      "get": {
        "summary": "Search TestReports",
        "description": "Search across all TestReport instances",
        "operationId": "SearchGetTestReport",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "identifier",
            "description": "An external identifier for the test report",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "tester",
            "description": "The name of the testing organization",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "participant",
            "description": "The reference to a participant in the test execution",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "result",
            "description": "The result disposition of the test execution",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "testscript",
            "description": "The test script executed to produce this report",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "issued",
            "description": "The test report generation date",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TestReport"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/TestReport/_search": {
      "post": {
        "summary": "Search TestReports",
        "description": "Search across all TestReport instances",
        "operationId": "SearchPostTestReport",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "tester",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "participant",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "result",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "testscript",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "issued",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TestReport"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/TestScript/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a TestScript instance",
        "description": "VRead a TestScript instance",
        "operationId": "VReadTestScript",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TestScript"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/TestScript/{id}": {
      "get": {
        "summary": "Read a TestScript instance",
        "description": "Read a TestScript instance",
        "operationId": "ReadTestScript",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TestScript"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/TestScript": {
      "get": {
        "summary": "Search TestScripts",
        "description": "Search across all TestScript instances",
        "operationId": "SearchGetTestScript",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "The test script publication date",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type-value",
            "description": "A use context type and value assigned to the test script",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "jurisdiction",
            "description": "Intended jurisdiction for the test script",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "description",
            "description": "The description of the test script",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "testscript-capability",
            "description": "TestScript required and validated capability",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type",
            "description": "A type of use context assigned to the test script",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "title",
            "description": "The human-friendly name of the test script",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-quantity",
            "description": "A quantity- or range-valued use context assigned to the test script",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context",
            "description": "A use context assigned to the test script",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type-quantity",
            "description": "A use context type and quantity- or range-based value assigned to the test script",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "External identifier for the test script",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "version",
            "description": "The business version of the test script",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "url",
            "description": "The uri that identifies the test script",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Computationally friendly name of the test script",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "publisher",
            "description": "Name of the publisher of the test script",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "status",
            "description": "The current status of the test script",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TestScript"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/TestScript/_search": {
      "post": {
        "summary": "Search TestScripts",
        "description": "Search across all TestScript instances",
        "operationId": "SearchPostTestScript",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type-value",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "jurisdiction",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "description",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "testscript-capability",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "title",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "version",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "url",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "publisher",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TestScript"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ValueSet/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a ValueSet instance",
        "description": "VRead a ValueSet instance",
        "operationId": "VReadValueSet",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ValueSet"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ValueSet/{id}": {
      "get": {
        "summary": "Read a ValueSet instance",
        "description": "Read a ValueSet instance",
        "operationId": "ReadValueSet",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ValueSet"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ValueSet": {
      "get": {
        "summary": "Search ValueSets",
        "description": "Search across all ValueSet instances",
        "operationId": "SearchGetValueSet",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The capability statement publication date* [CodeSystem](codesystem.html): The code system publication date* [CompartmentDefinition](compartmentdefinition.html): The compartment definition publication date* [ConceptMap](conceptmap.html): The concept map publication date* [GraphDefinition](graphdefinition.html): The graph definition publication date* [ImplementationGuide](implementationguide.html): The implementation guide publication date* [MessageDefinition](messagedefinition.html): The message definition publication date* [NamingSystem](namingsystem.html): The naming system publication date* [OperationDefinition](operationdefinition.html): The operation definition publication date* [SearchParameter](searchparameter.html): The search parameter publication date* [StructureDefinition](structuredefinition.html): The structure definition publication date* [StructureMap](structuremap.html): The structure map publication date* [TerminologyCapabilities](terminologycapabilities.html): The terminology capabilities publication date* [ValueSet](valueset.html): The value set publication date",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "code",
            "description": "This special parameter searches for codes in the value set. See additional notes on the ValueSet resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type-value",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A use context type and value assigned to the capability statement* [CodeSystem](codesystem.html): A use context type and value assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A use context type and value assigned to the compartment definition* [ConceptMap](conceptmap.html): A use context type and value assigned to the concept map* [GraphDefinition](graphdefinition.html): A use context type and value assigned to the graph definition* [ImplementationGuide](implementationguide.html): A use context type and value assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A use context type and value assigned to the message definition* [NamingSystem](namingsystem.html): A use context type and value assigned to the naming system* [OperationDefinition](operationdefinition.html): A use context type and value assigned to the operation definition* [SearchParameter](searchparameter.html): A use context type and value assigned to the search parameter* [StructureDefinition](structuredefinition.html): A use context type and value assigned to the structure definition* [StructureMap](structuremap.html): A use context type and value assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A use context type and value assigned to the terminology capabilities* [ValueSet](valueset.html): A use context type and value assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "jurisdiction",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Intended jurisdiction for the capability statement* [CodeSystem](codesystem.html): Intended jurisdiction for the code system* [ConceptMap](conceptmap.html): Intended jurisdiction for the concept map* [GraphDefinition](graphdefinition.html): Intended jurisdiction for the graph definition* [ImplementationGuide](implementationguide.html): Intended jurisdiction for the implementation guide* [MessageDefinition](messagedefinition.html): Intended jurisdiction for the message definition* [NamingSystem](namingsystem.html): Intended jurisdiction for the naming system* [OperationDefinition](operationdefinition.html): Intended jurisdiction for the operation definition* [SearchParameter](searchparameter.html): Intended jurisdiction for the search parameter* [StructureDefinition](structuredefinition.html): Intended jurisdiction for the structure definition* [StructureMap](structuremap.html): Intended jurisdiction for the structure map* [TerminologyCapabilities](terminologycapabilities.html): Intended jurisdiction for the terminology capabilities* [ValueSet](valueset.html): Intended jurisdiction for the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "description",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The description of the capability statement* [CodeSystem](codesystem.html): The description of the code system* [CompartmentDefinition](compartmentdefinition.html): The description of the compartment definition* [ConceptMap](conceptmap.html): The description of the concept map* [GraphDefinition](graphdefinition.html): The description of the graph definition* [ImplementationGuide](implementationguide.html): The description of the implementation guide* [MessageDefinition](messagedefinition.html): The description of the message definition* [NamingSystem](namingsystem.html): The description of the naming system* [OperationDefinition](operationdefinition.html): The description of the operation definition* [SearchParameter](searchparameter.html): The description of the search parameter* [StructureDefinition](structuredefinition.html): The description of the structure definition* [StructureMap](structuremap.html): The description of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The description of the terminology capabilities* [ValueSet](valueset.html): The description of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A type of use context assigned to the capability statement* [CodeSystem](codesystem.html): A type of use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A type of use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A type of use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A type of use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A type of use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A type of use context assigned to the message definition* [NamingSystem](namingsystem.html): A type of use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A type of use context assigned to the operation definition* [SearchParameter](searchparameter.html): A type of use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A type of use context assigned to the structure definition* [StructureMap](structuremap.html): A type of use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A type of use context assigned to the terminology capabilities* [ValueSet](valueset.html): A type of use context assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "title",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The human-friendly name of the capability statement* [CodeSystem](codesystem.html): The human-friendly name of the code system* [ConceptMap](conceptmap.html): The human-friendly name of the concept map* [ImplementationGuide](implementationguide.html): The human-friendly name of the implementation guide* [MessageDefinition](messagedefinition.html): The human-friendly name of the message definition* [OperationDefinition](operationdefinition.html): The human-friendly name of the operation definition* [StructureDefinition](structuredefinition.html): The human-friendly name of the structure definition* [StructureMap](structuremap.html): The human-friendly name of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The human-friendly name of the terminology capabilities* [ValueSet](valueset.html): The human-friendly name of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "reference",
            "description": "A code system included or excluded in the value set or an imported value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-quantity",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A quantity- or range-valued use context assigned to the capability statement* [CodeSystem](codesystem.html): A quantity- or range-valued use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A quantity- or range-valued use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A quantity- or range-valued use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A quantity- or range-valued use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A quantity- or range-valued use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A quantity- or range-valued use context assigned to the message definition* [NamingSystem](namingsystem.html): A quantity- or range-valued use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A quantity- or range-valued use context assigned to the operation definition* [SearchParameter](searchparameter.html): A quantity- or range-valued use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A quantity- or range-valued use context assigned to the structure definition* [StructureMap](structuremap.html): A quantity- or range-valued use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A quantity- or range-valued use context assigned to the terminology capabilities* [ValueSet](valueset.html): A quantity- or range-valued use context assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A use context assigned to the capability statement* [CodeSystem](codesystem.html): A use context assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A use context assigned to the compartment definition* [ConceptMap](conceptmap.html): A use context assigned to the concept map* [GraphDefinition](graphdefinition.html): A use context assigned to the graph definition* [ImplementationGuide](implementationguide.html): A use context assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A use context assigned to the message definition* [NamingSystem](namingsystem.html): A use context assigned to the naming system* [OperationDefinition](operationdefinition.html): A use context assigned to the operation definition* [SearchParameter](searchparameter.html): A use context assigned to the search parameter* [StructureDefinition](structuredefinition.html): A use context assigned to the structure definition* [StructureMap](structuremap.html): A use context assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A use context assigned to the terminology capabilities* [ValueSet](valueset.html): A use context assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "context-type-quantity",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): A use context type and quantity- or range-based value assigned to the capability statement* [CodeSystem](codesystem.html): A use context type and quantity- or range-based value assigned to the code system* [CompartmentDefinition](compartmentdefinition.html): A use context type and quantity- or range-based value assigned to the compartment definition* [ConceptMap](conceptmap.html): A use context type and quantity- or range-based value assigned to the concept map* [GraphDefinition](graphdefinition.html): A use context type and quantity- or range-based value assigned to the graph definition* [ImplementationGuide](implementationguide.html): A use context type and quantity- or range-based value assigned to the implementation guide* [MessageDefinition](messagedefinition.html): A use context type and quantity- or range-based value assigned to the message definition* [NamingSystem](namingsystem.html): A use context type and quantity- or range-based value assigned to the naming system* [OperationDefinition](operationdefinition.html): A use context type and quantity- or range-based value assigned to the operation definition* [SearchParameter](searchparameter.html): A use context type and quantity- or range-based value assigned to the search parameter* [StructureDefinition](structuredefinition.html): A use context type and quantity- or range-based value assigned to the structure definition* [StructureMap](structuremap.html): A use context type and quantity- or range-based value assigned to the structure map* [TerminologyCapabilities](terminologycapabilities.html): A use context type and quantity- or range-based value assigned to the terminology capabilities* [ValueSet](valueset.html): A use context type and quantity- or range-based value assigned to the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "Multiple Resources: * [CodeSystem](codesystem.html): External identifier for the code system* [ConceptMap](conceptmap.html): External identifier for the concept map* [MessageDefinition](messagedefinition.html): External identifier for the message definition* [StructureDefinition](structuredefinition.html): External identifier for the structure definition* [StructureMap](structuremap.html): External identifier for the structure map* [ValueSet](valueset.html): External identifier for the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "version",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The business version of the capability statement* [CodeSystem](codesystem.html): The business version of the code system* [CompartmentDefinition](compartmentdefinition.html): The business version of the compartment definition* [ConceptMap](conceptmap.html): The business version of the concept map* [GraphDefinition](graphdefinition.html): The business version of the graph definition* [ImplementationGuide](implementationguide.html): The business version of the implementation guide* [MessageDefinition](messagedefinition.html): The business version of the message definition* [OperationDefinition](operationdefinition.html): The business version of the operation definition* [SearchParameter](searchparameter.html): The business version of the search parameter* [StructureDefinition](structuredefinition.html): The business version of the structure definition* [StructureMap](structuremap.html): The business version of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The business version of the terminology capabilities* [ValueSet](valueset.html): The business version of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "url",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The uri that identifies the capability statement* [CodeSystem](codesystem.html): The uri that identifies the code system* [CompartmentDefinition](compartmentdefinition.html): The uri that identifies the compartment definition* [ConceptMap](conceptmap.html): The uri that identifies the concept map* [GraphDefinition](graphdefinition.html): The uri that identifies the graph definition* [ImplementationGuide](implementationguide.html): The uri that identifies the implementation guide* [MessageDefinition](messagedefinition.html): The uri that identifies the message definition* [OperationDefinition](operationdefinition.html): The uri that identifies the operation definition* [SearchParameter](searchparameter.html): The uri that identifies the search parameter* [StructureDefinition](structuredefinition.html): The uri that identifies the structure definition* [StructureMap](structuremap.html): The uri that identifies the structure map* [TerminologyCapabilities](terminologycapabilities.html): The uri that identifies the terminology capabilities* [ValueSet](valueset.html): The uri that identifies the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "expansion",
            "description": "Identifies the value set expansion (business identifier)",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Computationally friendly name of the capability statement* [CodeSystem](codesystem.html): Computationally friendly name of the code system* [CompartmentDefinition](compartmentdefinition.html): Computationally friendly name of the compartment definition* [ConceptMap](conceptmap.html): Computationally friendly name of the concept map* [GraphDefinition](graphdefinition.html): Computationally friendly name of the graph definition* [ImplementationGuide](implementationguide.html): Computationally friendly name of the implementation guide* [MessageDefinition](messagedefinition.html): Computationally friendly name of the message definition* [NamingSystem](namingsystem.html): Computationally friendly name of the naming system* [OperationDefinition](operationdefinition.html): Computationally friendly name of the operation definition* [SearchParameter](searchparameter.html): Computationally friendly name of the search parameter* [StructureDefinition](structuredefinition.html): Computationally friendly name of the structure definition* [StructureMap](structuremap.html): Computationally friendly name of the structure map* [TerminologyCapabilities](terminologycapabilities.html): Computationally friendly name of the terminology capabilities* [ValueSet](valueset.html): Computationally friendly name of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "publisher",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): Name of the publisher of the capability statement* [CodeSystem](codesystem.html): Name of the publisher of the code system* [CompartmentDefinition](compartmentdefinition.html): Name of the publisher of the compartment definition* [ConceptMap](conceptmap.html): Name of the publisher of the concept map* [GraphDefinition](graphdefinition.html): Name of the publisher of the graph definition* [ImplementationGuide](implementationguide.html): Name of the publisher of the implementation guide* [MessageDefinition](messagedefinition.html): Name of the publisher of the message definition* [NamingSystem](namingsystem.html): Name of the publisher of the naming system* [OperationDefinition](operationdefinition.html): Name of the publisher of the operation definition* [SearchParameter](searchparameter.html): Name of the publisher of the search parameter* [StructureDefinition](structuredefinition.html): Name of the publisher of the structure definition* [StructureMap](structuremap.html): Name of the publisher of the structure map* [TerminologyCapabilities](terminologycapabilities.html): Name of the publisher of the terminology capabilities* [ValueSet](valueset.html): Name of the publisher of the value set",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "status",
            "description": "Multiple Resources: * [CapabilityStatement](capabilitystatement.html): The current status of the capability statement* [CodeSystem](codesystem.html): The current status of the code system* [CompartmentDefinition](compartmentdefinition.html): The current status of the compartment definition* [ConceptMap](conceptmap.html): The current status of the concept map* [GraphDefinition](graphdefinition.html): The current status of the graph definition* [ImplementationGuide](implementationguide.html): The current status of the implementation guide* [MessageDefinition](messagedefinition.html): The current status of the message definition* [NamingSystem](namingsystem.html): The current status of the naming system* [OperationDefinition](operationdefinition.html): The current status of the operation definition* [SearchParameter](searchparameter.html): The current status of the search parameter* [StructureDefinition](structuredefinition.html): The current status of the structure definition* [StructureMap](structuremap.html): The current status of the structure map* [TerminologyCapabilities](terminologycapabilities.html): The current status of the terminology capabilities* [ValueSet](valueset.html): The current status of the value set",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ValueSet"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/ValueSet/_search": {
      "post": {
        "summary": "Search ValueSets",
        "description": "Search across all ValueSet instances",
        "operationId": "SearchPostValueSet",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "code",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type-value",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "jurisdiction",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "description",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "title",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "reference",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "context-type-quantity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "version",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "url",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "expansion",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "publisher",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ValueSet"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/VerificationResult/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a VerificationResult instance",
        "description": "VRead a VerificationResult instance",
        "operationId": "VReadVerificationResult",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VerificationResult"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/VerificationResult/{id}": {
      "get": {
        "summary": "Read a VerificationResult instance",
        "description": "Read a VerificationResult instance",
        "operationId": "ReadVerificationResult",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VerificationResult"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/VerificationResult": {
      "get": {
        "summary": "Search VerificationResults",
        "description": "Search across all VerificationResult instances",
        "operationId": "SearchGetVerificationResult",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "target",
            "description": "A resource that was validated",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VerificationResult"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/VerificationResult/_search": {
      "post": {
        "summary": "Search VerificationResults",
        "description": "Search across all VerificationResult instances",
        "operationId": "SearchPostVerificationResult",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "target",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VerificationResult"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/VisionPrescription/{id}/_history/{vid}": {
      "get": {
        "summary": "VRead a VisionPrescription instance",
        "description": "VRead a VisionPrescription instance",
        "operationId": "VReadVisionPrescription",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          },
          {
            "$ref": "#/parameters/vid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VisionPrescription"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/VisionPrescription/{id}": {
      "get": {
        "summary": "Read a VisionPrescription instance",
        "description": "Read a VisionPrescription instance",
        "operationId": "ReadVisionPrescription",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VisionPrescription"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/VisionPrescription": {
      "get": {
        "summary": "Search VisionPrescriptions",
        "description": "Search across all VisionPrescription instances",
        "operationId": "SearchGetVisionPrescription",
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "prescriber",
            "description": "Who authorized the vision prescription",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "identifier",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): External ids for this item* [CarePlan](careplan.html): External Ids for this plan* [CareTeam](careteam.html): External Ids for this team* [Composition](composition.html): Version-independent identifier for the Composition* [Condition](condition.html): A unique identifier of the condition record* [Consent](consent.html): Identifier for this record (external references)* [DetectedIssue](detectedissue.html): Unique id for the detected issue* [DeviceRequest](devicerequest.html): Business identifier for request/order* [DiagnosticReport](diagnosticreport.html): An identifier for the report* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents* [DocumentReference](documentreference.html): Master Version Specific Identifier* [Encounter](encounter.html): Identifier(s) by which this encounter is known* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier* [Goal](goal.html): External Ids for this goal* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number* [Immunization](immunization.html): Business identifier* [List](list.html): Business identifier* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier* [MedicationStatement](medicationstatement.html): Return statements with this external identifier* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier* [Observation](observation.html): The unique id for a particular observation* [Procedure](procedure.html): A unique identifier for a procedure* [RiskAssessment](riskassessment.html): Unique identifier for the assessment* [ServiceRequest](servicerequest.html): Identifiers assigned to this order* [SupplyDelivery](supplydelivery.html): External identifier* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "in": "query",
            "name": "datewritten",
            "description": "Return prescriptions written on this date",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "in": "query",
            "name": "encounter",
            "description": "Multiple Resources: * [Composition](composition.html): Context of the Composition* [DeviceRequest](devicerequest.html): Encounter during which request was created* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made* [DocumentReference](documentreference.html): Context of the document  content* [Flag](flag.html): Alert relevant during encounter* [List](list.html): Context in which list created* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier* [Observation](observation.html): Encounter related to the observation* [Procedure](procedure.html): Encounter created as part of* [RiskAssessment](riskassessment.html): Where was assessment performed?* [ServiceRequest](servicerequest.html): An encounter in which this request is made* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "_filter",
            "description": "Search the contents of the resource's data using a filter",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "in": "query",
            "name": "patient",
            "description": "Multiple Resources: * [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for* [CarePlan](careplan.html): Who the care plan is for* [CareTeam](careteam.html): Who care team is for* [ClinicalImpression](clinicalimpression.html): Patient or group assessed* [Composition](composition.html): Who and/or what the composition is about* [Condition](condition.html): Who has the condition?* [Consent](consent.html): Who the consent applies to* [DetectedIssue](detectedissue.html): Associated patient* [DeviceRequest](devicerequest.html): Individual the service is ordered for* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient* [DocumentManifest](documentmanifest.html): The subject of the set of documents* [DocumentReference](documentreference.html): Who/what is the subject of the document* [Encounter](encounter.html): The patient or group present at the encounter* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for* [Flag](flag.html): The identity of a subject to list flags for* [Goal](goal.html): Who this goal is intended for* [ImagingStudy](imagingstudy.html): Who the study is about* [Immunization](immunization.html): The patient for the vaccination record* [List](list.html): If all resources have the same subject* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement* [Observation](observation.html): The subject that the observation is about (if patient)* [Procedure](procedure.html): Search by subject - a patient* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?* [ServiceRequest](servicerequest.html): Search by subject - a patient* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "in": "query",
            "name": "_has",
            "description": "Return resources linked to by the given target",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "in": "query",
            "name": "_text",
            "description": "Search on the narrative of the resource",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "in": "query",
            "name": "status",
            "description": "The status of the vision prescription",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VisionPrescription"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    },
    "/VisionPrescription/_search": {
      "post": {
        "summary": "Search VisionPrescriptions",
        "description": "Search across all VisionPrescription instances",
        "operationId": "SearchPostVisionPrescription",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "prescriber",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "datewritten",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "encounter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VisionPrescription"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        },
        {
          "$ref": "#/parameters/_summary"
        },
        {
          "$ref": "#/parameters/_elements"
        }
      ]
    }
  },
  "definitions": {
    "Address": {
      "description": "An address expressed using postal conventions (as opposed to GPS or other location definition formats)",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Element"
        }
      ],
      "properties": {
        "city": {
          "description": "Name of city, town etc.",
          "type": "string"
        },
        "country": {
          "description": "Country (e.g. can be ISO 3166 2 or 3 letter code)",
          "type": "string"
        },
        "district": {
          "description": "District name (aka county)",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "line": {
          "description": "Street name, number, direction & P.O. Box etc.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "period": {
          "$ref": "#/definitions/Period"
        },
        "postalCode": {
          "description": "Postal code for area",
          "type": "string"
        },
        "state": {
          "description": "Sub-unit of country (abbreviations ok)",
          "type": "string"
        },
        "text": {
          "description": "Text representation of the address",
          "type": "string"
        },
        "type": {
          "description": "postal | physical | both",
          "type": "string"
        },
        "use": {
          "description": "home | work | temp | old | billing - purpose of this address",
          "type": "string"
        }
      }
    },
    "Age": {
      "description": "A duration of time during which an organism (or a process) has existed",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Quantity"
        }
      ],
      "properties": {
        "code": {
          "description": "Coded form of the unit",
          "type": "string"
        },
        "comparator": {
          "description": "< | <= | >= | > - how to understand the value",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "system": {
          "description": "System that defines coded unit form",
          "type": "string"
        },
        "unit": {
          "description": "Unit representation",
          "type": "string"
        },
        "value": {
          "format": "double",
          "description": "Numerical value (with implicit precision)",
          "type": "number"
        }
      }
    },
    "Annotation": {
      "description": "Text node with attribution",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Element"
        }
      ],
      "properties": {
        "authorReference": {
          "$ref": "#/definitions/Reference"
        },
        "authorString": {
          "description": "Individual responsible for the annotation",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "text": {
          "description": "The annotation  - text content (as markdown)",
          "type": "string"
        },
        "time": {
          "description": "When the annotation was made",
          "type": "string"
        }
      }
    },
    "Attachment": {
      "description": "Content in a format defined elsewhere",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Element"
        }
      ],
      "properties": {
        "contentType": {
          "description": "Mime type of the content, with charset etc.",
          "type": "string"
        },
        "creation": {
          "description": "Date attachment was first created",
          "type": "string"
        },
        "data": {
          "format": "byte",
          "description": "Data inline, base64ed",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "hash": {
          "format": "byte",
          "description": "Hash of the data (sha-1, base64ed)",
          "type": "string"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "language": {
          "description": "Human language of the content (BCP-47)",
          "type": "string"
        },
        "size": {
          "format": "int32",
          "description": "Number of bytes of content (if url provided)",
          "type": "integer"
        },
        "title": {
          "description": "Label to display in place of the data",
          "type": "string"
        },
        "url": {
          "description": "Uri where the data can be found",
          "type": "string"
        }
      }
    },
    "BackboneElement": {
      "description": "Base for elements defined inside a resource",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Element"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "CodeableConcept": {
      "description": "Concept - reference to a terminology or just  text",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Element"
        }
      ],
      "properties": {
        "coding": {
          "description": "Code defined by a terminology system",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Coding"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "text": {
          "description": "Plain text representation of the concept",
          "type": "string"
        }
      }
    },
    "Coding": {
      "description": "A reference to a code defined by a terminology system",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Element"
        }
      ],
      "properties": {
        "code": {
          "description": "Symbol in syntax defined by the system",
          "type": "string"
        },
        "display": {
          "description": "Representation defined by the system",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "system": {
          "description": "Identity of the terminology system",
          "type": "string"
        },
        "userSelected": {
          "description": "If this coding was chosen directly by the user",
          "type": "boolean"
        },
        "version": {
          "description": "Version of the system - if relevant",
          "type": "string"
        }
      }
    },
    "ContactDetail": {
      "description": "Contact information",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Element"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "name": {
          "description": "Name of an individual to contact",
          "type": "string"
        },
        "telecom": {
          "description": "Contact details for individual or organization",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactPoint"
          }
        }
      }
    },
    "ContactPoint": {
      "description": "Details of a Technology mediated contact point (phone, fax, email, etc.)",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Element"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "period": {
          "$ref": "#/definitions/Period"
        },
        "rank": {
          "format": "int32",
          "description": "Specify preferred order of use (1 = highest)",
          "type": "integer"
        },
        "system": {
          "description": "phone | fax | email | pager | url | sms | other",
          "type": "string"
        },
        "use": {
          "description": "home | work | temp | old | mobile - purpose of this contact point",
          "type": "string"
        },
        "value": {
          "description": "The actual contact point details",
          "type": "string"
        }
      }
    },
    "Contributor": {
      "description": "Contributor information",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Element"
        }
      ],
      "properties": {
        "contact": {
          "description": "Contact details of the contributor",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "name": {
          "description": "Who contributed the content",
          "type": "string"
        },
        "type": {
          "description": "author | editor | reviewer | endorser",
          "type": "string"
        }
      }
    },
    "Count": {
      "description": "A measured or measurable amount",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Quantity"
        }
      ],
      "properties": {
        "code": {
          "description": "Coded form of the unit",
          "type": "string"
        },
        "comparator": {
          "description": "< | <= | >= | > - how to understand the value",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "system": {
          "description": "System that defines coded unit form",
          "type": "string"
        },
        "unit": {
          "description": "Unit representation",
          "type": "string"
        },
        "value": {
          "format": "double",
          "description": "Numerical value (with implicit precision)",
          "type": "number"
        }
      }
    },
    "DataRequirementCodeFilterComponent": {
      "description": "What codes are expected",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Element"
        }
      ],
      "properties": {
        "code": {
          "description": "What code is expected",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Coding"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "path": {
          "description": "A code-valued attribute to filter on",
          "type": "string"
        },
        "searchParam": {
          "description": "A coded (token) parameter to search on",
          "type": "string"
        },
        "valueSet": {
          "description": "Valueset for the filter",
          "type": "string"
        }
      }
    },
    "DataRequirementDateFilterComponent": {
      "description": "What dates/date ranges are expected",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Element"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "path": {
          "description": "A date-valued attribute to filter on",
          "type": "string"
        },
        "searchParam": {
          "description": "A date valued parameter to search on",
          "type": "string"
        },
        "valueDateTime": {
          "description": "The value of the filter, as a Period, DateTime, or Duration value",
          "type": "string"
        },
        "valuePeriod": {
          "$ref": "#/definitions/Period"
        },
        "valueDuration": {
          "$ref": "#/definitions/Duration"
        }
      }
    },
    "DataRequirementSortComponent": {
      "description": "Order of the results",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Element"
        }
      ],
      "properties": {
        "direction": {
          "description": "ascending | descending",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "path": {
          "description": "The name of the attribute to perform the sort",
          "type": "string"
        }
      }
    },
    "DataRequirement": {
      "description": "Describes a required data item",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Element"
        }
      ],
      "properties": {
        "codeFilter": {
          "description": "What codes are expected",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataRequirementCodeFilterComponent"
          }
        },
        "dateFilter": {
          "description": "What dates/date ranges are expected",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataRequirementDateFilterComponent"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "limit": {
          "format": "int32",
          "description": "Number of results",
          "type": "integer"
        },
        "mustSupport": {
          "description": "Indicates specific structure elements that are referenced by the knowledge module",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "profile": {
          "description": "The profile of the required data",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sort": {
          "description": "Order of the results",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataRequirementSortComponent"
          }
        },
        "subjectCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "subjectReference": {
          "$ref": "#/definitions/Reference"
        },
        "type": {
          "description": "The type of the required data",
          "type": "string"
        }
      }
    },
    "Distance": {
      "description": "A length - a value with a unit that is a physical distance",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Quantity"
        }
      ],
      "properties": {
        "code": {
          "description": "Coded form of the unit",
          "type": "string"
        },
        "comparator": {
          "description": "< | <= | >= | > - how to understand the value",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "system": {
          "description": "System that defines coded unit form",
          "type": "string"
        },
        "unit": {
          "description": "Unit representation",
          "type": "string"
        },
        "value": {
          "format": "double",
          "description": "Numerical value (with implicit precision)",
          "type": "number"
        }
      }
    },
    "DosageDoseAndRateComponent": {
      "description": "Amount of medication administered",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Element"
        }
      ],
      "properties": {
        "doseRange": {
          "$ref": "#/definitions/Range"
        },
        "doseQuantity": {
          "$ref": "#/definitions/Quantity"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "rateRatio": {
          "$ref": "#/definitions/Ratio"
        },
        "rateRange": {
          "$ref": "#/definitions/Range"
        },
        "rateQuantity": {
          "$ref": "#/definitions/Quantity"
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "Dosage": {
      "description": "How the medication is/was taken or should be taken",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "additionalInstruction": {
          "description": "Supplemental instruction or warnings to the patient - e.g. \"with meals\", \"may cause drowsiness\"",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "asNeededBoolean": {
          "description": "Take \"as needed\" (for x)",
          "type": "boolean"
        },
        "asNeededCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "doseAndRate": {
          "description": "Amount of medication administered",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DosageDoseAndRateComponent"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "maxDosePerAdministration": {
          "$ref": "#/definitions/Quantity"
        },
        "maxDosePerLifetime": {
          "$ref": "#/definitions/Quantity"
        },
        "maxDosePerPeriod": {
          "$ref": "#/definitions/Ratio"
        },
        "method": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "patientInstruction": {
          "description": "Patient or consumer oriented instructions",
          "type": "string"
        },
        "route": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "sequence": {
          "format": "int32",
          "description": "The order of the dosage instructions",
          "type": "integer"
        },
        "site": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "text": {
          "description": "Free text dosage instructions e.g. SIG",
          "type": "string"
        },
        "timing": {
          "$ref": "#/definitions/Timing"
        }
      }
    },
    "Duration": {
      "description": "A length of time",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Quantity"
        }
      ],
      "properties": {
        "code": {
          "description": "Coded form of the unit",
          "type": "string"
        },
        "comparator": {
          "description": "< | <= | >= | > - how to understand the value",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "system": {
          "description": "System that defines coded unit form",
          "type": "string"
        },
        "unit": {
          "description": "Unit representation",
          "type": "string"
        },
        "value": {
          "format": "double",
          "description": "Numerical value (with implicit precision)",
          "type": "number"
        }
      }
    },
    "Element": {
      "description": "Base for all elements",
      "type": "object",
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        }
      }
    },
    "ElementDefinitionBaseComponent": {
      "description": "Base definition information for tools",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Element"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "max": {
          "description": "Max cardinality of the base element",
          "type": "string"
        },
        "min": {
          "format": "int32",
          "description": "Min cardinality of the base element",
          "type": "integer"
        },
        "path": {
          "description": "Path that identifies the base element",
          "type": "string"
        }
      }
    },
    "ElementDefinitionElementDefinitionBindingComponent": {
      "description": "ValueSet details if this is coded",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Element"
        }
      ],
      "properties": {
        "description": {
          "description": "Human explanation of the value set",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "strength": {
          "description": "required | extensible | preferred | example",
          "type": "string"
        },
        "valueSet": {
          "description": "Source of value set",
          "type": "string"
        }
      }
    },
    "ElementDefinitionConstraintComponent": {
      "description": "Condition that must evaluate to true",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Element"
        }
      ],
      "properties": {
        "expression": {
          "description": "FHIRPath expression of constraint",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "human": {
          "description": "Human description of constraint",
          "type": "string"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "key": {
          "description": "Target of 'condition' reference above",
          "type": "string"
        },
        "requirements": {
          "description": "Why this constraint is necessary or appropriate",
          "type": "string"
        },
        "severity": {
          "description": "error | warning",
          "type": "string"
        },
        "source": {
          "description": "Reference to original source of constraint",
          "type": "string"
        },
        "xpath": {
          "description": "XPath expression of constraint",
          "type": "string"
        }
      }
    },
    "ElementDefinitionExampleComponent": {
      "description": "Example value (as defined for type)",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Element"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "label": {
          "description": "Describes the purpose of this example",
          "type": "string"
        },
        "valueBase64Binary": {
          "format": "byte",
          "description": "Value of Example (one of allowed types)",
          "type": "string"
        },
        "valueBoolean": {
          "description": "Value of Example (one of allowed types)",
          "type": "boolean"
        },
        "valueCanonical": {
          "description": "Value of Example (one of allowed types)",
          "type": "string"
        },
        "valueCode": {
          "description": "Value of Example (one of allowed types)",
          "type": "string"
        },
        "valueDate": {
          "description": "Value of Example (one of allowed types)",
          "type": "string"
        },
        "valueDateTime": {
          "description": "Value of Example (one of allowed types)",
          "type": "string"
        },
        "valueDecimal": {
          "format": "double",
          "description": "Value of Example (one of allowed types)",
          "type": "number"
        },
        "valueId": {
          "description": "Value of Example (one of allowed types)",
          "type": "string"
        },
        "valueInstant": {
          "description": "Value of Example (one of allowed types)",
          "type": "string"
        },
        "valueInteger": {
          "format": "int32",
          "description": "Value of Example (one of allowed types)",
          "type": "integer"
        },
        "valueMarkdown": {
          "description": "Value of Example (one of allowed types)",
          "type": "string"
        },
        "valueOid": {
          "description": "Value of Example (one of allowed types)",
          "type": "string"
        },
        "valuePositiveInt": {
          "format": "int32",
          "description": "Value of Example (one of allowed types)",
          "type": "integer"
        },
        "valueString": {
          "description": "Value of Example (one of allowed types)",
          "type": "string"
        },
        "valueTime": {
          "description": "Value of Example (one of allowed types)",
          "type": "string"
        },
        "valueUnsignedInt": {
          "format": "int32",
          "description": "Value of Example (one of allowed types)",
          "type": "integer"
        },
        "valueUri": {
          "description": "Value of Example (one of allowed types)",
          "type": "string"
        },
        "valueUrl": {
          "description": "Value of Example (one of allowed types)",
          "type": "string"
        },
        "valueUuid": {
          "description": "Value of Example (one of allowed types)",
          "type": "string"
        },
        "valueAddress": {
          "$ref": "#/definitions/Address"
        },
        "valueAge": {
          "$ref": "#/definitions/Age"
        },
        "valueAnnotation": {
          "$ref": "#/definitions/Annotation"
        },
        "valueAttachment": {
          "$ref": "#/definitions/Attachment"
        },
        "valueCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueCoding": {
          "$ref": "#/definitions/Coding"
        },
        "valueContactPoint": {
          "$ref": "#/definitions/ContactPoint"
        },
        "valueCount": {
          "$ref": "#/definitions/Count"
        },
        "valueDistance": {
          "$ref": "#/definitions/Distance"
        },
        "valueDuration": {
          "$ref": "#/definitions/Duration"
        },
        "valueHumanName": {
          "$ref": "#/definitions/HumanName"
        },
        "valueIdentifier": {
          "$ref": "#/definitions/Identifier"
        },
        "valueMoney": {
          "$ref": "#/definitions/Money"
        },
        "valuePeriod": {
          "$ref": "#/definitions/Period"
        },
        "valueQuantity": {
          "$ref": "#/definitions/Quantity"
        },
        "valueRange": {
          "$ref": "#/definitions/Range"
        },
        "valueRatio": {
          "$ref": "#/definitions/Ratio"
        },
        "valueReference": {
          "$ref": "#/definitions/Reference"
        },
        "valueSampledData": {
          "$ref": "#/definitions/SampledData"
        },
        "valueSignature": {
          "$ref": "#/definitions/Signature"
        },
        "valueTiming": {
          "$ref": "#/definitions/Timing"
        },
        "valueContactDetail": {
          "$ref": "#/definitions/ContactDetail"
        },
        "valueContributor": {
          "$ref": "#/definitions/Contributor"
        },
        "valueDataRequirement": {
          "$ref": "#/definitions/DataRequirement"
        },
        "valueExpression": {
          "$ref": "#/definitions/Expression"
        },
        "valueParameterDefinition": {
          "$ref": "#/definitions/ParameterDefinition"
        },
        "valueRelatedArtifact": {
          "$ref": "#/definitions/RelatedArtifact"
        },
        "valueTriggerDefinition": {
          "$ref": "#/definitions/TriggerDefinition"
        },
        "valueUsageContext": {
          "$ref": "#/definitions/UsageContext"
        },
        "valueDosage": {
          "$ref": "#/definitions/Dosage"
        },
        "valueMeta": {
          "$ref": "#/definitions/Meta"
        }
      }
    },
    "ElementDefinitionMappingComponent": {
      "description": "Map element to another set of definitions",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Element"
        }
      ],
      "properties": {
        "comment": {
          "description": "Comments about the mapping or its use",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "identity": {
          "description": "Reference to mapping declaration",
          "type": "string"
        },
        "language": {
          "description": "Computable language of mapping",
          "type": "string"
        },
        "map": {
          "description": "Details of the mapping",
          "type": "string"
        }
      }
    },
    "ElementDefinitionDiscriminatorComponent": {
      "description": "Element values that are used to distinguish the slices",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Element"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "path": {
          "description": "Path to element value",
          "type": "string"
        },
        "type": {
          "description": "value | exists | pattern | type | profile",
          "type": "string"
        }
      }
    },
    "ElementDefinitionSlicingComponent": {
      "description": "This element is sliced - slices follow",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Element"
        }
      ],
      "properties": {
        "description": {
          "description": "Text description of how slicing works (or not)",
          "type": "string"
        },
        "discriminator": {
          "description": "Element values that are used to distinguish the slices",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ElementDefinitionDiscriminatorComponent"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "ordered": {
          "description": "If elements must be in same order as slices",
          "type": "boolean"
        },
        "rules": {
          "description": "closed | open | openAtEnd",
          "type": "string"
        }
      }
    },
    "ElementDefinitionTypeRefComponent": {
      "description": "Data type and Profile for this element",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Element"
        }
      ],
      "properties": {
        "aggregation": {
          "description": "contained | referenced | bundled - how aggregated",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "code": {
          "description": "Data type or Resource (reference to definition)",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "profile": {
          "description": "Profiles (StructureDefinition or IG) - one must apply",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "targetProfile": {
          "description": "Profile (StructureDefinition or IG) on the Reference/canonical target - one must apply",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "versioning": {
          "description": "either | independent | specific",
          "type": "string"
        }
      }
    },
    "ElementDefinition": {
      "description": "Definition of an element in a resource or extension",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "alias": {
          "description": "Other names",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "base": {
          "$ref": "#/definitions/ElementDefinitionBaseComponent"
        },
        "binding": {
          "$ref": "#/definitions/ElementDefinitionElementDefinitionBindingComponent"
        },
        "code": {
          "description": "Corresponding codes in terminologies",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Coding"
          }
        },
        "comment": {
          "description": "Comments about the use of this element",
          "type": "string"
        },
        "condition": {
          "description": "Reference to invariant about presence",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "constraint": {
          "description": "Condition that must evaluate to true",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ElementDefinitionConstraintComponent"
          }
        },
        "contentReference": {
          "description": "Reference to definition of content for the element",
          "type": "string"
        },
        "defaultValueBase64Binary": {
          "format": "byte",
          "description": "Specified value if missing from instance",
          "type": "string"
        },
        "defaultValueBoolean": {
          "description": "Specified value if missing from instance",
          "type": "boolean"
        },
        "defaultValueCanonical": {
          "description": "Specified value if missing from instance",
          "type": "string"
        },
        "defaultValueCode": {
          "description": "Specified value if missing from instance",
          "type": "string"
        },
        "defaultValueDate": {
          "description": "Specified value if missing from instance",
          "type": "string"
        },
        "defaultValueDateTime": {
          "description": "Specified value if missing from instance",
          "type": "string"
        },
        "defaultValueDecimal": {
          "format": "double",
          "description": "Specified value if missing from instance",
          "type": "number"
        },
        "defaultValueId": {
          "description": "Specified value if missing from instance",
          "type": "string"
        },
        "defaultValueInstant": {
          "description": "Specified value if missing from instance",
          "type": "string"
        },
        "defaultValueInteger": {
          "format": "int32",
          "description": "Specified value if missing from instance",
          "type": "integer"
        },
        "defaultValueMarkdown": {
          "description": "Specified value if missing from instance",
          "type": "string"
        },
        "defaultValueOid": {
          "description": "Specified value if missing from instance",
          "type": "string"
        },
        "defaultValuePositiveInt": {
          "format": "int32",
          "description": "Specified value if missing from instance",
          "type": "integer"
        },
        "defaultValueString": {
          "description": "Specified value if missing from instance",
          "type": "string"
        },
        "defaultValueTime": {
          "description": "Specified value if missing from instance",
          "type": "string"
        },
        "defaultValueUnsignedInt": {
          "format": "int32",
          "description": "Specified value if missing from instance",
          "type": "integer"
        },
        "defaultValueUri": {
          "description": "Specified value if missing from instance",
          "type": "string"
        },
        "defaultValueUrl": {
          "description": "Specified value if missing from instance",
          "type": "string"
        },
        "defaultValueUuid": {
          "description": "Specified value if missing from instance",
          "type": "string"
        },
        "defaultValueAddress": {
          "$ref": "#/definitions/Address"
        },
        "defaultValueAge": {
          "$ref": "#/definitions/Age"
        },
        "defaultValueAnnotation": {
          "$ref": "#/definitions/Annotation"
        },
        "defaultValueAttachment": {
          "$ref": "#/definitions/Attachment"
        },
        "defaultValueCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "defaultValueCoding": {
          "$ref": "#/definitions/Coding"
        },
        "defaultValueContactPoint": {
          "$ref": "#/definitions/ContactPoint"
        },
        "defaultValueCount": {
          "$ref": "#/definitions/Count"
        },
        "defaultValueDistance": {
          "$ref": "#/definitions/Distance"
        },
        "defaultValueDuration": {
          "$ref": "#/definitions/Duration"
        },
        "defaultValueHumanName": {
          "$ref": "#/definitions/HumanName"
        },
        "defaultValueIdentifier": {
          "$ref": "#/definitions/Identifier"
        },
        "defaultValueMoney": {
          "$ref": "#/definitions/Money"
        },
        "defaultValuePeriod": {
          "$ref": "#/definitions/Period"
        },
        "defaultValueQuantity": {
          "$ref": "#/definitions/Quantity"
        },
        "defaultValueRange": {
          "$ref": "#/definitions/Range"
        },
        "defaultValueRatio": {
          "$ref": "#/definitions/Ratio"
        },
        "defaultValueReference": {
          "$ref": "#/definitions/Reference"
        },
        "defaultValueSampledData": {
          "$ref": "#/definitions/SampledData"
        },
        "defaultValueSignature": {
          "$ref": "#/definitions/Signature"
        },
        "defaultValueTiming": {
          "$ref": "#/definitions/Timing"
        },
        "defaultValueContactDetail": {
          "$ref": "#/definitions/ContactDetail"
        },
        "defaultValueContributor": {
          "$ref": "#/definitions/Contributor"
        },
        "defaultValueDataRequirement": {
          "$ref": "#/definitions/DataRequirement"
        },
        "defaultValueExpression": {
          "$ref": "#/definitions/Expression"
        },
        "defaultValueParameterDefinition": {
          "$ref": "#/definitions/ParameterDefinition"
        },
        "defaultValueRelatedArtifact": {
          "$ref": "#/definitions/RelatedArtifact"
        },
        "defaultValueTriggerDefinition": {
          "$ref": "#/definitions/TriggerDefinition"
        },
        "defaultValueUsageContext": {
          "$ref": "#/definitions/UsageContext"
        },
        "defaultValueDosage": {
          "$ref": "#/definitions/Dosage"
        },
        "defaultValueMeta": {
          "$ref": "#/definitions/Meta"
        },
        "definition": {
          "description": "Full formal definition as narrative text",
          "type": "string"
        },
        "example": {
          "description": "Example value (as defined for type)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ElementDefinitionExampleComponent"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "fixedBase64Binary": {
          "format": "byte",
          "description": "Value must be exactly this",
          "type": "string"
        },
        "fixedBoolean": {
          "description": "Value must be exactly this",
          "type": "boolean"
        },
        "fixedCanonical": {
          "description": "Value must be exactly this",
          "type": "string"
        },
        "fixedCode": {
          "description": "Value must be exactly this",
          "type": "string"
        },
        "fixedDate": {
          "description": "Value must be exactly this",
          "type": "string"
        },
        "fixedDateTime": {
          "description": "Value must be exactly this",
          "type": "string"
        },
        "fixedDecimal": {
          "format": "double",
          "description": "Value must be exactly this",
          "type": "number"
        },
        "fixedId": {
          "description": "Value must be exactly this",
          "type": "string"
        },
        "fixedInstant": {
          "description": "Value must be exactly this",
          "type": "string"
        },
        "fixedInteger": {
          "format": "int32",
          "description": "Value must be exactly this",
          "type": "integer"
        },
        "fixedMarkdown": {
          "description": "Value must be exactly this",
          "type": "string"
        },
        "fixedOid": {
          "description": "Value must be exactly this",
          "type": "string"
        },
        "fixedPositiveInt": {
          "format": "int32",
          "description": "Value must be exactly this",
          "type": "integer"
        },
        "fixedString": {
          "description": "Value must be exactly this",
          "type": "string"
        },
        "fixedTime": {
          "description": "Value must be exactly this",
          "type": "string"
        },
        "fixedUnsignedInt": {
          "format": "int32",
          "description": "Value must be exactly this",
          "type": "integer"
        },
        "fixedUri": {
          "description": "Value must be exactly this",
          "type": "string"
        },
        "fixedUrl": {
          "description": "Value must be exactly this",
          "type": "string"
        },
        "fixedUuid": {
          "description": "Value must be exactly this",
          "type": "string"
        },
        "fixedAddress": {
          "$ref": "#/definitions/Address"
        },
        "fixedAge": {
          "$ref": "#/definitions/Age"
        },
        "fixedAnnotation": {
          "$ref": "#/definitions/Annotation"
        },
        "fixedAttachment": {
          "$ref": "#/definitions/Attachment"
        },
        "fixedCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "fixedCoding": {
          "$ref": "#/definitions/Coding"
        },
        "fixedContactPoint": {
          "$ref": "#/definitions/ContactPoint"
        },
        "fixedCount": {
          "$ref": "#/definitions/Count"
        },
        "fixedDistance": {
          "$ref": "#/definitions/Distance"
        },
        "fixedDuration": {
          "$ref": "#/definitions/Duration"
        },
        "fixedHumanName": {
          "$ref": "#/definitions/HumanName"
        },
        "fixedIdentifier": {
          "$ref": "#/definitions/Identifier"
        },
        "fixedMoney": {
          "$ref": "#/definitions/Money"
        },
        "fixedPeriod": {
          "$ref": "#/definitions/Period"
        },
        "fixedQuantity": {
          "$ref": "#/definitions/Quantity"
        },
        "fixedRange": {
          "$ref": "#/definitions/Range"
        },
        "fixedRatio": {
          "$ref": "#/definitions/Ratio"
        },
        "fixedReference": {
          "$ref": "#/definitions/Reference"
        },
        "fixedSampledData": {
          "$ref": "#/definitions/SampledData"
        },
        "fixedSignature": {
          "$ref": "#/definitions/Signature"
        },
        "fixedTiming": {
          "$ref": "#/definitions/Timing"
        },
        "fixedContactDetail": {
          "$ref": "#/definitions/ContactDetail"
        },
        "fixedContributor": {
          "$ref": "#/definitions/Contributor"
        },
        "fixedDataRequirement": {
          "$ref": "#/definitions/DataRequirement"
        },
        "fixedExpression": {
          "$ref": "#/definitions/Expression"
        },
        "fixedParameterDefinition": {
          "$ref": "#/definitions/ParameterDefinition"
        },
        "fixedRelatedArtifact": {
          "$ref": "#/definitions/RelatedArtifact"
        },
        "fixedTriggerDefinition": {
          "$ref": "#/definitions/TriggerDefinition"
        },
        "fixedUsageContext": {
          "$ref": "#/definitions/UsageContext"
        },
        "fixedDosage": {
          "$ref": "#/definitions/Dosage"
        },
        "fixedMeta": {
          "$ref": "#/definitions/Meta"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "isModifier": {
          "description": "If this modifies the meaning of other elements",
          "type": "boolean"
        },
        "isModifierReason": {
          "description": "Reason that this element is marked as a modifier",
          "type": "string"
        },
        "isSummary": {
          "description": "Include when _summary = true?",
          "type": "boolean"
        },
        "label": {
          "description": "Name for element to display with or prompt for element",
          "type": "string"
        },
        "mapping": {
          "description": "Map element to another set of definitions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ElementDefinitionMappingComponent"
          }
        },
        "max": {
          "description": "Maximum Cardinality (a number or *)",
          "type": "string"
        },
        "maxLength": {
          "format": "int32",
          "description": "Max length for strings",
          "type": "integer"
        },
        "maxValueDate": {
          "description": "Maximum Allowed Value (for some types)",
          "type": "string"
        },
        "maxValueDateTime": {
          "description": "Maximum Allowed Value (for some types)",
          "type": "string"
        },
        "maxValueInstant": {
          "description": "Maximum Allowed Value (for some types)",
          "type": "string"
        },
        "maxValueTime": {
          "description": "Maximum Allowed Value (for some types)",
          "type": "string"
        },
        "maxValueDecimal": {
          "format": "double",
          "description": "Maximum Allowed Value (for some types)",
          "type": "number"
        },
        "maxValueInteger": {
          "format": "int32",
          "description": "Maximum Allowed Value (for some types)",
          "type": "integer"
        },
        "maxValuePositiveInt": {
          "format": "int32",
          "description": "Maximum Allowed Value (for some types)",
          "type": "integer"
        },
        "maxValueUnsignedInt": {
          "format": "int32",
          "description": "Maximum Allowed Value (for some types)",
          "type": "integer"
        },
        "maxValueQuantity": {
          "$ref": "#/definitions/Quantity"
        },
        "meaningWhenMissing": {
          "description": "Implicit meaning when this element is missing",
          "type": "string"
        },
        "min": {
          "format": "int32",
          "description": "Minimum Cardinality",
          "type": "integer"
        },
        "minValueDate": {
          "description": "Minimum Allowed Value (for some types)",
          "type": "string"
        },
        "minValueDateTime": {
          "description": "Minimum Allowed Value (for some types)",
          "type": "string"
        },
        "minValueInstant": {
          "description": "Minimum Allowed Value (for some types)",
          "type": "string"
        },
        "minValueTime": {
          "description": "Minimum Allowed Value (for some types)",
          "type": "string"
        },
        "minValueDecimal": {
          "format": "double",
          "description": "Minimum Allowed Value (for some types)",
          "type": "number"
        },
        "minValueInteger": {
          "format": "int32",
          "description": "Minimum Allowed Value (for some types)",
          "type": "integer"
        },
        "minValuePositiveInt": {
          "format": "int32",
          "description": "Minimum Allowed Value (for some types)",
          "type": "integer"
        },
        "minValueUnsignedInt": {
          "format": "int32",
          "description": "Minimum Allowed Value (for some types)",
          "type": "integer"
        },
        "minValueQuantity": {
          "$ref": "#/definitions/Quantity"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "mustSupport": {
          "description": "If the element must be supported",
          "type": "boolean"
        },
        "orderMeaning": {
          "description": "What the order of the elements means",
          "type": "string"
        },
        "path": {
          "description": "Path of the element in the hierarchy of elements",
          "type": "string"
        },
        "patternBase64Binary": {
          "format": "byte",
          "description": "Value must have at least these property values",
          "type": "string"
        },
        "patternBoolean": {
          "description": "Value must have at least these property values",
          "type": "boolean"
        },
        "patternCanonical": {
          "description": "Value must have at least these property values",
          "type": "string"
        },
        "patternCode": {
          "description": "Value must have at least these property values",
          "type": "string"
        },
        "patternDate": {
          "description": "Value must have at least these property values",
          "type": "string"
        },
        "patternDateTime": {
          "description": "Value must have at least these property values",
          "type": "string"
        },
        "patternDecimal": {
          "format": "double",
          "description": "Value must have at least these property values",
          "type": "number"
        },
        "patternId": {
          "description": "Value must have at least these property values",
          "type": "string"
        },
        "patternInstant": {
          "description": "Value must have at least these property values",
          "type": "string"
        },
        "patternInteger": {
          "format": "int32",
          "description": "Value must have at least these property values",
          "type": "integer"
        },
        "patternMarkdown": {
          "description": "Value must have at least these property values",
          "type": "string"
        },
        "patternOid": {
          "description": "Value must have at least these property values",
          "type": "string"
        },
        "patternPositiveInt": {
          "format": "int32",
          "description": "Value must have at least these property values",
          "type": "integer"
        },
        "patternString": {
          "description": "Value must have at least these property values",
          "type": "string"
        },
        "patternTime": {
          "description": "Value must have at least these property values",
          "type": "string"
        },
        "patternUnsignedInt": {
          "format": "int32",
          "description": "Value must have at least these property values",
          "type": "integer"
        },
        "patternUri": {
          "description": "Value must have at least these property values",
          "type": "string"
        },
        "patternUrl": {
          "description": "Value must have at least these property values",
          "type": "string"
        },
        "patternUuid": {
          "description": "Value must have at least these property values",
          "type": "string"
        },
        "patternAddress": {
          "$ref": "#/definitions/Address"
        },
        "patternAge": {
          "$ref": "#/definitions/Age"
        },
        "patternAnnotation": {
          "$ref": "#/definitions/Annotation"
        },
        "patternAttachment": {
          "$ref": "#/definitions/Attachment"
        },
        "patternCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "patternCoding": {
          "$ref": "#/definitions/Coding"
        },
        "patternContactPoint": {
          "$ref": "#/definitions/ContactPoint"
        },
        "patternCount": {
          "$ref": "#/definitions/Count"
        },
        "patternDistance": {
          "$ref": "#/definitions/Distance"
        },
        "patternDuration": {
          "$ref": "#/definitions/Duration"
        },
        "patternHumanName": {
          "$ref": "#/definitions/HumanName"
        },
        "patternIdentifier": {
          "$ref": "#/definitions/Identifier"
        },
        "patternMoney": {
          "$ref": "#/definitions/Money"
        },
        "patternPeriod": {
          "$ref": "#/definitions/Period"
        },
        "patternQuantity": {
          "$ref": "#/definitions/Quantity"
        },
        "patternRange": {
          "$ref": "#/definitions/Range"
        },
        "patternRatio": {
          "$ref": "#/definitions/Ratio"
        },
        "patternReference": {
          "$ref": "#/definitions/Reference"
        },
        "patternSampledData": {
          "$ref": "#/definitions/SampledData"
        },
        "patternSignature": {
          "$ref": "#/definitions/Signature"
        },
        "patternTiming": {
          "$ref": "#/definitions/Timing"
        },
        "patternContactDetail": {
          "$ref": "#/definitions/ContactDetail"
        },
        "patternContributor": {
          "$ref": "#/definitions/Contributor"
        },
        "patternDataRequirement": {
          "$ref": "#/definitions/DataRequirement"
        },
        "patternExpression": {
          "$ref": "#/definitions/Expression"
        },
        "patternParameterDefinition": {
          "$ref": "#/definitions/ParameterDefinition"
        },
        "patternRelatedArtifact": {
          "$ref": "#/definitions/RelatedArtifact"
        },
        "patternTriggerDefinition": {
          "$ref": "#/definitions/TriggerDefinition"
        },
        "patternUsageContext": {
          "$ref": "#/definitions/UsageContext"
        },
        "patternDosage": {
          "$ref": "#/definitions/Dosage"
        },
        "patternMeta": {
          "$ref": "#/definitions/Meta"
        },
        "representation": {
          "description": "xmlAttr | xmlText | typeAttr | cdaText | xhtml",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "requirements": {
          "description": "Why this resource has been created",
          "type": "string"
        },
        "short": {
          "description": "Concise definition for space-constrained presentation",
          "type": "string"
        },
        "sliceIsConstraining": {
          "description": "If this slice definition constrains an inherited slice definition (or not)",
          "type": "boolean"
        },
        "sliceName": {
          "description": "Name for this particular element (in a set of slices)",
          "type": "string"
        },
        "slicing": {
          "$ref": "#/definitions/ElementDefinitionSlicingComponent"
        },
        "type": {
          "description": "Data type and Profile for this element",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ElementDefinitionTypeRefComponent"
          }
        }
      }
    },
    "Expression": {
      "description": "An expression that can be used to generate a value",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Element"
        }
      ],
      "properties": {
        "description": {
          "description": "Natural language description of the condition",
          "type": "string"
        },
        "expression": {
          "description": "Expression in specified language",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "language": {
          "description": "text/cql | text/fhirpath | application/x-fhir-query | etc.",
          "type": "string"
        },
        "name": {
          "description": "Short name assigned to expression for reuse",
          "type": "string"
        },
        "reference": {
          "description": "Where the expression is found",
          "type": "string"
        }
      }
    },
    "Extension": {
      "description": "Optional Extensions Element",
      "type": "object"
    },
    "HumanName": {
      "description": "Name of a human - parts and usage",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Element"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "family": {
          "description": "Family name (often called 'Surname')",
          "type": "string"
        },
        "given": {
          "description": "Given names (not always 'first'). Includes middle names",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "period": {
          "$ref": "#/definitions/Period"
        },
        "prefix": {
          "description": "Parts that come before the name",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "suffix": {
          "description": "Parts that come after the name",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "text": {
          "description": "Text representation of the full name",
          "type": "string"
        },
        "use": {
          "description": "usual | official | temp | nickname | anonymous | old | maiden",
          "type": "string"
        }
      }
    },
    "Identifier": {
      "description": "An identifier intended for computation",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Element"
        }
      ],
      "properties": {
        "assigner": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "period": {
          "$ref": "#/definitions/Period"
        },
        "system": {
          "description": "The namespace for the identifier value",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "use": {
          "description": "usual | official | temp | secondary | old (If known)",
          "type": "string"
        },
        "value": {
          "description": "The value that is unique",
          "type": "string"
        }
      }
    },
    "MarketingStatus": {
      "description": "The marketing status describes the date when a medicinal product is actually put on the market or the date as of which it is no longer available",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "country": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "dateRange": {
          "$ref": "#/definitions/Period"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "jurisdiction": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "restoreDate": {
          "description": "The date when the Medicinal Product is placed on the market by the Marketing Authorisation Holder (or where applicable, the manufacturer/distributor) in a country and/or jurisdiction shall be provided A complete date consisting of day, month and year shall be specified using the ISO 8601 date format NOTE “Placed on the market” refers to the release of the Medicinal Product into the distribution chain",
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "Meta": {
      "description": "Metadata about a resource",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Element"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "lastUpdated": {
          "description": "When the resource version last changed",
          "type": "string"
        },
        "profile": {
          "description": "Profiles this resource claims to conform to",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "security": {
          "description": "Security Labels applied to this resource",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Coding"
          }
        },
        "source": {
          "description": "Identifies where the resource comes from",
          "type": "string"
        },
        "tag": {
          "description": "Tags applied to this resource",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Coding"
          }
        },
        "versionId": {
          "description": "Version specific identifier",
          "type": "string"
        }
      }
    },
    "Money": {
      "description": "An amount of economic utility in some recognized currency",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Element"
        }
      ],
      "properties": {
        "currency": {
          "description": "ISO 4217 Currency Code",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "value": {
          "format": "double",
          "description": "Numerical value (with implicit precision)",
          "type": "number"
        }
      }
    },
    "Narrative": {
      "description": "Human-readable summary of the resource (essential clinical and business information)",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Element"
        }
      ],
      "properties": {
        "div": {
          "description": "Limited xhtml content",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "status": {
          "description": "generated | extensions | additional | empty",
          "type": "string"
        }
      }
    },
    "ParameterDefinition": {
      "description": "Definition of a parameter to a module",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Element"
        }
      ],
      "properties": {
        "documentation": {
          "description": "A brief description of the parameter",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "max": {
          "description": "Maximum cardinality (a number of *)",
          "type": "string"
        },
        "min": {
          "format": "int32",
          "description": "Minimum cardinality",
          "type": "integer"
        },
        "name": {
          "description": "Name used to access the parameter value",
          "type": "string"
        },
        "profile": {
          "description": "What profile the value is expected to be",
          "type": "string"
        },
        "type": {
          "description": "What type of value",
          "type": "string"
        },
        "use": {
          "description": "in | out",
          "type": "string"
        }
      }
    },
    "Period": {
      "description": "Time range defined by start and end date/time",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Element"
        }
      ],
      "properties": {
        "end": {
          "description": "End time with inclusive boundary, if not ongoing",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "start": {
          "description": "Starting time with inclusive boundary",
          "type": "string"
        }
      }
    },
    "Population": {
      "description": "A definition of a set of people that apply to some clinically related context, for example people contraindicated for a certain medication",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "ageRange": {
          "$ref": "#/definitions/Range"
        },
        "ageCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "gender": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "physiologicalCondition": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "race": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "ProdCharacteristic": {
      "description": "The marketing status describes the date when a medicinal product is actually put on the market or the date as of which it is no longer available",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "color": {
          "description": "Where applicable, the color can be specified An appropriate controlled vocabulary shall be used The term and the term identifier shall be used",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "depth": {
          "$ref": "#/definitions/Quantity"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "externalDiameter": {
          "$ref": "#/definitions/Quantity"
        },
        "height": {
          "$ref": "#/definitions/Quantity"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "image": {
          "description": "Where applicable, the image can be provided The format of the image attachment shall be specified by regional implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Attachment"
          }
        },
        "imprint": {
          "description": "Where applicable, the imprint can be specified as text",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "nominalVolume": {
          "$ref": "#/definitions/Quantity"
        },
        "scoring": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "shape": {
          "description": "Where applicable, the shape can be specified An appropriate controlled vocabulary shall be used The term and the term identifier shall be used",
          "type": "string"
        },
        "weight": {
          "$ref": "#/definitions/Quantity"
        },
        "width": {
          "$ref": "#/definitions/Quantity"
        }
      }
    },
    "ProductShelfLife": {
      "description": "The shelf-life and storage information for a medicinal product item or container can be described using this class",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "identifier": {
          "$ref": "#/definitions/Identifier"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "period": {
          "$ref": "#/definitions/Quantity"
        },
        "specialPrecautionsForStorage": {
          "description": "Special precautions for storage, if any, can be specified using an appropriate controlled vocabulary The controlled term and the controlled term identifier shall be specified",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "Quantity": {
      "description": "A measured or measurable amount",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Element"
        }
      ],
      "properties": {
        "code": {
          "description": "Coded form of the unit",
          "type": "string"
        },
        "comparator": {
          "description": "< | <= | >= | > - how to understand the value",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "system": {
          "description": "System that defines coded unit form",
          "type": "string"
        },
        "unit": {
          "description": "Unit representation",
          "type": "string"
        },
        "value": {
          "format": "double",
          "description": "Numerical value (with implicit precision)",
          "type": "number"
        }
      }
    },
    "Range": {
      "description": "Set of values bounded by low and high",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Element"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "high": {
          "$ref": "#/definitions/Quantity"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "low": {
          "$ref": "#/definitions/Quantity"
        }
      }
    },
    "Ratio": {
      "description": "A ratio of two Quantity values - a numerator and a denominator",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Element"
        }
      ],
      "properties": {
        "denominator": {
          "$ref": "#/definitions/Quantity"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "numerator": {
          "$ref": "#/definitions/Quantity"
        }
      }
    },
    "Reference": {
      "description": "A reference from one resource to another",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Element"
        }
      ],
      "properties": {
        "display": {
          "description": "Text alternative for the resource",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "identifier": {
          "description": "Logical reference, when literal reference is not known",
          "type": "object"
        },
        "reference": {
          "description": "Literal reference, Relative, internal or absolute URL",
          "type": "string"
        },
        "type": {
          "description": "Type the reference refers to (e.g. \"Patient\")",
          "type": "string"
        }
      }
    },
    "RelatedArtifact": {
      "description": "Related artifacts for a knowledge resource",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Element"
        }
      ],
      "properties": {
        "citation": {
          "description": "Bibliographic citation for the artifact",
          "type": "string"
        },
        "display": {
          "description": "Brief description of the related artifact",
          "type": "string"
        },
        "document": {
          "$ref": "#/definitions/Attachment"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "label": {
          "description": "Short label",
          "type": "string"
        },
        "resource": {
          "description": "What resource is being referenced",
          "type": "string"
        },
        "type": {
          "description": "documentation | justification | citation | predecessor | successor | derived-from | depends-on | composed-of",
          "type": "string"
        },
        "url": {
          "description": "Where the artifact can be accessed",
          "type": "string"
        }
      }
    },
    "SampledData": {
      "description": "A series of measurements taken by a device",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Element"
        }
      ],
      "properties": {
        "data": {
          "description": "Decimal values with spaces, or \"E\" | \"U\" | \"L\"",
          "type": "string"
        },
        "dimensions": {
          "format": "int32",
          "description": "Number of sample points at each time point",
          "type": "integer"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "factor": {
          "format": "double",
          "description": "Multiply data by this before adding to origin",
          "type": "number"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "lowerLimit": {
          "format": "double",
          "description": "Lower limit of detection",
          "type": "number"
        },
        "origin": {
          "$ref": "#/definitions/Quantity"
        },
        "period": {
          "format": "double",
          "description": "Number of milliseconds between samples",
          "type": "number"
        },
        "upperLimit": {
          "format": "double",
          "description": "Upper limit of detection",
          "type": "number"
        }
      }
    },
    "Signature": {
      "description": "A Signature - XML DigSig, JWS, Graphical image of signature, etc.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Element"
        }
      ],
      "properties": {
        "data": {
          "format": "byte",
          "description": "The actual signature content (XML DigSig. JWS, picture, etc.)",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "onBehalfOf": {
          "$ref": "#/definitions/Reference"
        },
        "sigFormat": {
          "description": "The technical format of the signature",
          "type": "string"
        },
        "targetFormat": {
          "description": "The technical format of the signed resources",
          "type": "string"
        },
        "type": {
          "description": "Indication of the reason the entity signed the object(s)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Coding"
          }
        },
        "when": {
          "description": "When the signature was created",
          "type": "string"
        },
        "who": {
          "$ref": "#/definitions/Reference"
        }
      }
    },
    "SubstanceAmountReferenceRangeComponent": {
      "description": "Reference range of possible or expected values",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Element"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "highLimit": {
          "$ref": "#/definitions/Quantity"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "lowLimit": {
          "$ref": "#/definitions/Quantity"
        }
      }
    },
    "SubstanceAmount": {
      "description": "Chemical substances are a single substance type whose primary defining element is the molecular structure. Chemical substances shall be defined on the basis of their complete covalent molecular structure; the presence of a salt (counter-ion) and/or solvates (water, alcohols) is also captured. Purity, grade, physical form or particle size are not taken into account in the definition of a chemical substance or in the assignment of a Substance ID",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "amountQuantity": {
          "$ref": "#/definitions/Quantity"
        },
        "amountRange": {
          "$ref": "#/definitions/Range"
        },
        "amountString": {
          "description": "Used to capture quantitative values for a variety of elements. If only limits are given, the arithmetic mean would be the average. If only a single definite value for a given element is given, it would be captured in this field",
          "type": "string"
        },
        "amountText": {
          "description": "A textual comment on a numeric value",
          "type": "string"
        },
        "amountType": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "referenceRange": {
          "$ref": "#/definitions/SubstanceAmountReferenceRangeComponent"
        }
      }
    },
    "TimingRepeatComponent": {
      "description": "When the event is to occur",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Element"
        }
      ],
      "properties": {
        "boundsDuration": {
          "$ref": "#/definitions/Duration"
        },
        "boundsRange": {
          "$ref": "#/definitions/Range"
        },
        "boundsPeriod": {
          "$ref": "#/definitions/Period"
        },
        "count": {
          "format": "int32",
          "description": "Number of times to repeat",
          "type": "integer"
        },
        "countMax": {
          "format": "int32",
          "description": "Maximum number of times to repeat",
          "type": "integer"
        },
        "dayOfWeek": {
          "description": "mon | tue | wed | thu | fri | sat | sun",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "duration": {
          "format": "double",
          "description": "How long when it happens",
          "type": "number"
        },
        "durationMax": {
          "format": "double",
          "description": "How long when it happens (Max)",
          "type": "number"
        },
        "durationUnit": {
          "description": "s | min | h | d | wk | mo | a - unit of time (UCUM)",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "frequency": {
          "format": "int32",
          "description": "Event occurs frequency times per period",
          "type": "integer"
        },
        "frequencyMax": {
          "format": "int32",
          "description": "Event occurs up to frequencyMax times per period",
          "type": "integer"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "offset": {
          "format": "int32",
          "description": "Minutes from event (before or after)",
          "type": "integer"
        },
        "period": {
          "format": "double",
          "description": "Event occurs frequency times per period",
          "type": "number"
        },
        "periodMax": {
          "format": "double",
          "description": "Upper limit of period (3-4 hours)",
          "type": "number"
        },
        "periodUnit": {
          "description": "s | min | h | d | wk | mo | a - unit of time (UCUM)",
          "type": "string"
        },
        "timeOfDay": {
          "description": "Time of day for action",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "when": {
          "description": "Code for time period of occurrence",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Timing": {
      "description": "A timing schedule that specifies an event that may occur multiple times",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "code": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "event": {
          "description": "When the event occurs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "repeat": {
          "$ref": "#/definitions/TimingRepeatComponent"
        }
      }
    },
    "TriggerDefinition": {
      "description": "Defines an expected trigger for a module",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Element"
        }
      ],
      "properties": {
        "condition": {
          "$ref": "#/definitions/Expression"
        },
        "data": {
          "description": "Triggering data of the event (multiple = 'and')",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataRequirement"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "name": {
          "description": "Name or URI that identifies the event",
          "type": "string"
        },
        "timingTiming": {
          "$ref": "#/definitions/Timing"
        },
        "timingReference": {
          "$ref": "#/definitions/Reference"
        },
        "timingDate": {
          "description": "Timing of the event",
          "type": "string"
        },
        "timingDateTime": {
          "description": "Timing of the event",
          "type": "string"
        },
        "type": {
          "description": "named-event | periodic | data-changed | data-added | data-modified | data-removed | data-accessed | data-access-ended",
          "type": "string"
        }
      }
    },
    "UsageContext": {
      "description": "Describes the context of use for a conformance or knowledge resource",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Element"
        }
      ],
      "properties": {
        "code": {
          "$ref": "#/definitions/Coding"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "valueCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueQuantity": {
          "$ref": "#/definitions/Quantity"
        },
        "valueRange": {
          "$ref": "#/definitions/Range"
        },
        "valueReference": {
          "$ref": "#/definitions/Reference"
        }
      }
    },
    "AccountCoverageComponent": {
      "description": "The party(s) that are responsible for covering the payment of this account, and what order should they be applied to the account",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "coverage": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "priority": {
          "format": "int32",
          "description": "The priority of the coverage in the context of this account",
          "type": "integer"
        }
      }
    },
    "AccountGuarantorComponent": {
      "description": "The parties ultimately responsible for balancing the Account",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "onHold": {
          "description": "Credit or other hold applied",
          "type": "boolean"
        },
        "party": {
          "$ref": "#/definitions/Reference"
        },
        "period": {
          "$ref": "#/definitions/Period"
        }
      }
    },
    "Account": {
      "description": "Tracks balance, charges, for patient or cost center",
      "pattern": "Account",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "coverage": {
          "description": "The party(s) that are responsible for covering the payment of this account, and what order should they be applied to the account",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountCoverageComponent"
          }
        },
        "description": {
          "description": "Explanation of purpose/use",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "guarantor": {
          "description": "The parties ultimately responsible for balancing the Account",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountGuarantorComponent"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Account number",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Human-readable label",
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/Reference"
        },
        "partOf": {
          "$ref": "#/definitions/Reference"
        },
        "servicePeriod": {
          "$ref": "#/definitions/Period"
        },
        "status": {
          "description": "active | inactive | entered-in-error | on-hold | unknown",
          "type": "string"
        },
        "subject": {
          "description": "The entity that caused the expenses",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "ActivityDefinitionDynamicValueComponent": {
      "description": "Dynamic aspects of the definition",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "expression": {
          "$ref": "#/definitions/Expression"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "path": {
          "description": "The path to the element to be set dynamically",
          "type": "string"
        }
      }
    },
    "ActivityDefinitionParticipantComponent": {
      "description": "Who should participate in the action",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "role": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "type": {
          "description": "patient | practitioner | related-person | device",
          "type": "string"
        }
      }
    },
    "ActivityDefinition": {
      "description": "The definition of a specific activity to be taken, independent of any particular patient or context",
      "pattern": "ActivityDefinition",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "approvalDate": {
          "description": "When the activity definition was approved by publisher",
          "type": "string"
        },
        "author": {
          "description": "Who authored the content",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "bodySite": {
          "description": "What part of body to perform on",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "code": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "contact": {
          "description": "Contact details for the publisher",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "copyright": {
          "description": "Use and/or publishing restrictions",
          "type": "string"
        },
        "date": {
          "description": "Date last changed",
          "type": "string"
        },
        "description": {
          "description": "Natural language description of the activity definition",
          "type": "string"
        },
        "doNotPerform": {
          "description": "True if the activity should not be performed",
          "type": "boolean"
        },
        "dosage": {
          "description": "Detailed dosage instructions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Dosage"
          }
        },
        "dynamicValue": {
          "description": "Dynamic aspects of the definition",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ActivityDefinitionDynamicValueComponent"
          }
        },
        "editor": {
          "description": "Who edited the content",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "effectivePeriod": {
          "$ref": "#/definitions/Period"
        },
        "endorser": {
          "description": "Who endorsed the content",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "experimental": {
          "description": "For testing purposes, not real usage",
          "type": "boolean"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Additional identifier for the activity definition",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "intent": {
          "description": "proposal | plan | directive | order | original-order | reflex-order | filler-order | instance-order | option",
          "type": "string"
        },
        "jurisdiction": {
          "description": "Intended jurisdiction for activity definition (if applicable)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "kind": {
          "description": "Kind of resource",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "lastReviewDate": {
          "description": "When the activity definition was last reviewed",
          "type": "string"
        },
        "library": {
          "description": "Logic used by the activity definition",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "location": {
          "$ref": "#/definitions/Reference"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Name for this activity definition (computer friendly)",
          "type": "string"
        },
        "observationRequirement": {
          "description": "What observations are required to perform this action",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "observationResultRequirement": {
          "description": "What observations must be produced by this action",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "participant": {
          "description": "Who should participate in the action",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ActivityDefinitionParticipantComponent"
          }
        },
        "priority": {
          "description": "routine | urgent | asap | stat",
          "type": "string"
        },
        "productReference": {
          "$ref": "#/definitions/Reference"
        },
        "productCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "profile": {
          "description": "What profile the resource needs to conform to",
          "type": "string"
        },
        "publisher": {
          "description": "Name of the publisher (organization or individual)",
          "type": "string"
        },
        "purpose": {
          "description": "Why this activity definition is defined",
          "type": "string"
        },
        "quantity": {
          "$ref": "#/definitions/Quantity"
        },
        "relatedArtifact": {
          "description": "Additional documentation, citations, etc.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedArtifact"
          }
        },
        "reviewer": {
          "description": "Who reviewed the content",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "specimenRequirement": {
          "description": "What specimens are required to perform this action",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "status": {
          "description": "draft | active | retired | unknown",
          "type": "string"
        },
        "subjectCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "subjectReference": {
          "$ref": "#/definitions/Reference"
        },
        "subtitle": {
          "description": "Subordinate title of the activity definition",
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "timingTiming": {
          "$ref": "#/definitions/Timing"
        },
        "timingDateTime": {
          "description": "When activity is to occur",
          "type": "string"
        },
        "timingAge": {
          "$ref": "#/definitions/Age"
        },
        "timingPeriod": {
          "$ref": "#/definitions/Period"
        },
        "timingRange": {
          "$ref": "#/definitions/Range"
        },
        "timingDuration": {
          "$ref": "#/definitions/Duration"
        },
        "title": {
          "description": "Name for this activity definition (human friendly)",
          "type": "string"
        },
        "topic": {
          "description": "E.g. Education, Treatment, Assessment, etc.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "transform": {
          "description": "Transform to apply the template",
          "type": "string"
        },
        "url": {
          "description": "Canonical identifier for this activity definition, represented as a URI (globally unique)",
          "type": "string"
        },
        "usage": {
          "description": "Describes the clinical usage of the activity definition",
          "type": "string"
        },
        "useContext": {
          "description": "The context that the content is intended to support",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UsageContext"
          }
        },
        "version": {
          "description": "Business version of the activity definition",
          "type": "string"
        }
      }
    },
    "AdverseEventCausalityComponent": {
      "description": "Information on the possible cause of the event",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "assessment": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "author": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "method": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "productRelatedness": {
          "description": "AdverseEvent.suspectEntity.causalityProductRelatedness",
          "type": "string"
        }
      }
    },
    "AdverseEventSuspectEntityComponent": {
      "description": "The suspected agent causing the adverse event",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "causality": {
          "description": "Information on the possible cause of the event",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdverseEventCausalityComponent"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "instance": {
          "$ref": "#/definitions/Reference"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "AdverseEvent": {
      "description": "Medical care, research study or other healthcare event causing physical injury",
      "pattern": "AdverseEvent",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "actuality": {
          "description": "actual | potential",
          "type": "string"
        },
        "category": {
          "description": "product-problem | product-quality | product-use-error | wrong-dose | incorrect-prescribing-information | wrong-technique | wrong-route-of-administration | wrong-rate | wrong-duration | wrong-time | expired-drug | medical-device-use-error | problem-different-manufacturer | unsafe-physical-environment",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "contributor": {
          "description": "Who  was involved in the adverse event or the potential adverse event",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "date": {
          "description": "When the event occurred",
          "type": "string"
        },
        "detected": {
          "description": "When the event was detected",
          "type": "string"
        },
        "encounter": {
          "$ref": "#/definitions/Reference"
        },
        "event": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "$ref": "#/definitions/Identifier"
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/Reference"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "outcome": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "recordedDate": {
          "description": "When the event was recorded",
          "type": "string"
        },
        "recorder": {
          "$ref": "#/definitions/Reference"
        },
        "referenceDocument": {
          "description": "AdverseEvent.referenceDocument",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "resultingCondition": {
          "description": "Effect on the subject due to this event",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "seriousness": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "severity": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "study": {
          "description": "AdverseEvent.study",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "subject": {
          "$ref": "#/definitions/Reference"
        },
        "subjectMedicalHistory": {
          "description": "AdverseEvent.subjectMedicalHistory",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "suspectEntity": {
          "description": "The suspected agent causing the adverse event",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdverseEventSuspectEntityComponent"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "AllergyIntoleranceReactionComponent": {
      "description": "Adverse Reaction Events linked to exposure to substance",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "description": {
          "description": "Description of the event as a whole",
          "type": "string"
        },
        "exposureRoute": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "manifestation": {
          "description": "Clinical symptoms/signs associated with the Event",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "note": {
          "description": "Text about event not captured in other fields",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "onset": {
          "description": "Date(/time) when manifestations showed",
          "type": "string"
        },
        "severity": {
          "description": "mild | moderate | severe (of event as a whole)",
          "type": "string"
        },
        "substance": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "AllergyIntolerance": {
      "description": "Allergy or Intolerance (generally: Risk of adverse reaction to a substance)",
      "pattern": "AllergyIntolerance",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "asserter": {
          "$ref": "#/definitions/Reference"
        },
        "category": {
          "description": "food | medication | environment | biologic",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clinicalStatus": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "code": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "criticality": {
          "description": "low | high | unable-to-assess",
          "type": "string"
        },
        "encounter": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "External ids for this item",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "lastOccurrence": {
          "description": "Date(/time) of last known occurrence of a reaction",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "note": {
          "description": "Additional text not captured in other fields",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "onsetDateTime": {
          "description": "When allergy or intolerance was identified",
          "type": "string"
        },
        "onsetAge": {
          "$ref": "#/definitions/Age"
        },
        "onsetPeriod": {
          "$ref": "#/definitions/Period"
        },
        "onsetRange": {
          "$ref": "#/definitions/Range"
        },
        "onsetString": {
          "description": "When allergy or intolerance was identified",
          "type": "string"
        },
        "patient": {
          "$ref": "#/definitions/Reference"
        },
        "reaction": {
          "description": "Adverse Reaction Events linked to exposure to substance",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AllergyIntoleranceReactionComponent"
          }
        },
        "recordedDate": {
          "description": "Date first version of the resource instance was recorded",
          "type": "string"
        },
        "recorder": {
          "$ref": "#/definitions/Reference"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "type": {
          "description": "allergy | intolerance - Underlying mechanism (if known)",
          "type": "string"
        },
        "verificationStatus": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "AppointmentParticipantComponent": {
      "description": "Participants involved in appointment",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "actor": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "period": {
          "$ref": "#/definitions/Period"
        },
        "required": {
          "description": "required | optional | information-only",
          "type": "string"
        },
        "status": {
          "description": "accepted | declined | tentative | needs-action",
          "type": "string"
        },
        "type": {
          "description": "Role of participant in the appointment",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        }
      }
    },
    "Appointment": {
      "description": "A booking of a healthcare event among patient(s), practitioner(s), related person(s) and/or device(s) for a specific date/time. This may result in one or more Encounter(s)",
      "pattern": "Appointment",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "appointmentType": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "basedOn": {
          "description": "The service request this appointment is allocated to assess",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "cancelationReason": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "comment": {
          "description": "Additional comments",
          "type": "string"
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "created": {
          "description": "The date that this appointment was initially created",
          "type": "string"
        },
        "description": {
          "description": "Shown on a subject line in a meeting request, or appointment list",
          "type": "string"
        },
        "end": {
          "description": "When appointment is to conclude",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "External Ids for this item",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "minutesDuration": {
          "format": "int32",
          "description": "Can be less than start/end (e.g. estimate)",
          "type": "integer"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "participant": {
          "description": "Participants involved in appointment",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppointmentParticipantComponent"
          }
        },
        "patientInstruction": {
          "description": "Detailed information and instructions for the patient",
          "type": "string"
        },
        "priority": {
          "format": "int32",
          "description": "Used to make informed decisions if needing to re-prioritize",
          "type": "integer"
        },
        "reasonCode": {
          "description": "Coded reason this appointment is scheduled",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "reasonReference": {
          "description": "Reason the appointment is to take place (resource)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "requestedPeriod": {
          "description": "Potential date/time interval(s) requested to allocate the appointment within",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Period"
          }
        },
        "serviceCategory": {
          "description": "A broad categorization of the service that is to be performed during this appointment",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "serviceType": {
          "description": "The specific service that is to be performed during this appointment",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "slot": {
          "description": "The slots that this appointment is filling",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "specialty": {
          "description": "The specialty of a practitioner that would be required to perform the service requested in this appointment",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "start": {
          "description": "When appointment is to take place",
          "type": "string"
        },
        "status": {
          "description": "proposed | pending | booked | arrived | fulfilled | cancelled | noshow | entered-in-error | checked-in | waitlist",
          "type": "string"
        },
        "supportingInformation": {
          "description": "Additional information to support the appointment",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "AppointmentResponse": {
      "description": "A reply to an appointment request for a patient and/or practitioner(s), such as a confirmation or rejection",
      "pattern": "AppointmentResponse",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "actor": {
          "$ref": "#/definitions/Reference"
        },
        "appointment": {
          "$ref": "#/definitions/Reference"
        },
        "comment": {
          "description": "Additional comments",
          "type": "string"
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "end": {
          "description": "Time from appointment, or requested new end time",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "External Ids for this item",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "participantStatus": {
          "description": "accepted | declined | tentative | needs-action",
          "type": "string"
        },
        "participantType": {
          "description": "Role of participant in the appointment",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "start": {
          "description": "Time from appointment, or requested new start time",
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "AuditEventNetworkComponent": {
      "description": "Logical network location for application activity",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "address": {
          "description": "Identifier for the network access point of the user device",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "type": {
          "description": "The type of network access point",
          "type": "string"
        }
      }
    },
    "AuditEventAgentComponent": {
      "description": "Actor involved in the event",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "altId": {
          "description": "Alternative User identity",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/Reference"
        },
        "media": {
          "$ref": "#/definitions/Coding"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Human friendly name for the agent",
          "type": "string"
        },
        "network": {
          "$ref": "#/definitions/AuditEventNetworkComponent"
        },
        "policy": {
          "description": "Policy that authorized event",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "purposeOfUse": {
          "description": "Reason given for this user",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "requestor": {
          "description": "Whether user is initiator",
          "type": "boolean"
        },
        "role": {
          "description": "Agent role in the event",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "who": {
          "$ref": "#/definitions/Reference"
        }
      }
    },
    "AuditEventDetailComponent": {
      "description": "Additional Information about the entity",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "type": {
          "description": "Name of the property",
          "type": "string"
        },
        "valueString": {
          "description": "Property value",
          "type": "string"
        },
        "valueBase64Binary": {
          "format": "byte",
          "description": "Property value",
          "type": "string"
        }
      }
    },
    "AuditEventEntityComponent": {
      "description": "Data or objects used",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "description": {
          "description": "Descriptive text",
          "type": "string"
        },
        "detail": {
          "description": "Additional Information about the entity",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AuditEventDetailComponent"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "lifecycle": {
          "$ref": "#/definitions/Coding"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Descriptor for entity",
          "type": "string"
        },
        "query": {
          "format": "byte",
          "description": "Query parameters",
          "type": "string"
        },
        "role": {
          "$ref": "#/definitions/Coding"
        },
        "securityLabel": {
          "description": "Security labels on the entity",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Coding"
          }
        },
        "type": {
          "$ref": "#/definitions/Coding"
        },
        "what": {
          "$ref": "#/definitions/Reference"
        }
      }
    },
    "AuditEventSourceComponent": {
      "description": "Audit Event Reporter",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "observer": {
          "$ref": "#/definitions/Reference"
        },
        "site": {
          "description": "Logical source location within the enterprise",
          "type": "string"
        },
        "type": {
          "description": "The type of source where event originated",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Coding"
          }
        }
      }
    },
    "AuditEvent": {
      "description": "Event record kept for security purposes",
      "pattern": "AuditEvent",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "action": {
          "description": "Type of action performed during the event",
          "type": "string"
        },
        "agent": {
          "description": "Actor involved in the event",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AuditEventAgentComponent"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "entity": {
          "description": "Data or objects used",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AuditEventEntityComponent"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "outcome": {
          "description": "Whether the event succeeded or failed",
          "type": "string"
        },
        "outcomeDesc": {
          "description": "Description of the event outcome",
          "type": "string"
        },
        "period": {
          "$ref": "#/definitions/Period"
        },
        "purposeOfEvent": {
          "description": "The purposeOfUse of the event",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "recorded": {
          "description": "Time when the event was recorded",
          "type": "string"
        },
        "source": {
          "$ref": "#/definitions/AuditEventSourceComponent"
        },
        "subtype": {
          "description": "More specific type/id for the event",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Coding"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "type": {
          "$ref": "#/definitions/Coding"
        }
      }
    },
    "Basic": {
      "description": "Resource for non-supported content",
      "pattern": "Basic",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "author": {
          "$ref": "#/definitions/Reference"
        },
        "code": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "created": {
          "description": "When created",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Business identifier",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "subject": {
          "$ref": "#/definitions/Reference"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "Binary": {
      "description": "Pure binary content defined by a format other than FHIR",
      "pattern": "Binary",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "contentType": {
          "description": "MimeType of the binary content",
          "type": "string"
        },
        "data": {
          "format": "byte",
          "description": "The actual content",
          "type": "string"
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "securityContext": {
          "$ref": "#/definitions/Reference"
        }
      }
    },
    "BiologicallyDerivedProductCollectionComponent": {
      "description": "How this product was collected",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "collectedDateTime": {
          "description": "Time of product collection",
          "type": "string"
        },
        "collectedPeriod": {
          "$ref": "#/definitions/Period"
        },
        "collector": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "source": {
          "$ref": "#/definitions/Reference"
        }
      }
    },
    "BiologicallyDerivedProductManipulationComponent": {
      "description": "Any manipulation of product post-collection",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "description": {
          "description": "Description of manipulation",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "timeDateTime": {
          "description": "Time of manipulation",
          "type": "string"
        },
        "timePeriod": {
          "$ref": "#/definitions/Period"
        }
      }
    },
    "BiologicallyDerivedProductProcessingComponent": {
      "description": "Any processing of the product during collection",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "additive": {
          "$ref": "#/definitions/Reference"
        },
        "description": {
          "description": "Description of of processing",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "procedure": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "timeDateTime": {
          "description": "Time of processing",
          "type": "string"
        },
        "timePeriod": {
          "$ref": "#/definitions/Period"
        }
      }
    },
    "BiologicallyDerivedProductStorageComponent": {
      "description": "Product storage",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "description": {
          "description": "Description of storage",
          "type": "string"
        },
        "duration": {
          "$ref": "#/definitions/Period"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "scale": {
          "description": "farenheit | celsius | kelvin",
          "type": "string"
        },
        "temperature": {
          "format": "double",
          "description": "Storage temperature",
          "type": "number"
        }
      }
    },
    "BiologicallyDerivedProduct": {
      "description": "A material substance originating from a biological entity",
      "pattern": "BiologicallyDerivedProduct",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "collection": {
          "$ref": "#/definitions/BiologicallyDerivedProductCollectionComponent"
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "External ids for this item",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "manipulation": {
          "$ref": "#/definitions/BiologicallyDerivedProductManipulationComponent"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "parent": {
          "description": "BiologicallyDerivedProduct parent",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "processing": {
          "description": "Any processing of the product during collection",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BiologicallyDerivedProductProcessingComponent"
          }
        },
        "productCategory": {
          "description": "organ | tissue | fluid | cells | biologicalAgent",
          "type": "string"
        },
        "productCode": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "quantity": {
          "format": "int32",
          "description": "The amount of this biologically derived product",
          "type": "integer"
        },
        "request": {
          "description": "Procedure request",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "status": {
          "description": "available | unavailable",
          "type": "string"
        },
        "storage": {
          "description": "Product storage",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BiologicallyDerivedProductStorageComponent"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "BodyStructure": {
      "description": "Specific and identified anatomical structure",
      "pattern": "BodyStructure",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "active": {
          "description": "Whether this record is in active use",
          "type": "boolean"
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "description": {
          "description": "Text description",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Bodystructure identifier",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "image": {
          "description": "Attached images",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Attachment"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "locationQualifier": {
          "description": "Body site modifier",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "morphology": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "patient": {
          "$ref": "#/definitions/Reference"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "BundleRequestComponent": {
      "description": "Additional execution information (transaction/batch/history)",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "ifMatch": {
          "description": "For managing update contention",
          "type": "string"
        },
        "ifModifiedSince": {
          "description": "For managing cache currency",
          "type": "string"
        },
        "ifNoneExist": {
          "description": "For conditional creates",
          "type": "string"
        },
        "ifNoneMatch": {
          "description": "For managing cache currency",
          "type": "string"
        },
        "method": {
          "description": "GET | HEAD | POST | PUT | DELETE | PATCH",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "url": {
          "description": "URL for HTTP equivalent of this entry",
          "type": "string"
        }
      }
    },
    "BundleResponseComponent": {
      "description": "Results of execution (transaction/batch/history)",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "etag": {
          "description": "The Etag for the resource (if relevant)",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "lastModified": {
          "description": "Server's date time modified",
          "type": "string"
        },
        "location": {
          "description": "The location (if the operation returns a location)",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "outcome": {
          "$ref": "#/definitions/Resource"
        },
        "status": {
          "description": "Status response code (text optional)",
          "type": "string"
        }
      }
    },
    "BundleSearchComponent": {
      "description": "Search related information",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "mode": {
          "description": "match | include | outcome - why this is in the result set",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "score": {
          "format": "double",
          "description": "Search ranking (between 0 and 1)",
          "type": "number"
        }
      }
    },
    "BundleEntryComponent": {
      "description": "Entry in the bundle - will have a resource or information",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "fullUrl": {
          "description": "URI for resource (Absolute URL server address or URI for UUID/OID)",
          "type": "string"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "link": {
          "description": "Links related to this entry",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BundleLinkComponent"
          }
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "request": {
          "$ref": "#/definitions/BundleRequestComponent"
        },
        "resource": {
          "$ref": "#/definitions/Resource"
        },
        "response": {
          "$ref": "#/definitions/BundleResponseComponent"
        },
        "search": {
          "$ref": "#/definitions/BundleSearchComponent"
        }
      }
    },
    "BundleLinkComponent": {
      "description": "Links related to this Bundle",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "relation": {
          "description": "See http://www.iana.org/assignments/link-relations/link-relations.xhtml#link-relations-1",
          "type": "string"
        },
        "url": {
          "description": "Reference details for the link",
          "type": "string"
        }
      }
    },
    "Bundle": {
      "description": "Contains a collection of resources",
      "pattern": "Bundle",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "entry": {
          "description": "Entry in the bundle - will have a resource or information",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BundleEntryComponent"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "$ref": "#/definitions/Identifier"
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "link": {
          "description": "Links related to this Bundle",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BundleLinkComponent"
          }
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "signature": {
          "$ref": "#/definitions/Signature"
        },
        "timestamp": {
          "description": "When the bundle was assembled",
          "type": "string"
        },
        "total": {
          "format": "int32",
          "description": "If search, the total number of matches",
          "type": "integer"
        },
        "type": {
          "description": "document | message | transaction | transaction-response | batch | batch-response | history | searchset | collection",
          "type": "string"
        }
      }
    },
    "CapabilityStatementDocumentComponent": {
      "description": "Document definition",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "documentation": {
          "description": "Description of document support",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "mode": {
          "description": "producer | consumer",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "profile": {
          "description": "Constraint on the resources used in the document",
          "type": "string"
        }
      }
    },
    "CapabilityStatementImplementationComponent": {
      "description": "If this describes a specific instance",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "custodian": {
          "$ref": "#/definitions/Reference"
        },
        "description": {
          "description": "Describes this specific instance",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "url": {
          "description": "Base URL for the installation",
          "type": "string"
        }
      }
    },
    "CapabilityStatementEndpointComponent": {
      "description": "Where messages should be sent",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "address": {
          "description": "Network address or identifier of the end-point",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "protocol": {
          "$ref": "#/definitions/Coding"
        }
      }
    },
    "CapabilityStatementSupportedMessageComponent": {
      "description": "Messages supported by this system",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "definition": {
          "description": "Message supported by this system",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "mode": {
          "description": "sender | receiver",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "CapabilityStatementMessagingComponent": {
      "description": "If messaging is supported",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "documentation": {
          "description": "Messaging interface behavior details",
          "type": "string"
        },
        "endpoint": {
          "description": "Where messages should be sent",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CapabilityStatementEndpointComponent"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "reliableCache": {
          "format": "int32",
          "description": "Reliable Message Cache Length (min)",
          "type": "integer"
        },
        "supportedMessage": {
          "description": "Messages supported by this system",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CapabilityStatementSupportedMessageComponent"
          }
        }
      }
    },
    "CapabilityStatementSystemInteractionComponent": {
      "description": "What operations are supported?",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "code": {
          "description": "transaction | batch | search-system | history-system",
          "type": "string"
        },
        "documentation": {
          "description": "Anything special about operation behavior",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "CapabilityStatementResourceInteractionComponent": {
      "description": "What operations are supported?",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "code": {
          "description": "read | vread | update | patch | delete | history-instance | history-type | create | search-type",
          "type": "string"
        },
        "documentation": {
          "description": "Anything special about operation behavior",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "CapabilityStatementOperationComponent": {
      "description": "Definition of a resource operation",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "definition": {
          "description": "The defined operation/query",
          "type": "string"
        },
        "documentation": {
          "description": "Specific details about operation behavior",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Name by which the operation/query is invoked",
          "type": "string"
        }
      }
    },
    "CapabilityStatementSearchParamComponent": {
      "description": "Search parameters supported by implementation",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "definition": {
          "description": "Source of definition for parameter",
          "type": "string"
        },
        "documentation": {
          "description": "Server-specific usage",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Name of search parameter",
          "type": "string"
        },
        "type": {
          "description": "number | date | string | token | reference | composite | quantity | uri | special",
          "type": "string"
        }
      }
    },
    "CapabilityStatementResourceComponent": {
      "description": "Resource served on the REST interface",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "conditionalCreate": {
          "description": "If allows/uses conditional create",
          "type": "boolean"
        },
        "conditionalDelete": {
          "description": "not-supported | single | multiple - how conditional delete is supported",
          "type": "string"
        },
        "conditionalRead": {
          "description": "not-supported | modified-since | not-match | full-support",
          "type": "string"
        },
        "conditionalUpdate": {
          "description": "If allows/uses conditional update",
          "type": "boolean"
        },
        "documentation": {
          "description": "Additional information about the use of the resource type",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "interaction": {
          "description": "What operations are supported?",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CapabilityStatementResourceInteractionComponent"
          }
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "operation": {
          "description": "Definition of a resource operation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CapabilityStatementOperationComponent"
          }
        },
        "profile": {
          "description": "Base System profile for all uses of resource",
          "type": "string"
        },
        "readHistory": {
          "description": "Whether vRead can return past versions",
          "type": "boolean"
        },
        "referencePolicy": {
          "description": "literal | logical | resolves | enforced | local",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "searchInclude": {
          "description": "_include values supported by the server",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "searchParam": {
          "description": "Search parameters supported by implementation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CapabilityStatementSearchParamComponent"
          }
        },
        "searchRevInclude": {
          "description": "_revinclude values supported by the server",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "supportedProfile": {
          "description": "Profiles for use cases supported",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "description": "A resource type that is supported",
          "type": "string"
        },
        "updateCreate": {
          "description": "If update can commit to a new identity",
          "type": "boolean"
        },
        "versioning": {
          "description": "no-version | versioned | versioned-update",
          "type": "string"
        }
      }
    },
    "CapabilityStatementSecurityComponent": {
      "description": "Information about security of implementation",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "cors": {
          "description": "Adds CORS Headers (http://enable-cors.org/)",
          "type": "boolean"
        },
        "description": {
          "description": "General description of how security works",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "service": {
          "description": "OAuth | SMART-on-FHIR | NTLM | Basic | Kerberos | Certificates",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        }
      }
    },
    "CapabilityStatementRestComponent": {
      "description": "If the endpoint is a RESTful one",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "compartment": {
          "description": "Compartments served/used by system",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "documentation": {
          "description": "General description of implementation",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "interaction": {
          "description": "What operations are supported?",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CapabilityStatementSystemInteractionComponent"
          }
        },
        "mode": {
          "description": "client | server",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "operation": {
          "description": "Definition of a system level operation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CapabilityStatementOperationComponent"
          }
        },
        "resource": {
          "description": "Resource served on the REST interface",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CapabilityStatementResourceComponent"
          }
        },
        "searchParam": {
          "description": "Search parameters for searching all resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CapabilityStatementSearchParamComponent"
          }
        },
        "security": {
          "$ref": "#/definitions/CapabilityStatementSecurityComponent"
        }
      }
    },
    "CapabilityStatementSoftwareComponent": {
      "description": "Software that is covered by this capability statement",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "A name the software is known by",
          "type": "string"
        },
        "releaseDate": {
          "description": "Date this version was released",
          "type": "string"
        },
        "version": {
          "description": "Version covered by this statement",
          "type": "string"
        }
      }
    },
    "CapabilityStatement": {
      "description": "A statement of system capabilities",
      "pattern": "CapabilityStatement",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "contact": {
          "description": "Contact details for the publisher",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "copyright": {
          "description": "Use and/or publishing restrictions",
          "type": "string"
        },
        "date": {
          "description": "Date last changed",
          "type": "string"
        },
        "description": {
          "description": "Natural language description of the capability statement",
          "type": "string"
        },
        "document": {
          "description": "Document definition",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CapabilityStatementDocumentComponent"
          }
        },
        "experimental": {
          "description": "For testing purposes, not real usage",
          "type": "boolean"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "fhirVersion": {
          "description": "FHIR Version the system supports",
          "type": "string"
        },
        "format": {
          "description": "formats supported (xml | json | ttl | mime type)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "implementation": {
          "$ref": "#/definitions/CapabilityStatementImplementationComponent"
        },
        "implementationGuide": {
          "description": "Implementation guides supported",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "imports": {
          "description": "Canonical URL of another capability statement this adds to",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "instantiates": {
          "description": "Canonical URL of another capability statement this implements",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "jurisdiction": {
          "description": "Intended jurisdiction for capability statement (if applicable)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "kind": {
          "description": "instance | capability | requirements",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "messaging": {
          "description": "If messaging is supported",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CapabilityStatementMessagingComponent"
          }
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Name for this capability statement (computer friendly)",
          "type": "string"
        },
        "patchFormat": {
          "description": "Patch formats supported",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "publisher": {
          "description": "Name of the publisher (organization or individual)",
          "type": "string"
        },
        "purpose": {
          "description": "Why this capability statement is defined",
          "type": "string"
        },
        "rest": {
          "description": "If the endpoint is a RESTful one",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CapabilityStatementRestComponent"
          }
        },
        "software": {
          "$ref": "#/definitions/CapabilityStatementSoftwareComponent"
        },
        "status": {
          "description": "draft | active | retired | unknown",
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "title": {
          "description": "Name for this capability statement (human friendly)",
          "type": "string"
        },
        "url": {
          "description": "Canonical identifier for this capability statement, represented as a URI (globally unique)",
          "type": "string"
        },
        "useContext": {
          "description": "The context that the content is intended to support",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UsageContext"
          }
        },
        "version": {
          "description": "Business version of the capability statement",
          "type": "string"
        }
      }
    },
    "CarePlanDetailComponent": {
      "description": "In-line definition of activity",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "code": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "dailyAmount": {
          "$ref": "#/definitions/Quantity"
        },
        "description": {
          "description": "Extra info describing activity to perform",
          "type": "string"
        },
        "doNotPerform": {
          "description": "If true, activity is prohibiting action",
          "type": "boolean"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "goal": {
          "description": "Goals this activity relates to",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "instantiatesCanonical": {
          "description": "Instantiates FHIR protocol or definition",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "instantiatesUri": {
          "description": "Instantiates external protocol or definition",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "kind": {
          "description": "Appointment | CommunicationRequest | DeviceRequest | MedicationRequest | NutritionOrder | Task | ServiceRequest | VisionPrescription",
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/Reference"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "performer": {
          "description": "Who will be responsible?",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "productCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "productReference": {
          "$ref": "#/definitions/Reference"
        },
        "quantity": {
          "$ref": "#/definitions/Quantity"
        },
        "reasonCode": {
          "description": "Why activity should be done or why activity was prohibited",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "reasonReference": {
          "description": "Why activity is needed",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "scheduledTiming": {
          "$ref": "#/definitions/Timing"
        },
        "scheduledPeriod": {
          "$ref": "#/definitions/Period"
        },
        "scheduledString": {
          "description": "When activity is to occur",
          "type": "string"
        },
        "status": {
          "description": "not-started | scheduled | in-progress | on-hold | completed | cancelled | stopped | unknown | entered-in-error",
          "type": "string"
        },
        "statusReason": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "CarePlanActivityComponent": {
      "description": "Action to occur as part of plan",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "detail": {
          "$ref": "#/definitions/CarePlanDetailComponent"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "outcomeCodeableConcept": {
          "description": "Results of the activity",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "outcomeReference": {
          "description": "Appointment, Encounter, Procedure, etc.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "progress": {
          "description": "Comments about the activity status/progress",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "reference": {
          "$ref": "#/definitions/Reference"
        }
      }
    },
    "CarePlan": {
      "description": "Healthcare plan for patient or group",
      "pattern": "CarePlan",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "activity": {
          "description": "Action to occur as part of plan",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CarePlanActivityComponent"
          }
        },
        "addresses": {
          "description": "Health issues this plan addresses",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "author": {
          "$ref": "#/definitions/Reference"
        },
        "basedOn": {
          "description": "Fulfills CarePlan",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "careTeam": {
          "description": "Who's involved in plan?",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "category": {
          "description": "Type of plan",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "contributor": {
          "description": "Who provided the content of the care plan",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "created": {
          "description": "Date record was first recorded",
          "type": "string"
        },
        "description": {
          "description": "Summary of nature of plan",
          "type": "string"
        },
        "encounter": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "goal": {
          "description": "Desired outcome of plan",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "External Ids for this plan",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "instantiatesCanonical": {
          "description": "Instantiates FHIR protocol or definition",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "instantiatesUri": {
          "description": "Instantiates external protocol or definition",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "intent": {
          "description": "proposal | plan | order | option",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "note": {
          "description": "Comments about the plan",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "partOf": {
          "description": "Part of referenced CarePlan",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "period": {
          "$ref": "#/definitions/Period"
        },
        "replaces": {
          "description": "CarePlan replaced by this CarePlan",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "status": {
          "description": "draft | active | on-hold | revoked | completed | entered-in-error | unknown",
          "type": "string"
        },
        "subject": {
          "$ref": "#/definitions/Reference"
        },
        "supportingInfo": {
          "description": "Information considered as part of plan",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "title": {
          "description": "Human-friendly name for the care plan",
          "type": "string"
        }
      }
    },
    "CareTeamParticipantComponent": {
      "description": "Members of the team",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "member": {
          "$ref": "#/definitions/Reference"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "onBehalfOf": {
          "$ref": "#/definitions/Reference"
        },
        "period": {
          "$ref": "#/definitions/Period"
        },
        "role": {
          "description": "Type of involvement",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        }
      }
    },
    "CareTeam": {
      "description": "Planned participants in the coordination and delivery of care for a patient or group",
      "pattern": "CareTeam",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "category": {
          "description": "Type of team",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "encounter": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "External Ids for this team",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "managingOrganization": {
          "description": "Organization responsible for the care team",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Name of the team, such as crisis assessment team",
          "type": "string"
        },
        "note": {
          "description": "Comments made about the CareTeam",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "participant": {
          "description": "Members of the team",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CareTeamParticipantComponent"
          }
        },
        "period": {
          "$ref": "#/definitions/Period"
        },
        "reasonCode": {
          "description": "Why the care team exists",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "reasonReference": {
          "description": "Why the care team exists",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "status": {
          "description": "proposed | active | suspended | inactive | entered-in-error",
          "type": "string"
        },
        "subject": {
          "$ref": "#/definitions/Reference"
        },
        "telecom": {
          "description": "A contact detail for the care team (that applies to all members)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactPoint"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "CatalogEntryRelatedEntryComponent": {
      "description": "An item that this catalog entry is related to",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "item": {
          "$ref": "#/definitions/Reference"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "relationtype": {
          "description": "triggers | is-replaced-by",
          "type": "string"
        }
      }
    },
    "CatalogEntry": {
      "description": "An entry in a catalog",
      "pattern": "CatalogEntry",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "additionalCharacteristic": {
          "description": "Additional characteristics of the catalog entry",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "additionalClassification": {
          "description": "Additional classification of the catalog entry",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "additionalIdentifier": {
          "description": "Any additional identifier(s) for the catalog item, in the same granularity or concept",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "classification": {
          "description": "Classification (category or class) of the item entry",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Unique identifier of the catalog item",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "lastUpdated": {
          "description": "When was this catalog last updated",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "orderable": {
          "description": "Whether the entry represents an orderable item",
          "type": "boolean"
        },
        "referencedItem": {
          "$ref": "#/definitions/Reference"
        },
        "relatedEntry": {
          "description": "An item that this catalog entry is related to",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogEntryRelatedEntryComponent"
          }
        },
        "status": {
          "description": "draft | active | retired | unknown",
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "validityPeriod": {
          "$ref": "#/definitions/Period"
        },
        "validTo": {
          "description": "The date until which this catalog entry is expected to be active",
          "type": "string"
        }
      }
    },
    "ChargeItemPerformerComponent": {
      "description": "Who performed charged service",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "actor": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "function": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "ChargeItem": {
      "description": "Item containing charge code(s) associated with the provision of healthcare provider products",
      "pattern": "ChargeItem",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "account": {
          "description": "Account to place this charge",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "bodysite": {
          "description": "Anatomical location, if relevant",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "code": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "context": {
          "$ref": "#/definitions/Reference"
        },
        "costCenter": {
          "$ref": "#/definitions/Reference"
        },
        "definitionCanonical": {
          "description": "Resource defining the code of this ChargeItem",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "definitionUri": {
          "description": "Defining information about the code of this charge item",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "enteredDate": {
          "description": "Date the charge item was entered",
          "type": "string"
        },
        "enterer": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "factorOverride": {
          "format": "double",
          "description": "Factor overriding the associated rules",
          "type": "number"
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Business Identifier for item",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "note": {
          "description": "Comments made about the ChargeItem",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "occurrenceDateTime": {
          "description": "When the charged service was applied",
          "type": "string"
        },
        "occurrencePeriod": {
          "$ref": "#/definitions/Period"
        },
        "occurrenceTiming": {
          "$ref": "#/definitions/Timing"
        },
        "overrideReason": {
          "description": "Reason for overriding the list price/factor",
          "type": "string"
        },
        "partOf": {
          "description": "Part of referenced ChargeItem",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "performer": {
          "description": "Who performed charged service",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChargeItemPerformerComponent"
          }
        },
        "performingOrganization": {
          "$ref": "#/definitions/Reference"
        },
        "priceOverride": {
          "$ref": "#/definitions/Money"
        },
        "productReference": {
          "$ref": "#/definitions/Reference"
        },
        "productCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "quantity": {
          "$ref": "#/definitions/Quantity"
        },
        "reason": {
          "description": "Why was the charged  service rendered?",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "requestingOrganization": {
          "$ref": "#/definitions/Reference"
        },
        "service": {
          "description": "Which rendered service is being charged?",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "status": {
          "description": "planned | billable | not-billable | aborted | billed | entered-in-error | unknown",
          "type": "string"
        },
        "subject": {
          "$ref": "#/definitions/Reference"
        },
        "supportingInformation": {
          "description": "Further information supporting this charge",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "ChargeItemDefinitionApplicabilityComponent": {
      "description": "Whether or not the billing code is applicable",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "description": {
          "description": "Natural language description of the condition",
          "type": "string"
        },
        "expression": {
          "description": "Boolean-valued expression",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "language": {
          "description": "Language of the expression",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "ChargeItemDefinitionPriceComponentComponent": {
      "description": "Components of total line item price",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Money"
        },
        "code": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "factor": {
          "format": "double",
          "description": "Factor used for calculating this component",
          "type": "number"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "type": {
          "description": "base | surcharge | deduction | discount | tax | informational",
          "type": "string"
        }
      }
    },
    "ChargeItemDefinitionPropertyGroupComponent": {
      "description": "Group of properties which are applicable under the same conditions",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "applicability": {
          "description": "Conditions under which the priceComponent is applicable",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChargeItemDefinitionApplicabilityComponent"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "priceComponent": {
          "description": "Components of total line item price",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChargeItemDefinitionPriceComponentComponent"
          }
        }
      }
    },
    "ChargeItemDefinition": {
      "description": "Definition of properties and rules about how the price and the applicability of a ChargeItem can be determined",
      "pattern": "ChargeItemDefinition",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "applicability": {
          "description": "Whether or not the billing code is applicable",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChargeItemDefinitionApplicabilityComponent"
          }
        },
        "approvalDate": {
          "description": "When the charge item definition was approved by publisher",
          "type": "string"
        },
        "code": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "contact": {
          "description": "Contact details for the publisher",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "copyright": {
          "description": "Use and/or publishing restrictions",
          "type": "string"
        },
        "date": {
          "description": "Date last changed",
          "type": "string"
        },
        "derivedFromUri": {
          "description": "Underlying externally-defined charge item definition",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "description": "Natural language description of the charge item definition",
          "type": "string"
        },
        "effectivePeriod": {
          "$ref": "#/definitions/Period"
        },
        "experimental": {
          "description": "For testing purposes, not real usage",
          "type": "boolean"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Additional identifier for the charge item definition",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "instance": {
          "description": "Instances this definition applies to",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "jurisdiction": {
          "description": "Intended jurisdiction for charge item definition (if applicable)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "lastReviewDate": {
          "description": "When the charge item definition was last reviewed",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "partOf": {
          "description": "A larger definition of which this particular definition is a component or step",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "propertyGroup": {
          "description": "Group of properties which are applicable under the same conditions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChargeItemDefinitionPropertyGroupComponent"
          }
        },
        "publisher": {
          "description": "Name of the publisher (organization or individual)",
          "type": "string"
        },
        "replaces": {
          "description": "Completed or terminated request(s) whose function is taken by this new request",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "description": "draft | active | retired | unknown",
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "title": {
          "description": "Name for this charge item definition (human friendly)",
          "type": "string"
        },
        "url": {
          "description": "Canonical identifier for this charge item definition, represented as a URI (globally unique)",
          "type": "string"
        },
        "useContext": {
          "description": "The context that the content is intended to support",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UsageContext"
          }
        },
        "version": {
          "description": "Business version of the charge item definition",
          "type": "string"
        }
      }
    },
    "ClaimAccidentComponent": {
      "description": "Details of the event",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "date": {
          "description": "When the incident occurred",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "locationAddress": {
          "$ref": "#/definitions/Address"
        },
        "locationReference": {
          "$ref": "#/definitions/Reference"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "ClaimCareTeamComponent": {
      "description": "Members of the care team",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "provider": {
          "$ref": "#/definitions/Reference"
        },
        "qualification": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "responsible": {
          "description": "Indicator of the lead practitioner",
          "type": "boolean"
        },
        "role": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "sequence": {
          "format": "int32",
          "description": "Order of care team",
          "type": "integer"
        }
      }
    },
    "ClaimDiagnosisComponent": {
      "description": "Pertinent diagnosis information",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "diagnosisCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "diagnosisReference": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "onAdmission": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "packageCode": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "sequence": {
          "format": "int32",
          "description": "Diagnosis instance identifier",
          "type": "integer"
        },
        "type": {
          "description": "Timing or nature of the diagnosis",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        }
      }
    },
    "ClaimInsuranceComponent": {
      "description": "Patient insurance information",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "businessArrangement": {
          "description": "Additional provider contract number",
          "type": "string"
        },
        "claimResponse": {
          "$ref": "#/definitions/Reference"
        },
        "coverage": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "focal": {
          "description": "Coverage to be used for adjudication",
          "type": "boolean"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "identifier": {
          "$ref": "#/definitions/Identifier"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "preAuthRef": {
          "description": "Prior authorization reference number",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sequence": {
          "format": "int32",
          "description": "Insurance instance identifier",
          "type": "integer"
        }
      }
    },
    "ClaimSubDetailComponent": {
      "description": "Product or service provided",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "category": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "factor": {
          "format": "double",
          "description": "Price scaling factor",
          "type": "number"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifier": {
          "description": "Service/Product billing modifiers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "net": {
          "$ref": "#/definitions/Money"
        },
        "productOrService": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "programCode": {
          "description": "Program the product or service is provided under",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "quantity": {
          "$ref": "#/definitions/Quantity"
        },
        "revenue": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "sequence": {
          "format": "int32",
          "description": "Item instance identifier",
          "type": "integer"
        },
        "udi": {
          "description": "Unique device identifier",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "unitPrice": {
          "$ref": "#/definitions/Money"
        }
      }
    },
    "ClaimDetailComponent": {
      "description": "Product or service provided",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "category": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "factor": {
          "format": "double",
          "description": "Price scaling factor",
          "type": "number"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifier": {
          "description": "Service/Product billing modifiers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "net": {
          "$ref": "#/definitions/Money"
        },
        "productOrService": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "programCode": {
          "description": "Program the product or service is provided under",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "quantity": {
          "$ref": "#/definitions/Quantity"
        },
        "revenue": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "sequence": {
          "format": "int32",
          "description": "Item instance identifier",
          "type": "integer"
        },
        "subDetail": {
          "description": "Product or service provided",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClaimSubDetailComponent"
          }
        },
        "udi": {
          "description": "Unique device identifier",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "unitPrice": {
          "$ref": "#/definitions/Money"
        }
      }
    },
    "ClaimItemComponent": {
      "description": "Product or service provided",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "bodySite": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "careTeamSequence": {
          "description": "Applicable careTeam members",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "category": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "detail": {
          "description": "Product or service provided",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClaimDetailComponent"
          }
        },
        "diagnosisSequence": {
          "description": "Applicable diagnoses",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "encounter": {
          "description": "Encounters related to this billed item",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "factor": {
          "format": "double",
          "description": "Price scaling factor",
          "type": "number"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "informationSequence": {
          "description": "Applicable exception and supporting information",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "locationCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "locationAddress": {
          "$ref": "#/definitions/Address"
        },
        "locationReference": {
          "$ref": "#/definitions/Reference"
        },
        "modifier": {
          "description": "Product or service billing modifiers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "net": {
          "$ref": "#/definitions/Money"
        },
        "procedureSequence": {
          "description": "Applicable procedures",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "productOrService": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "programCode": {
          "description": "Program the product or service is provided under",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "quantity": {
          "$ref": "#/definitions/Quantity"
        },
        "revenue": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "sequence": {
          "format": "int32",
          "description": "Item instance identifier",
          "type": "integer"
        },
        "servicedDate": {
          "description": "Date or dates of service or product delivery",
          "type": "string"
        },
        "servicedPeriod": {
          "$ref": "#/definitions/Period"
        },
        "subSite": {
          "description": "Anatomical sub-location",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "udi": {
          "description": "Unique device identifier",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "unitPrice": {
          "$ref": "#/definitions/Money"
        }
      }
    },
    "ClaimPayeeComponent": {
      "description": "Recipient of benefits payable",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "party": {
          "$ref": "#/definitions/Reference"
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "ClaimProcedureComponent": {
      "description": "Clinical procedures performed",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "date": {
          "description": "When the procedure was performed",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "procedureCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "procedureReference": {
          "$ref": "#/definitions/Reference"
        },
        "sequence": {
          "format": "int32",
          "description": "Procedure instance identifier",
          "type": "integer"
        },
        "type": {
          "description": "Category of Procedure",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "udi": {
          "description": "Unique device identifier",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        }
      }
    },
    "ClaimRelatedClaimComponent": {
      "description": "Prior or corollary claims",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "claim": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "reference": {
          "$ref": "#/definitions/Identifier"
        },
        "relationship": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "ClaimSupportingInformationComponent": {
      "description": "Supporting information",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "category": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "code": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "reason": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "sequence": {
          "format": "int32",
          "description": "Information instance identifier",
          "type": "integer"
        },
        "timingDate": {
          "description": "When it occurred",
          "type": "string"
        },
        "timingPeriod": {
          "$ref": "#/definitions/Period"
        },
        "valueBoolean": {
          "description": "Data to be provided",
          "type": "boolean"
        },
        "valueString": {
          "description": "Data to be provided",
          "type": "string"
        },
        "valueQuantity": {
          "$ref": "#/definitions/Quantity"
        },
        "valueAttachment": {
          "$ref": "#/definitions/Attachment"
        },
        "valueReference": {
          "$ref": "#/definitions/Reference"
        }
      }
    },
    "Claim": {
      "description": "Claim, Pre-determination or Pre-authorization",
      "pattern": "Claim",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "accident": {
          "$ref": "#/definitions/ClaimAccidentComponent"
        },
        "billablePeriod": {
          "$ref": "#/definitions/Period"
        },
        "careTeam": {
          "description": "Members of the care team",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClaimCareTeamComponent"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "created": {
          "description": "Resource creation date",
          "type": "string"
        },
        "diagnosis": {
          "description": "Pertinent diagnosis information",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClaimDiagnosisComponent"
          }
        },
        "enterer": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "facility": {
          "$ref": "#/definitions/Reference"
        },
        "fundsReserve": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Business Identifier for claim",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "insurance": {
          "description": "Patient insurance information",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClaimInsuranceComponent"
          }
        },
        "insurer": {
          "$ref": "#/definitions/Reference"
        },
        "item": {
          "description": "Product or service provided",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClaimItemComponent"
          }
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "originalPrescription": {
          "$ref": "#/definitions/Reference"
        },
        "patient": {
          "$ref": "#/definitions/Reference"
        },
        "payee": {
          "$ref": "#/definitions/ClaimPayeeComponent"
        },
        "prescription": {
          "$ref": "#/definitions/Reference"
        },
        "priority": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "procedure": {
          "description": "Clinical procedures performed",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClaimProcedureComponent"
          }
        },
        "provider": {
          "$ref": "#/definitions/Reference"
        },
        "referral": {
          "$ref": "#/definitions/Reference"
        },
        "related": {
          "description": "Prior or corollary claims",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClaimRelatedClaimComponent"
          }
        },
        "status": {
          "description": "active | cancelled | draft | entered-in-error",
          "type": "string"
        },
        "subType": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "supportingInfo": {
          "description": "Supporting information",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClaimSupportingInformationComponent"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "total": {
          "$ref": "#/definitions/Money"
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "use": {
          "description": "claim | preauthorization | predetermination",
          "type": "string"
        }
      }
    },
    "ClaimResponseAddedItemSubDetailComponent": {
      "description": "Insurer added line items",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "adjudication": {
          "description": "Added items detail adjudication",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClaimResponseAdjudicationComponent"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "factor": {
          "format": "double",
          "description": "Price scaling factor",
          "type": "number"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifier": {
          "description": "Service/Product billing modifiers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "net": {
          "$ref": "#/definitions/Money"
        },
        "noteNumber": {
          "description": "Applicable note numbers",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "productOrService": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "quantity": {
          "$ref": "#/definitions/Quantity"
        },
        "unitPrice": {
          "$ref": "#/definitions/Money"
        }
      }
    },
    "ClaimResponseAddedItemDetailComponent": {
      "description": "Insurer added line details",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "adjudication": {
          "description": "Added items detail adjudication",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClaimResponseAdjudicationComponent"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "factor": {
          "format": "double",
          "description": "Price scaling factor",
          "type": "number"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifier": {
          "description": "Service/Product billing modifiers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "net": {
          "$ref": "#/definitions/Money"
        },
        "noteNumber": {
          "description": "Applicable note numbers",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "productOrService": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "quantity": {
          "$ref": "#/definitions/Quantity"
        },
        "subDetail": {
          "description": "Insurer added line items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClaimResponseAddedItemSubDetailComponent"
          }
        },
        "unitPrice": {
          "$ref": "#/definitions/Money"
        }
      }
    },
    "ClaimResponseAddedItemComponent": {
      "description": "Insurer added line items",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "adjudication": {
          "description": "Added items adjudication",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClaimResponseAdjudicationComponent"
          }
        },
        "bodySite": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "detail": {
          "description": "Insurer added line details",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClaimResponseAddedItemDetailComponent"
          }
        },
        "detailSequence": {
          "description": "Detail sequence number",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "factor": {
          "format": "double",
          "description": "Price scaling factor",
          "type": "number"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "itemSequence": {
          "description": "Item sequence number",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "locationCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "locationAddress": {
          "$ref": "#/definitions/Address"
        },
        "locationReference": {
          "$ref": "#/definitions/Reference"
        },
        "modifier": {
          "description": "Service/Product billing modifiers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "net": {
          "$ref": "#/definitions/Money"
        },
        "noteNumber": {
          "description": "Applicable note numbers",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "productOrService": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "programCode": {
          "description": "Program the product or service is provided under",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "provider": {
          "description": "Authorized providers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "quantity": {
          "$ref": "#/definitions/Quantity"
        },
        "servicedDate": {
          "description": "Date or dates of service or product delivery",
          "type": "string"
        },
        "servicedPeriod": {
          "$ref": "#/definitions/Period"
        },
        "subdetailSequence": {
          "description": "Subdetail sequence number",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "subSite": {
          "description": "Anatomical sub-location",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "unitPrice": {
          "$ref": "#/definitions/Money"
        }
      }
    },
    "ClaimResponseErrorComponent": {
      "description": "Processing errors",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "code": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "detailSequence": {
          "format": "int32",
          "description": "Detail sequence number",
          "type": "integer"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "itemSequence": {
          "format": "int32",
          "description": "Item sequence number",
          "type": "integer"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "subDetailSequence": {
          "format": "int32",
          "description": "Subdetail sequence number",
          "type": "integer"
        }
      }
    },
    "ClaimResponseInsuranceComponent": {
      "description": "Patient insurance information",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "businessArrangement": {
          "description": "Additional provider contract number",
          "type": "string"
        },
        "claimResponse": {
          "$ref": "#/definitions/Reference"
        },
        "coverage": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "focal": {
          "description": "Coverage to be used for adjudication",
          "type": "boolean"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "sequence": {
          "format": "int32",
          "description": "Insurance instance identifier",
          "type": "integer"
        }
      }
    },
    "ClaimResponseAdjudicationComponent": {
      "description": "Adjudication details",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Money"
        },
        "category": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "reason": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "value": {
          "format": "double",
          "description": "Non-monetary value",
          "type": "number"
        }
      }
    },
    "ClaimResponseSubDetailComponent": {
      "description": "Adjudication for claim sub-details",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "adjudication": {
          "description": "Subdetail level adjudication details",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClaimResponseAdjudicationComponent"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "noteNumber": {
          "description": "Applicable note numbers",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "subDetailSequence": {
          "format": "int32",
          "description": "Claim sub-detail instance identifier",
          "type": "integer"
        }
      }
    },
    "ClaimResponseItemDetailComponent": {
      "description": "Adjudication for claim details",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "adjudication": {
          "description": "Detail level adjudication details",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClaimResponseAdjudicationComponent"
          }
        },
        "detailSequence": {
          "format": "int32",
          "description": "Claim detail instance identifier",
          "type": "integer"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "noteNumber": {
          "description": "Applicable note numbers",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "subDetail": {
          "description": "Adjudication for claim sub-details",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClaimResponseSubDetailComponent"
          }
        }
      }
    },
    "ClaimResponseItemComponent": {
      "description": "Adjudication for claim line items",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "adjudication": {
          "description": "Adjudication details",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClaimResponseAdjudicationComponent"
          }
        },
        "detail": {
          "description": "Adjudication for claim details",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClaimResponseItemDetailComponent"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "itemSequence": {
          "format": "int32",
          "description": "Claim item instance identifier",
          "type": "integer"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "noteNumber": {
          "description": "Applicable note numbers",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        }
      }
    },
    "ClaimResponsePaymentComponent": {
      "description": "Payment Details",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "adjustment": {
          "$ref": "#/definitions/Money"
        },
        "adjustmentReason": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "amount": {
          "$ref": "#/definitions/Money"
        },
        "date": {
          "description": "Expected date of payment",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "identifier": {
          "$ref": "#/definitions/Identifier"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "ClaimResponseNoteComponent": {
      "description": "Note concerning adjudication",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "language": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "number": {
          "format": "int32",
          "description": "Note instance identifier",
          "type": "integer"
        },
        "text": {
          "description": "Note explanatory text",
          "type": "string"
        },
        "type": {
          "description": "display | print | printoper",
          "type": "string"
        }
      }
    },
    "ClaimResponseTotalComponent": {
      "description": "Adjudication totals",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Money"
        },
        "category": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "ClaimResponse": {
      "description": "Response to a claim predetermination or preauthorization",
      "pattern": "ClaimResponse",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "addItem": {
          "description": "Insurer added line items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClaimResponseAddedItemComponent"
          }
        },
        "adjudication": {
          "description": "Header-level adjudication",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClaimResponseAdjudicationComponent"
          }
        },
        "communicationRequest": {
          "description": "Request for additional information",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "created": {
          "description": "Response creation date",
          "type": "string"
        },
        "disposition": {
          "description": "Disposition Message",
          "type": "string"
        },
        "error": {
          "description": "Processing errors",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClaimResponseErrorComponent"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "form": {
          "$ref": "#/definitions/Attachment"
        },
        "formCode": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "fundsReserve": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Business Identifier for a claim response",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "insurance": {
          "description": "Patient insurance information",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClaimResponseInsuranceComponent"
          }
        },
        "insurer": {
          "$ref": "#/definitions/Reference"
        },
        "item": {
          "description": "Adjudication for claim line items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClaimResponseItemComponent"
          }
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "outcome": {
          "description": "queued | complete | error | partial",
          "type": "string"
        },
        "patient": {
          "$ref": "#/definitions/Reference"
        },
        "payeeType": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "payment": {
          "$ref": "#/definitions/ClaimResponsePaymentComponent"
        },
        "preAuthPeriod": {
          "$ref": "#/definitions/Period"
        },
        "preAuthRef": {
          "description": "Preauthorization reference",
          "type": "string"
        },
        "processNote": {
          "description": "Note concerning adjudication",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClaimResponseNoteComponent"
          }
        },
        "request": {
          "$ref": "#/definitions/Reference"
        },
        "requestor": {
          "$ref": "#/definitions/Reference"
        },
        "status": {
          "description": "active | cancelled | draft | entered-in-error",
          "type": "string"
        },
        "subType": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "total": {
          "description": "Adjudication totals",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClaimResponseTotalComponent"
          }
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "use": {
          "description": "claim | preauthorization | predetermination",
          "type": "string"
        }
      }
    },
    "ClinicalImpressionFindingComponent": {
      "description": "Possible or likely findings and diagnoses",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "basis": {
          "description": "Which investigations support finding",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "itemCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "itemReference": {
          "$ref": "#/definitions/Reference"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "ClinicalImpressionInvestigationComponent": {
      "description": "One or more sets of investigations (signs, symptoms, etc.)",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "code": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "item": {
          "description": "Record of a specific investigation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "ClinicalImpression": {
      "description": "A clinical assessment performed when planning treatments and management strategies for a patient",
      "pattern": "ClinicalImpression",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "assessor": {
          "$ref": "#/definitions/Reference"
        },
        "code": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "date": {
          "description": "When the assessment was documented",
          "type": "string"
        },
        "description": {
          "description": "Why/how the assessment was performed",
          "type": "string"
        },
        "effectiveDateTime": {
          "description": "Time of assessment",
          "type": "string"
        },
        "effectivePeriod": {
          "$ref": "#/definitions/Period"
        },
        "encounter": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "finding": {
          "description": "Possible or likely findings and diagnoses",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClinicalImpressionFindingComponent"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Business identifier",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "investigation": {
          "description": "One or more sets of investigations (signs, symptoms, etc.)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClinicalImpressionInvestigationComponent"
          }
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "note": {
          "description": "Comments made about the ClinicalImpression",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "previous": {
          "$ref": "#/definitions/Reference"
        },
        "problem": {
          "description": "Relevant impressions of patient state",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "prognosisCodeableConcept": {
          "description": "Estimate of likely outcome",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "prognosisReference": {
          "description": "RiskAssessment expressing likely outcome",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "protocol": {
          "description": "Clinical Protocol followed",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "description": "in-progress | completed | entered-in-error",
          "type": "string"
        },
        "statusReason": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "subject": {
          "$ref": "#/definitions/Reference"
        },
        "summary": {
          "description": "Summary of the assessment",
          "type": "string"
        },
        "supportingInfo": {
          "description": "Information supporting the clinical impression",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "CodeSystemDesignationComponent": {
      "description": "Additional representations for the concept",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "language": {
          "description": "Human language of the designation",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "use": {
          "$ref": "#/definitions/Coding"
        },
        "value": {
          "description": "The text value for this designation",
          "type": "string"
        }
      }
    },
    "CodeSystemConceptPropertyComponent": {
      "description": "Property value for the concept",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "code": {
          "description": "Reference to CodeSystem.property.code",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "valueCode": {
          "description": "Value of the property for this concept",
          "type": "string"
        },
        "valueCoding": {
          "$ref": "#/definitions/Coding"
        },
        "valueString": {
          "description": "Value of the property for this concept",
          "type": "string"
        },
        "valueInteger": {
          "format": "int32",
          "description": "Value of the property for this concept",
          "type": "integer"
        },
        "valueBoolean": {
          "description": "Value of the property for this concept",
          "type": "boolean"
        },
        "valueDateTime": {
          "description": "Value of the property for this concept",
          "type": "string"
        },
        "valueDecimal": {
          "format": "double",
          "description": "Value of the property for this concept",
          "type": "number"
        }
      }
    },
    "CodeSystemConceptDefinitionComponent": {
      "description": "Concepts in the code system",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "code": {
          "description": "Code that identifies concept",
          "type": "string"
        },
        "concept": {
          "description": "Child Concepts (is-a/contains/categorizes)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeSystemConceptDefinitionComponent"
          }
        },
        "definition": {
          "description": "Formal definition",
          "type": "string"
        },
        "designation": {
          "description": "Additional representations for the concept",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeSystemDesignationComponent"
          }
        },
        "display": {
          "description": "Text to display to the user",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "property": {
          "description": "Property value for the concept",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeSystemConceptPropertyComponent"
          }
        }
      }
    },
    "CodeSystemFilterComponent": {
      "description": "Filter that can be used in a value set",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "code": {
          "description": "Code that identifies the filter",
          "type": "string"
        },
        "description": {
          "description": "How or why the filter is used",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "operator": {
          "description": "= | is-a | descendent-of | is-not-a | regex | in | not-in | generalizes | exists",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "value": {
          "description": "What to use for the value",
          "type": "string"
        }
      }
    },
    "CodeSystemPropertyComponent": {
      "description": "Additional information supplied about each concept",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "code": {
          "description": "Identifies the property on the concepts, and when referred to in operations",
          "type": "string"
        },
        "description": {
          "description": "Why the property is defined, and/or what it conveys",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "type": {
          "description": "code | Coding | string | integer | boolean | dateTime | decimal",
          "type": "string"
        },
        "uri": {
          "description": "Formal identifier for the property",
          "type": "string"
        }
      }
    },
    "CodeSystem": {
      "description": "Declares the existence of and describes a code system or code system supplement",
      "pattern": "CodeSystem",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "caseSensitive": {
          "description": "If code comparison is case sensitive",
          "type": "boolean"
        },
        "compositional": {
          "description": "If code system defines a compositional grammar",
          "type": "boolean"
        },
        "concept": {
          "description": "Concepts in the code system",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeSystemConceptDefinitionComponent"
          }
        },
        "contact": {
          "description": "Contact details for the publisher",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "content": {
          "description": "not-present | example | fragment | complete | supplement",
          "type": "string"
        },
        "copyright": {
          "description": "Use and/or publishing restrictions",
          "type": "string"
        },
        "count": {
          "format": "int32",
          "description": "Total concepts in the code system",
          "type": "integer"
        },
        "date": {
          "description": "Date last changed",
          "type": "string"
        },
        "description": {
          "description": "Natural language description of the code system",
          "type": "string"
        },
        "experimental": {
          "description": "For testing purposes, not real usage",
          "type": "boolean"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "filter": {
          "description": "Filter that can be used in a value set",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeSystemFilterComponent"
          }
        },
        "hierarchyMeaning": {
          "description": "grouped-by | is-a | part-of | classified-with",
          "type": "string"
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Additional identifier for the code system (business identifier)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "jurisdiction": {
          "description": "Intended jurisdiction for code system (if applicable)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Name for this code system (computer friendly)",
          "type": "string"
        },
        "property": {
          "description": "Additional information supplied about each concept",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeSystemPropertyComponent"
          }
        },
        "publisher": {
          "description": "Name of the publisher (organization or individual)",
          "type": "string"
        },
        "purpose": {
          "description": "Why this code system is defined",
          "type": "string"
        },
        "status": {
          "description": "draft | active | retired | unknown",
          "type": "string"
        },
        "supplements": {
          "description": "Canonical URL of Code System this adds designations and properties to",
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "title": {
          "description": "Name for this code system (human friendly)",
          "type": "string"
        },
        "url": {
          "description": "Canonical identifier for this code system, represented as a URI (globally unique) (Coding.system)",
          "type": "string"
        },
        "useContext": {
          "description": "The context that the content is intended to support",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UsageContext"
          }
        },
        "valueSet": {
          "description": "Canonical reference to the value set with entire code system",
          "type": "string"
        },
        "version": {
          "description": "Business version of the code system (Coding.version)",
          "type": "string"
        },
        "versionNeeded": {
          "description": "If definitions are not stable",
          "type": "boolean"
        }
      }
    },
    "CommunicationPayloadComponent": {
      "description": "Message payload",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "contentString": {
          "description": "Message part content",
          "type": "string"
        },
        "contentAttachment": {
          "$ref": "#/definitions/Attachment"
        },
        "contentReference": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "Communication": {
      "description": "A record of information transmitted from a sender to a receiver",
      "pattern": "Communication",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "about": {
          "description": "Resources that pertain to this communication",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "basedOn": {
          "description": "Request fulfilled by this communication",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "category": {
          "description": "Message category",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "encounter": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Unique identifier",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "inResponseTo": {
          "description": "Reply to",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "instantiatesCanonical": {
          "description": "Instantiates FHIR protocol or definition",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "instantiatesUri": {
          "description": "Instantiates external protocol or definition",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "medium": {
          "description": "A channel of communication",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "note": {
          "description": "Comments made about the communication",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "partOf": {
          "description": "Part of this action",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "payload": {
          "description": "Message payload",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommunicationPayloadComponent"
          }
        },
        "priority": {
          "description": "routine | urgent | asap | stat",
          "type": "string"
        },
        "reasonCode": {
          "description": "Indication for message",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "reasonReference": {
          "description": "Why was communication done?",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "received": {
          "description": "When received",
          "type": "string"
        },
        "recipient": {
          "description": "Message recipient",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "sender": {
          "$ref": "#/definitions/Reference"
        },
        "sent": {
          "description": "When sent",
          "type": "string"
        },
        "status": {
          "description": "preparation | in-progress | not-done | on-hold | stopped | completed | entered-in-error | unknown",
          "type": "string"
        },
        "statusReason": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "subject": {
          "$ref": "#/definitions/Reference"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "topic": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "CommunicationRequestPayloadComponent": {
      "description": "Message payload",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "contentString": {
          "description": "Message part content",
          "type": "string"
        },
        "contentAttachment": {
          "$ref": "#/definitions/Attachment"
        },
        "contentReference": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "CommunicationRequest": {
      "description": "A request for information to be sent to a receiver",
      "pattern": "CommunicationRequest",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "about": {
          "description": "Resources that pertain to this communication request",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "authoredOn": {
          "description": "When request transitioned to being actionable",
          "type": "string"
        },
        "basedOn": {
          "description": "Fulfills plan or proposal",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "category": {
          "description": "Message category",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "doNotPerform": {
          "description": "True if request is prohibiting action",
          "type": "boolean"
        },
        "encounter": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "groupIdentifier": {
          "$ref": "#/definitions/Identifier"
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Unique identifier",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "medium": {
          "description": "A channel of communication",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "note": {
          "description": "Comments made about communication request",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "occurrenceDateTime": {
          "description": "When scheduled",
          "type": "string"
        },
        "occurrencePeriod": {
          "$ref": "#/definitions/Period"
        },
        "payload": {
          "description": "Message payload",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommunicationRequestPayloadComponent"
          }
        },
        "priority": {
          "description": "routine | urgent | asap | stat",
          "type": "string"
        },
        "reasonCode": {
          "description": "Why is communication needed?",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "reasonReference": {
          "description": "Why is communication needed?",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "recipient": {
          "description": "Message recipient",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "replaces": {
          "description": "Request(s) replaced by this request",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "requester": {
          "$ref": "#/definitions/Reference"
        },
        "sender": {
          "$ref": "#/definitions/Reference"
        },
        "status": {
          "description": "draft | active | on-hold | revoked | completed | entered-in-error | unknown",
          "type": "string"
        },
        "statusReason": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "subject": {
          "$ref": "#/definitions/Reference"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "CompartmentDefinitionResourceComponent": {
      "description": "How a resource is related to the compartment",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "code": {
          "description": "Name of resource type",
          "type": "string"
        },
        "documentation": {
          "description": "Additional documentation about the resource and compartment",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "param": {
          "description": "Search Parameter Name, or chained parameters",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CompartmentDefinition": {
      "description": "Compartment Definition for a resource",
      "pattern": "CompartmentDefinition",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "code": {
          "description": "Patient | Encounter | RelatedPerson | Practitioner | Device",
          "type": "string"
        },
        "contact": {
          "description": "Contact details for the publisher",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "date": {
          "description": "Date last changed",
          "type": "string"
        },
        "description": {
          "description": "Natural language description of the compartment definition",
          "type": "string"
        },
        "experimental": {
          "description": "For testing purposes, not real usage",
          "type": "boolean"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Name for this compartment definition (computer friendly)",
          "type": "string"
        },
        "publisher": {
          "description": "Name of the publisher (organization or individual)",
          "type": "string"
        },
        "purpose": {
          "description": "Why this compartment definition is defined",
          "type": "string"
        },
        "resource": {
          "description": "How a resource is related to the compartment",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CompartmentDefinitionResourceComponent"
          }
        },
        "search": {
          "description": "Whether the search syntax is supported",
          "type": "boolean"
        },
        "status": {
          "description": "draft | active | retired | unknown",
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "url": {
          "description": "Canonical identifier for this compartment definition, represented as a URI (globally unique)",
          "type": "string"
        },
        "useContext": {
          "description": "The context that the content is intended to support",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UsageContext"
          }
        },
        "version": {
          "description": "Business version of the compartment definition",
          "type": "string"
        }
      }
    },
    "CompositionAttesterComponent": {
      "description": "Attests to accuracy of composition",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "mode": {
          "description": "personal | professional | legal | official",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "party": {
          "$ref": "#/definitions/Reference"
        },
        "time": {
          "description": "When the composition was attested",
          "type": "string"
        }
      }
    },
    "CompositionEventComponent": {
      "description": "The clinical service(s) being documented",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "code": {
          "description": "Code(s) that apply to the event being documented",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "detail": {
          "description": "The event(s) being documented",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "period": {
          "$ref": "#/definitions/Period"
        }
      }
    },
    "CompositionRelatesToComponent": {
      "description": "Relationships to other compositions/documents",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "code": {
          "description": "replaces | transforms | signs | appends",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "targetIdentifier": {
          "$ref": "#/definitions/Identifier"
        },
        "targetReference": {
          "$ref": "#/definitions/Reference"
        }
      }
    },
    "CompositionSectionComponent": {
      "description": "Composition is broken into sections",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "author": {
          "description": "Who and/or what authored the section",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "code": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "emptyReason": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "entry": {
          "description": "A reference to data that supports this section",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "focus": {
          "$ref": "#/definitions/Reference"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "mode": {
          "description": "working | snapshot | changes",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "orderedBy": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "section": {
          "description": "Nested Section",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CompositionSectionComponent"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "title": {
          "description": "Label for section (e.g. for ToC)",
          "type": "string"
        }
      }
    },
    "Composition": {
      "description": "A set of resources composed into a single coherent clinical statement with clinical attestation",
      "pattern": "Composition",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "attester": {
          "description": "Attests to accuracy of composition",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CompositionAttesterComponent"
          }
        },
        "author": {
          "description": "Who and/or what authored the composition",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "category": {
          "description": "Categorization of Composition",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "confidentiality": {
          "description": "As defined by affinity domain",
          "type": "string"
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "custodian": {
          "$ref": "#/definitions/Reference"
        },
        "date": {
          "description": "Composition editing time",
          "type": "string"
        },
        "encounter": {
          "$ref": "#/definitions/Reference"
        },
        "event": {
          "description": "The clinical service(s) being documented",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CompositionEventComponent"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "$ref": "#/definitions/Identifier"
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "relatesTo": {
          "description": "Relationships to other compositions/documents",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CompositionRelatesToComponent"
          }
        },
        "section": {
          "description": "Composition is broken into sections",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CompositionSectionComponent"
          }
        },
        "status": {
          "description": "preliminary | final | amended | entered-in-error",
          "type": "string"
        },
        "subject": {
          "$ref": "#/definitions/Reference"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "title": {
          "description": "Human Readable name/title",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "ConceptMapOtherElementComponent": {
      "description": "Other elements required for this mapping (from context)",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "display": {
          "description": "Display for the code (if value is a code)",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "property": {
          "description": "Reference to property mapping depends on",
          "type": "string"
        },
        "system": {
          "description": "Code System (if necessary)",
          "type": "string"
        },
        "value": {
          "description": "Value of the referenced element",
          "type": "string"
        }
      }
    },
    "ConceptMapTargetElementComponent": {
      "description": "Concept in target system for element",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "code": {
          "description": "Code that identifies the target element",
          "type": "string"
        },
        "comment": {
          "description": "Description of status/issues in mapping",
          "type": "string"
        },
        "dependsOn": {
          "description": "Other elements required for this mapping (from context)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConceptMapOtherElementComponent"
          }
        },
        "display": {
          "description": "Display for the code",
          "type": "string"
        },
        "equivalence": {
          "description": "relatedto | equivalent | equal | wider | subsumes | narrower | specializes | inexact | unmatched | disjoint",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "product": {
          "description": "Other concepts that this mapping also produces",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConceptMapOtherElementComponent"
          }
        }
      }
    },
    "ConceptMapSourceElementComponent": {
      "description": "Mappings for a concept from the source set",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "code": {
          "description": "Identifies element being mapped",
          "type": "string"
        },
        "display": {
          "description": "Display for the code",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "target": {
          "description": "Concept in target system for element",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConceptMapTargetElementComponent"
          }
        }
      }
    },
    "ConceptMapUnmappedComponent": {
      "description": "What to do when there is no mapping for the source concept",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "code": {
          "description": "Fixed code when mode = fixed",
          "type": "string"
        },
        "display": {
          "description": "Display for the code",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "mode": {
          "description": "provided | fixed | other-map",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "url": {
          "description": "canonical reference to an additional ConceptMap to use for mapping if the source concept is unmapped",
          "type": "string"
        }
      }
    },
    "ConceptMapGroupComponent": {
      "description": "Same source and target systems",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "element": {
          "description": "Mappings for a concept from the source set",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConceptMapSourceElementComponent"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "source": {
          "description": "Source system where concepts to be mapped are defined",
          "type": "string"
        },
        "sourceVersion": {
          "description": "Specific version of the  code system",
          "type": "string"
        },
        "target": {
          "description": "Target system that the concepts are to be mapped to",
          "type": "string"
        },
        "targetVersion": {
          "description": "Specific version of the  code system",
          "type": "string"
        },
        "unmapped": {
          "$ref": "#/definitions/ConceptMapUnmappedComponent"
        }
      }
    },
    "ConceptMap": {
      "description": "A map from one set of concepts to one or more other concepts",
      "pattern": "ConceptMap",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "contact": {
          "description": "Contact details for the publisher",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "copyright": {
          "description": "Use and/or publishing restrictions",
          "type": "string"
        },
        "date": {
          "description": "Date last changed",
          "type": "string"
        },
        "description": {
          "description": "Natural language description of the concept map",
          "type": "string"
        },
        "experimental": {
          "description": "For testing purposes, not real usage",
          "type": "boolean"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "group": {
          "description": "Same source and target systems",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConceptMapGroupComponent"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "$ref": "#/definitions/Identifier"
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "jurisdiction": {
          "description": "Intended jurisdiction for concept map (if applicable)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Name for this concept map (computer friendly)",
          "type": "string"
        },
        "publisher": {
          "description": "Name of the publisher (organization or individual)",
          "type": "string"
        },
        "purpose": {
          "description": "Why this concept map is defined",
          "type": "string"
        },
        "sourceUri": {
          "description": "The source value set that contains the concepts that are being mapped",
          "type": "string"
        },
        "sourceCanonical": {
          "description": "The source value set that contains the concepts that are being mapped",
          "type": "string"
        },
        "status": {
          "description": "draft | active | retired | unknown",
          "type": "string"
        },
        "targetUri": {
          "description": "The target value set which provides context for the mappings",
          "type": "string"
        },
        "targetCanonical": {
          "description": "The target value set which provides context for the mappings",
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "title": {
          "description": "Name for this concept map (human friendly)",
          "type": "string"
        },
        "url": {
          "description": "Canonical identifier for this concept map, represented as a URI (globally unique)",
          "type": "string"
        },
        "useContext": {
          "description": "The context that the content is intended to support",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UsageContext"
          }
        },
        "version": {
          "description": "Business version of the concept map",
          "type": "string"
        }
      }
    },
    "ConditionEvidenceComponent": {
      "description": "Supporting evidence",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "code": {
          "description": "Manifestation/symptom",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "detail": {
          "description": "Supporting information found elsewhere",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "ConditionStageComponent": {
      "description": "Stage/grade, usually assessed formally",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "assessment": {
          "description": "Formal record of assessment",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "summary": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "Condition": {
      "description": "Detailed information about conditions, problems or diagnoses",
      "pattern": "Condition",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "abatementDateTime": {
          "description": "When in resolution/remission",
          "type": "string"
        },
        "abatementAge": {
          "$ref": "#/definitions/Age"
        },
        "abatementPeriod": {
          "$ref": "#/definitions/Period"
        },
        "abatementRange": {
          "$ref": "#/definitions/Range"
        },
        "abatementString": {
          "description": "When in resolution/remission",
          "type": "string"
        },
        "asserter": {
          "$ref": "#/definitions/Reference"
        },
        "bodySite": {
          "description": "Anatomical location, if relevant",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "category": {
          "description": "problem-list-item | encounter-diagnosis",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "clinicalStatus": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "code": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "encounter": {
          "$ref": "#/definitions/Reference"
        },
        "evidence": {
          "description": "Supporting evidence",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConditionEvidenceComponent"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "External Ids for this condition",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "note": {
          "description": "Additional information about the Condition",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "onsetDateTime": {
          "description": "Estimated or actual date,  date-time, or age",
          "type": "string"
        },
        "onsetAge": {
          "$ref": "#/definitions/Age"
        },
        "onsetPeriod": {
          "$ref": "#/definitions/Period"
        },
        "onsetRange": {
          "$ref": "#/definitions/Range"
        },
        "onsetString": {
          "description": "Estimated or actual date,  date-time, or age",
          "type": "string"
        },
        "recordedDate": {
          "description": "Date record was first recorded",
          "type": "string"
        },
        "recorder": {
          "$ref": "#/definitions/Reference"
        },
        "severity": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "stage": {
          "description": "Stage/grade, usually assessed formally",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConditionStageComponent"
          }
        },
        "subject": {
          "$ref": "#/definitions/Reference"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "verificationStatus": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "ConsentPolicyComponent": {
      "description": "Policies covered by this consent",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "authority": {
          "description": "Enforcement source for policy",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "uri": {
          "description": "Specific policy covered by this consent",
          "type": "string"
        }
      }
    },
    "ConsentprovisionActorComponent": {
      "description": "Who|what controlled by this rule (or group, by role)",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "reference": {
          "$ref": "#/definitions/Reference"
        },
        "role": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "ConsentprovisionDataComponent": {
      "description": "Data controlled by this rule",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "meaning": {
          "description": "instance | related | dependents | authoredby",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "reference": {
          "$ref": "#/definitions/Reference"
        }
      }
    },
    "ConsentprovisionComponent": {
      "description": "Constraints to the base Consent.policyRule",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "action": {
          "description": "Actions controlled by this rule",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "actor": {
          "description": "Who|what controlled by this rule (or group, by role)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConsentprovisionActorComponent"
          }
        },
        "class": {
          "description": "e.g. Resource Type, Profile, CDA, etc.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Coding"
          }
        },
        "code": {
          "description": "e.g. LOINC or SNOMED CT code, etc. in the content",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "data": {
          "description": "Data controlled by this rule",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConsentprovisionDataComponent"
          }
        },
        "dataPeriod": {
          "$ref": "#/definitions/Period"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "period": {
          "$ref": "#/definitions/Period"
        },
        "provision": {
          "description": "Nested Exception Rules",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConsentprovisionComponent"
          }
        },
        "purpose": {
          "description": "Context of activities covered by this rule",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Coding"
          }
        },
        "securityLabel": {
          "description": "Security Labels that define affected resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Coding"
          }
        },
        "type": {
          "description": "deny | permit",
          "type": "string"
        }
      }
    },
    "ConsentVerificationComponent": {
      "description": "Consent Verified by patient or family",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "verificationDate": {
          "description": "When consent verified",
          "type": "string"
        },
        "verified": {
          "description": "Has been verified",
          "type": "boolean"
        },
        "verifiedWith": {
          "$ref": "#/definitions/Reference"
        }
      }
    },
    "Consent": {
      "description": "A healthcare consumer's  choices to permit or deny recipients or roles to perform actions for specific purposes and periods of time",
      "pattern": "Consent",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "category": {
          "description": "Classification of the consent statement - for indexing/retrieval",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "dateTime": {
          "description": "When this Consent was created or indexed",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Identifier for this record (external references)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "organization": {
          "description": "Custodian of the consent",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "patient": {
          "$ref": "#/definitions/Reference"
        },
        "performer": {
          "description": "Who is agreeing to the policy and rules",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "policy": {
          "description": "Policies covered by this consent",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConsentPolicyComponent"
          }
        },
        "policyRule": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "provision": {
          "$ref": "#/definitions/ConsentprovisionComponent"
        },
        "scope": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "sourceAttachment": {
          "$ref": "#/definitions/Attachment"
        },
        "sourceReference": {
          "$ref": "#/definitions/Reference"
        },
        "status": {
          "description": "draft | proposed | active | rejected | inactive | entered-in-error",
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "verification": {
          "description": "Consent Verified by patient or family",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConsentVerificationComponent"
          }
        }
      }
    },
    "ContractContentDefinitionComponent": {
      "description": "Contract precursor content",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "copyright": {
          "description": "Publication Ownership",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "publicationDate": {
          "description": "When published",
          "type": "string"
        },
        "publicationStatus": {
          "description": "amended | appended | cancelled | disputed | entered-in-error | executable | executed | negotiable | offered | policy | rejected | renewed | revoked | resolved | terminated",
          "type": "string"
        },
        "publisher": {
          "$ref": "#/definitions/Reference"
        },
        "subType": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "ContractFriendlyLanguageComponent": {
      "description": "Contract Friendly Language",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "contentAttachment": {
          "$ref": "#/definitions/Attachment"
        },
        "contentReference": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "ContractLegalLanguageComponent": {
      "description": "Contract Legal Language",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "contentAttachment": {
          "$ref": "#/definitions/Attachment"
        },
        "contentReference": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "ContractComputableLanguageComponent": {
      "description": "Computable Contract Language",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "contentAttachment": {
          "$ref": "#/definitions/Attachment"
        },
        "contentReference": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "ContractSignatoryComponent": {
      "description": "Contract Signatory",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "party": {
          "$ref": "#/definitions/Reference"
        },
        "signature": {
          "description": "Contract Documentation Signature",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Signature"
          }
        },
        "type": {
          "$ref": "#/definitions/Coding"
        }
      }
    },
    "ContractActionSubjectComponent": {
      "description": "Entity of the action",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "reference": {
          "description": "Entity of the action",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "role": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "ContractActionComponent": {
      "description": "Entity being ascribed responsibility",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "context": {
          "$ref": "#/definitions/Reference"
        },
        "contextLinkId": {
          "description": "Pointer to specific item",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "doNotPerform": {
          "description": "True if the term prohibits the  action",
          "type": "boolean"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "intent": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "linkId": {
          "description": "Pointer to specific item",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "note": {
          "description": "Comments about the action",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "occurrenceDateTime": {
          "description": "When action happens",
          "type": "string"
        },
        "occurrencePeriod": {
          "$ref": "#/definitions/Period"
        },
        "occurrenceTiming": {
          "$ref": "#/definitions/Timing"
        },
        "performer": {
          "$ref": "#/definitions/Reference"
        },
        "performerLinkId": {
          "description": "Pointer to specific item",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "performerRole": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "performerType": {
          "description": "Kind of service performer",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "reason": {
          "description": "Why action is to be performed",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "reasonCode": {
          "description": "Why is action (not) needed?",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "reasonLinkId": {
          "description": "Pointer to specific item",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "reasonReference": {
          "description": "Why is action (not) needed?",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "requester": {
          "description": "Who asked for action",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "requesterLinkId": {
          "description": "Pointer to specific item",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "securityLabelNumber": {
          "description": "Action restriction numbers",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "status": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "subject": {
          "description": "Entity of the action",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContractActionSubjectComponent"
          }
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "ContractAssetContextComponent": {
      "description": "Circumstance of the asset",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "code": {
          "description": "Codeable asset context",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "reference": {
          "$ref": "#/definitions/Reference"
        },
        "text": {
          "description": "Context description",
          "type": "string"
        }
      }
    },
    "ContractValuedItemComponent": {
      "description": "Contract Valued Item List",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "effectiveTime": {
          "description": "Contract Valued Item Effective Tiem",
          "type": "string"
        },
        "entityCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "entityReference": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "factor": {
          "format": "double",
          "description": "Contract Valued Item Price Scaling Factor",
          "type": "number"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "identifier": {
          "$ref": "#/definitions/Identifier"
        },
        "linkId": {
          "description": "Pointer to specific item",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "net": {
          "$ref": "#/definitions/Money"
        },
        "payment": {
          "description": "Terms of valuation",
          "type": "string"
        },
        "paymentDate": {
          "description": "When payment is due",
          "type": "string"
        },
        "points": {
          "format": "double",
          "description": "Contract Valued Item Difficulty Scaling Factor",
          "type": "number"
        },
        "quantity": {
          "$ref": "#/definitions/Quantity"
        },
        "recipient": {
          "$ref": "#/definitions/Reference"
        },
        "responsible": {
          "$ref": "#/definitions/Reference"
        },
        "securityLabelNumber": {
          "description": "Security Labels that define affected terms",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "unitPrice": {
          "$ref": "#/definitions/Money"
        }
      }
    },
    "ContractContractAssetComponent": {
      "description": "Contract Term Asset List",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "answer": {
          "description": "Response to assets",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContractAnswerComponent"
          }
        },
        "condition": {
          "description": "Quality desctiption of asset",
          "type": "string"
        },
        "context": {
          "description": "Circumstance of the asset",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContractAssetContextComponent"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "linkId": {
          "description": "Pointer to asset text",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "period": {
          "description": "Time period of the asset",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Period"
          }
        },
        "periodType": {
          "description": "Asset availability types",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "relationship": {
          "$ref": "#/definitions/Coding"
        },
        "scope": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "securityLabelNumber": {
          "description": "Asset restriction numbers",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "subtype": {
          "description": "Asset sub-category",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "text": {
          "description": "Asset clause or question text",
          "type": "string"
        },
        "type": {
          "description": "Asset category",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "typeReference": {
          "description": "Associated entities",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "usePeriod": {
          "description": "Time period",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Period"
          }
        },
        "valuedItem": {
          "description": "Contract Valued Item List",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContractValuedItemComponent"
          }
        }
      }
    },
    "ContractAnswerComponent": {
      "description": "Response to offer text",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "valueBoolean": {
          "description": "The actual answer response",
          "type": "boolean"
        },
        "valueDecimal": {
          "format": "double",
          "description": "The actual answer response",
          "type": "number"
        },
        "valueInteger": {
          "format": "int32",
          "description": "The actual answer response",
          "type": "integer"
        },
        "valueDate": {
          "description": "The actual answer response",
          "type": "string"
        },
        "valueDateTime": {
          "description": "The actual answer response",
          "type": "string"
        },
        "valueTime": {
          "description": "The actual answer response",
          "type": "string"
        },
        "valueString": {
          "description": "The actual answer response",
          "type": "string"
        },
        "valueUri": {
          "description": "The actual answer response",
          "type": "string"
        },
        "valueAttachment": {
          "$ref": "#/definitions/Attachment"
        },
        "valueCoding": {
          "$ref": "#/definitions/Coding"
        },
        "valueQuantity": {
          "$ref": "#/definitions/Quantity"
        },
        "valueReference": {
          "$ref": "#/definitions/Reference"
        }
      }
    },
    "ContractContractPartyComponent": {
      "description": "Offer Recipient",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "reference": {
          "description": "Referenced entity",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "role": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "ContractContractOfferComponent": {
      "description": "Context of the Contract term",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "answer": {
          "description": "Response to offer text",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContractAnswerComponent"
          }
        },
        "decision": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "decisionMode": {
          "description": "How decision is conveyed",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "identifier": {
          "description": "Offer business ID",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "linkId": {
          "description": "Pointer to text",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "party": {
          "description": "Offer Recipient",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContractContractPartyComponent"
          }
        },
        "securityLabelNumber": {
          "description": "Offer restriction numbers",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "text": {
          "description": "Human readable offer text",
          "type": "string"
        },
        "topic": {
          "$ref": "#/definitions/Reference"
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "ContractSecurityLabelComponent": {
      "description": "Protection for the Term",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "category": {
          "description": "Applicable Policy",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Coding"
          }
        },
        "classification": {
          "$ref": "#/definitions/Coding"
        },
        "control": {
          "description": "Handling Instructions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Coding"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "number": {
          "description": "Link to Security Labels",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        }
      }
    },
    "ContractTermComponent": {
      "description": "Contract Term List",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "action": {
          "description": "Entity being ascribed responsibility",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContractActionComponent"
          }
        },
        "applies": {
          "$ref": "#/definitions/Period"
        },
        "asset": {
          "description": "Contract Term Asset List",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContractContractAssetComponent"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "group": {
          "description": "Nested Contract Term Group",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContractTermComponent"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "identifier": {
          "$ref": "#/definitions/Identifier"
        },
        "issued": {
          "description": "Contract Term Issue Date Time",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "offer": {
          "$ref": "#/definitions/ContractContractOfferComponent"
        },
        "securityLabel": {
          "description": "Protection for the Term",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContractSecurityLabelComponent"
          }
        },
        "subType": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "text": {
          "description": "Term Statement",
          "type": "string"
        },
        "topicCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "topicReference": {
          "$ref": "#/definitions/Reference"
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "Contract": {
      "description": "Legal Agreement",
      "pattern": "Contract",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "alias": {
          "description": "Acronym or short name",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "applies": {
          "$ref": "#/definitions/Period"
        },
        "author": {
          "$ref": "#/definitions/Reference"
        },
        "authority": {
          "description": "Authority under which this Contract has standing",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "contentDefinition": {
          "$ref": "#/definitions/ContractContentDefinitionComponent"
        },
        "contentDerivative": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "domain": {
          "description": "A sphere of control governed by an authoritative jurisdiction, organization, or person",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "expirationType": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "friendly": {
          "description": "Contract Friendly Language",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContractFriendlyLanguageComponent"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Contract number",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "instantiatesCanonical": {
          "$ref": "#/definitions/Reference"
        },
        "instantiatesUri": {
          "description": "External Contract Definition",
          "type": "string"
        },
        "issued": {
          "description": "When this Contract was issued",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "legal": {
          "description": "Contract Legal Language",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContractLegalLanguageComponent"
          }
        },
        "legallyBindingAttachment": {
          "$ref": "#/definitions/Attachment"
        },
        "legallyBindingReference": {
          "$ref": "#/definitions/Reference"
        },
        "legalState": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Computer friendly designation",
          "type": "string"
        },
        "relevantHistory": {
          "description": "Key event in Contract History",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "rule": {
          "description": "Computable Contract Language",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContractComputableLanguageComponent"
          }
        },
        "scope": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "signer": {
          "description": "Contract Signatory",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContractSignatoryComponent"
          }
        },
        "site": {
          "description": "Specific Location",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "status": {
          "description": "amended | appended | cancelled | disputed | entered-in-error | executable | executed | negotiable | offered | policy | rejected | renewed | revoked | resolved | terminated",
          "type": "string"
        },
        "subject": {
          "description": "Contract Target Entity",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "subtitle": {
          "description": "Subordinate Friendly name",
          "type": "string"
        },
        "subType": {
          "description": "Subtype within the context of type",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "supportingInfo": {
          "description": "Extra Information",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "term": {
          "description": "Contract Term List",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContractTermComponent"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "title": {
          "description": "Human Friendly name",
          "type": "string"
        },
        "topicCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "topicReference": {
          "$ref": "#/definitions/Reference"
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "url": {
          "description": "Basal definition",
          "type": "string"
        },
        "version": {
          "description": "Business edition",
          "type": "string"
        }
      }
    },
    "CoverageClassComponent": {
      "description": "Additional coverage classifications",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Human readable description of the type and value",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "value": {
          "description": "Value associated with the type",
          "type": "string"
        }
      }
    },
    "CoverageExemptionComponent": {
      "description": "Exceptions for patient payments",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "period": {
          "$ref": "#/definitions/Period"
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "CoverageCostToBeneficiaryComponent": {
      "description": "Patient payments for services/products",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "exception": {
          "description": "Exceptions for patient payments",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CoverageExemptionComponent"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueQuantity": {
          "$ref": "#/definitions/Quantity"
        },
        "valueMoney": {
          "$ref": "#/definitions/Money"
        }
      }
    },
    "Coverage": {
      "description": "Insurance or medical plan or a payment agreement",
      "pattern": "Coverage",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "beneficiary": {
          "$ref": "#/definitions/Reference"
        },
        "class": {
          "description": "Additional coverage classifications",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CoverageClassComponent"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "contract": {
          "description": "Contract details",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "costToBeneficiary": {
          "description": "Patient payments for services/products",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CoverageCostToBeneficiaryComponent"
          }
        },
        "dependent": {
          "description": "Dependent number",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Business Identifier for the coverage",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "network": {
          "description": "Insurer network",
          "type": "string"
        },
        "order": {
          "format": "int32",
          "description": "Relative order of the coverage",
          "type": "integer"
        },
        "payor": {
          "description": "Issuer of the policy",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "period": {
          "$ref": "#/definitions/Period"
        },
        "policyHolder": {
          "$ref": "#/definitions/Reference"
        },
        "relationship": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "status": {
          "description": "active | cancelled | draft | entered-in-error",
          "type": "string"
        },
        "subrogation": {
          "description": "Reimbursement to insurer",
          "type": "boolean"
        },
        "subscriber": {
          "$ref": "#/definitions/Reference"
        },
        "subscriberId": {
          "description": "ID assigned to the subscriber",
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "CoverageEligibilityRequestInsuranceComponent": {
      "description": "Patient insurance information",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "businessArrangement": {
          "description": "Additional provider contract number",
          "type": "string"
        },
        "coverage": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "focal": {
          "description": "Applicable coverage",
          "type": "boolean"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "CoverageEligibilityRequestDiagnosisComponent": {
      "description": "Applicable diagnosis",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "diagnosisCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "diagnosisReference": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "CoverageEligibilityRequestDetailsComponent": {
      "description": "Item to be evaluated for eligibiity",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "category": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "detail": {
          "description": "Product or service details",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "diagnosis": {
          "description": "Applicable diagnosis",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CoverageEligibilityRequestDiagnosisComponent"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "facility": {
          "$ref": "#/definitions/Reference"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifier": {
          "description": "Product or service billing modifiers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "productOrService": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "provider": {
          "$ref": "#/definitions/Reference"
        },
        "quantity": {
          "$ref": "#/definitions/Quantity"
        },
        "supportingInfoSequence": {
          "description": "Applicable exception or supporting information",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "unitPrice": {
          "$ref": "#/definitions/Money"
        }
      }
    },
    "CoverageEligibilityRequestSupportingInformationComponent": {
      "description": "Supporting information",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "appliesToAll": {
          "description": "Applies to all items",
          "type": "boolean"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "information": {
          "$ref": "#/definitions/Reference"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "sequence": {
          "format": "int32",
          "description": "Information instance identifier",
          "type": "integer"
        }
      }
    },
    "CoverageEligibilityRequest": {
      "description": "CoverageEligibilityRequest resource",
      "pattern": "CoverageEligibilityRequest",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "created": {
          "description": "Creation date",
          "type": "string"
        },
        "enterer": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "facility": {
          "$ref": "#/definitions/Reference"
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Business Identifier for coverage eligiblity request",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "insurance": {
          "description": "Patient insurance information",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CoverageEligibilityRequestInsuranceComponent"
          }
        },
        "insurer": {
          "$ref": "#/definitions/Reference"
        },
        "item": {
          "description": "Item to be evaluated for eligibiity",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CoverageEligibilityRequestDetailsComponent"
          }
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "patient": {
          "$ref": "#/definitions/Reference"
        },
        "priority": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "provider": {
          "$ref": "#/definitions/Reference"
        },
        "purpose": {
          "description": "auth-requirements | benefits | discovery | validation",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "servicedDate": {
          "description": "Estimated date or dates of service",
          "type": "string"
        },
        "servicedPeriod": {
          "$ref": "#/definitions/Period"
        },
        "status": {
          "description": "active | cancelled | draft | entered-in-error",
          "type": "string"
        },
        "supportingInfo": {
          "description": "Supporting information",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CoverageEligibilityRequestSupportingInformationComponent"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "CoverageEligibilityResponseErrorsComponent": {
      "description": "Processing errors",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "code": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "CoverageEligibilityResponseBenefitComponent": {
      "description": "Benefit Summary",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "allowedUnsignedInt": {
          "format": "int32",
          "description": "Benefits allowed",
          "type": "integer"
        },
        "allowedString": {
          "description": "Benefits allowed",
          "type": "string"
        },
        "allowedMoney": {
          "$ref": "#/definitions/Money"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "usedUnsignedInt": {
          "format": "int32",
          "description": "Benefits used",
          "type": "integer"
        },
        "usedString": {
          "description": "Benefits used",
          "type": "string"
        },
        "usedMoney": {
          "$ref": "#/definitions/Money"
        }
      }
    },
    "CoverageEligibilityResponseItemsComponent": {
      "description": "Benefits and authorization details",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "authorizationRequired": {
          "description": "Authorization required flag",
          "type": "boolean"
        },
        "authorizationSupporting": {
          "description": "Type of required supporting materials",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "authorizationUrl": {
          "description": "Preauthorization requirements endpoint",
          "type": "string"
        },
        "benefit": {
          "description": "Benefit Summary",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CoverageEligibilityResponseBenefitComponent"
          }
        },
        "category": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "description": {
          "description": "Description of the benefit or services covered",
          "type": "string"
        },
        "excluded": {
          "description": "Excluded from the plan",
          "type": "boolean"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifier": {
          "description": "Product or service billing modifiers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Short name for the benefit",
          "type": "string"
        },
        "network": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "productOrService": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "provider": {
          "$ref": "#/definitions/Reference"
        },
        "term": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "unit": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "CoverageEligibilityResponseInsuranceComponent": {
      "description": "Patient insurance information",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "benefitPeriod": {
          "$ref": "#/definitions/Period"
        },
        "coverage": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "inforce": {
          "description": "Coverage inforce indicator",
          "type": "boolean"
        },
        "item": {
          "description": "Benefits and authorization details",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CoverageEligibilityResponseItemsComponent"
          }
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "CoverageEligibilityResponse": {
      "description": "CoverageEligibilityResponse resource",
      "pattern": "CoverageEligibilityResponse",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "created": {
          "description": "Response creation date",
          "type": "string"
        },
        "disposition": {
          "description": "Disposition Message",
          "type": "string"
        },
        "error": {
          "description": "Processing errors",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CoverageEligibilityResponseErrorsComponent"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "form": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Business Identifier for coverage eligiblity request",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "insurance": {
          "description": "Patient insurance information",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CoverageEligibilityResponseInsuranceComponent"
          }
        },
        "insurer": {
          "$ref": "#/definitions/Reference"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "outcome": {
          "description": "queued | complete | error | partial",
          "type": "string"
        },
        "patient": {
          "$ref": "#/definitions/Reference"
        },
        "preAuthRef": {
          "description": "Preauthorization reference",
          "type": "string"
        },
        "purpose": {
          "description": "auth-requirements | benefits | discovery | validation",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "request": {
          "$ref": "#/definitions/Reference"
        },
        "requestor": {
          "$ref": "#/definitions/Reference"
        },
        "servicedDate": {
          "description": "Estimated date or dates of service",
          "type": "string"
        },
        "servicedPeriod": {
          "$ref": "#/definitions/Period"
        },
        "status": {
          "description": "active | cancelled | draft | entered-in-error",
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "DetectedIssueEvidenceComponent": {
      "description": "Supporting evidence",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "code": {
          "description": "Manifestation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "detail": {
          "description": "Supporting information",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "DetectedIssueMitigationComponent": {
      "description": "Step taken to address",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "action": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "author": {
          "$ref": "#/definitions/Reference"
        },
        "date": {
          "description": "Date committed",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "DetectedIssue": {
      "description": "Clinical issue with action",
      "pattern": "DetectedIssue",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "author": {
          "$ref": "#/definitions/Reference"
        },
        "code": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "detail": {
          "description": "Description and context",
          "type": "string"
        },
        "evidence": {
          "description": "Supporting evidence",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DetectedIssueEvidenceComponent"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifiedDateTime": {
          "description": "When identified",
          "type": "string"
        },
        "identifiedPeriod": {
          "$ref": "#/definitions/Period"
        },
        "identifier": {
          "description": "Unique id for the detected issue",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicated": {
          "description": "Problem resource",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "mitigation": {
          "description": "Step taken to address",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DetectedIssueMitigationComponent"
          }
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "patient": {
          "$ref": "#/definitions/Reference"
        },
        "reference": {
          "description": "Authority for issue",
          "type": "string"
        },
        "severity": {
          "description": "high | moderate | low",
          "type": "string"
        },
        "status": {
          "description": "registered | preliminary | final | amended +",
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "DeviceDeviceNameComponent": {
      "description": "The name of the device as given by the manufacturer",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "The name of the device",
          "type": "string"
        },
        "type": {
          "description": "udi-label-name | user-friendly-name | patient-reported-name | manufacturer-name | model-name | other",
          "type": "string"
        }
      }
    },
    "DevicePropertyComponent": {
      "description": "The actual configuration settings of a device as it actually operates, e.g., regulation status, time properties",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueCode": {
          "description": "Property value as a code, e.g., NTP4 (synced to NTP)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "valueQuantity": {
          "description": "Property value as a quantity",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Quantity"
          }
        }
      }
    },
    "DeviceSpecializationComponent": {
      "description": "The capabilities supported on a  device, the standards to which the device conforms for a particular purpose, and used for the communication",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "systemType": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "version": {
          "description": "The version of the standard that is used to operate and communicate",
          "type": "string"
        }
      }
    },
    "DeviceUdiCarrierComponent": {
      "description": "Unique Device Identifier (UDI) Barcode string",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "carrierAIDC": {
          "format": "byte",
          "description": "UDI Machine Readable Barcode String",
          "type": "string"
        },
        "carrierHRF": {
          "description": "UDI Human Readable Barcode String",
          "type": "string"
        },
        "deviceIdentifier": {
          "description": "Mandatory fixed portion of UDI",
          "type": "string"
        },
        "entryType": {
          "description": "barcode | rfid | manual +",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "issuer": {
          "description": "UDI Issuing Organization",
          "type": "string"
        },
        "jurisdiction": {
          "description": "Regional UDI authority",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "DeviceVersionComponent": {
      "description": "The actual design of the device or software version running on the device",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "component": {
          "$ref": "#/definitions/Identifier"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "value": {
          "description": "The version text",
          "type": "string"
        }
      }
    },
    "Device": {
      "description": "Item used in healthcare",
      "pattern": "Device",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "contact": {
          "description": "Details for human/organization for support",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactPoint"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "definition": {
          "$ref": "#/definitions/Reference"
        },
        "deviceName": {
          "description": "The name of the device as given by the manufacturer",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceDeviceNameComponent"
          }
        },
        "distinctIdentifier": {
          "description": "The distinct identification string",
          "type": "string"
        },
        "expirationDate": {
          "description": "Date and time of expiry of this device (if applicable)",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Instance identifier",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/Reference"
        },
        "lotNumber": {
          "description": "Lot number of manufacture",
          "type": "string"
        },
        "manufactureDate": {
          "description": "Date when the device was made",
          "type": "string"
        },
        "manufacturer": {
          "description": "Name of device manufacturer",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modelNumber": {
          "description": "The model number for the device",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "note": {
          "description": "Device notes and comments",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "owner": {
          "$ref": "#/definitions/Reference"
        },
        "parent": {
          "$ref": "#/definitions/Reference"
        },
        "partNumber": {
          "description": "The part number of the device",
          "type": "string"
        },
        "patient": {
          "$ref": "#/definitions/Reference"
        },
        "property": {
          "description": "The actual configuration settings of a device as it actually operates, e.g., regulation status, time properties",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DevicePropertyComponent"
          }
        },
        "safety": {
          "description": "Safety Characteristics of Device",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "serialNumber": {
          "description": "Serial number assigned by the manufacturer",
          "type": "string"
        },
        "specialization": {
          "description": "The capabilities supported on a  device, the standards to which the device conforms for a particular purpose, and used for the communication",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceSpecializationComponent"
          }
        },
        "status": {
          "description": "active | inactive | entered-in-error | unknown",
          "type": "string"
        },
        "statusReason": {
          "description": "online | paused | standby | offline | not-ready | transduc-discon | hw-discon | off",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "udiCarrier": {
          "description": "Unique Device Identifier (UDI) Barcode string",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceUdiCarrierComponent"
          }
        },
        "url": {
          "description": "Network address to contact device",
          "type": "string"
        },
        "version": {
          "description": "The actual design of the device or software version running on the device",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceVersionComponent"
          }
        }
      }
    },
    "DeviceDefinitionCapabilityComponent": {
      "description": "Device capabilities",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "description": {
          "description": "Description of capability",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "DeviceDefinitionDeviceNameComponent": {
      "description": "A name given to the device to identify it",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "The name of the device",
          "type": "string"
        },
        "type": {
          "description": "udi-label-name | user-friendly-name | patient-reported-name | manufacturer-name | model-name | other",
          "type": "string"
        }
      }
    },
    "DeviceDefinitionMaterialComponent": {
      "description": "A substance used to create the material(s) of which the device is made",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "allergenicIndicator": {
          "description": "Whether the substance is a known or suspected allergen",
          "type": "boolean"
        },
        "alternate": {
          "description": "Indicates an alternative material of the device",
          "type": "boolean"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "substance": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "DeviceDefinitionPropertyComponent": {
      "description": "The actual configuration settings of a device as it actually operates, e.g., regulation status, time properties",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueCode": {
          "description": "Property value as a code, e.g., NTP4 (synced to NTP)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "valueQuantity": {
          "description": "Property value as a quantity",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Quantity"
          }
        }
      }
    },
    "DeviceDefinitionSpecializationComponent": {
      "description": "The capabilities supported on a  device, the standards to which the device conforms for a particular purpose, and used for the communication",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "systemType": {
          "description": "The standard that is used to operate and communicate",
          "type": "string"
        },
        "version": {
          "description": "The version of the standard that is used to operate and communicate",
          "type": "string"
        }
      }
    },
    "DeviceDefinitionUdiDeviceIdentifierComponent": {
      "description": "Unique Device Identifier (UDI) Barcode string",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "deviceIdentifier": {
          "description": "The identifier that is to be associated with every Device that references this DeviceDefintiion for the issuer and jurisdication porvided in the DeviceDefinition.udiDeviceIdentifier",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "issuer": {
          "description": "The organization that assigns the identifier algorithm",
          "type": "string"
        },
        "jurisdiction": {
          "description": "The jurisdiction to which the deviceIdentifier applies",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "DeviceDefinition": {
      "description": "An instance of a medical-related component of a medical device",
      "pattern": "DeviceDefinition",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "capability": {
          "description": "Device capabilities",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceDefinitionCapabilityComponent"
          }
        },
        "contact": {
          "description": "Details for human/organization for support",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactPoint"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "deviceName": {
          "description": "A name given to the device to identify it",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceDefinitionDeviceNameComponent"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Instance identifier",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "languageCode": {
          "description": "Language code for the human-readable text strings produced by the device (all supported)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "manufacturerString": {
          "description": "Name of device manufacturer",
          "type": "string"
        },
        "manufacturerReference": {
          "$ref": "#/definitions/Reference"
        },
        "material": {
          "description": "A substance used to create the material(s) of which the device is made",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceDefinitionMaterialComponent"
          }
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modelNumber": {
          "description": "The model number for the device",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "note": {
          "description": "Device notes and comments",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "onlineInformation": {
          "description": "Access to on-line information",
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/Reference"
        },
        "parentDevice": {
          "$ref": "#/definitions/Reference"
        },
        "physicalCharacteristics": {
          "$ref": "#/definitions/ProdCharacteristic"
        },
        "property": {
          "description": "The actual configuration settings of a device as it actually operates, e.g., regulation status, time properties",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceDefinitionPropertyComponent"
          }
        },
        "quantity": {
          "$ref": "#/definitions/Quantity"
        },
        "safety": {
          "description": "Safety characteristics of the device",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "shelfLifeStorage": {
          "description": "Shelf Life and storage information",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductShelfLife"
          }
        },
        "specialization": {
          "description": "The capabilities supported on a  device, the standards to which the device conforms for a particular purpose, and used for the communication",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceDefinitionSpecializationComponent"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "udiDeviceIdentifier": {
          "description": "Unique Device Identifier (UDI) Barcode string",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceDefinitionUdiDeviceIdentifierComponent"
          }
        },
        "url": {
          "description": "Network address to contact device",
          "type": "string"
        },
        "version": {
          "description": "Available versions",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DeviceMetricCalibrationComponent": {
      "description": "Describes the calibrations that have been performed or that are required to be performed",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "state": {
          "description": "not-calibrated | calibration-required | calibrated | unspecified",
          "type": "string"
        },
        "time": {
          "description": "Describes the time last calibration has been performed",
          "type": "string"
        },
        "type": {
          "description": "unspecified | offset | gain | two-point",
          "type": "string"
        }
      }
    },
    "DeviceMetric": {
      "description": "Measurement, calculation or setting capability of a medical device",
      "pattern": "DeviceMetric",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "calibration": {
          "description": "Describes the calibrations that have been performed or that are required to be performed",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceMetricCalibrationComponent"
          }
        },
        "category": {
          "description": "measurement | setting | calculation | unspecified",
          "type": "string"
        },
        "color": {
          "description": "black | red | green | yellow | blue | magenta | cyan | white",
          "type": "string"
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Instance identifier",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "measurementPeriod": {
          "$ref": "#/definitions/Timing"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "operationalStatus": {
          "description": "on | off | standby | entered-in-error",
          "type": "string"
        },
        "parent": {
          "$ref": "#/definitions/Reference"
        },
        "source": {
          "$ref": "#/definitions/Reference"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "unit": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "DeviceRequestParameterComponent": {
      "description": "Device details",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "code": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "valueCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueQuantity": {
          "$ref": "#/definitions/Quantity"
        },
        "valueRange": {
          "$ref": "#/definitions/Range"
        },
        "valueBoolean": {
          "description": "Value of detail",
          "type": "boolean"
        }
      }
    },
    "DeviceRequest": {
      "description": "Medical device request",
      "pattern": "DeviceRequest",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "authoredOn": {
          "description": "When recorded",
          "type": "string"
        },
        "basedOn": {
          "description": "What request fulfills",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "codeReference": {
          "$ref": "#/definitions/Reference"
        },
        "codeCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "encounter": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "groupIdentifier": {
          "$ref": "#/definitions/Identifier"
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "External Request identifier",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "instantiatesCanonical": {
          "description": "Instantiates FHIR protocol or definition",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "instantiatesUri": {
          "description": "Instantiates external protocol or definition",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "insurance": {
          "description": "Associated insurance coverage",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "intent": {
          "description": "proposal | plan | directive | order | original-order | reflex-order | filler-order | instance-order | option",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "note": {
          "description": "Notes or comments",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "occurrenceDateTime": {
          "description": "Desired time or schedule for use",
          "type": "string"
        },
        "occurrencePeriod": {
          "$ref": "#/definitions/Period"
        },
        "occurrenceTiming": {
          "$ref": "#/definitions/Timing"
        },
        "parameter": {
          "description": "Device details",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceRequestParameterComponent"
          }
        },
        "performer": {
          "$ref": "#/definitions/Reference"
        },
        "performerType": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "priority": {
          "description": "routine | urgent | asap | stat",
          "type": "string"
        },
        "priorRequest": {
          "description": "What request replaces",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "reasonCode": {
          "description": "Coded Reason for request",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "reasonReference": {
          "description": "Linked Reason for request",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "relevantHistory": {
          "description": "Request provenance",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "requester": {
          "$ref": "#/definitions/Reference"
        },
        "status": {
          "description": "draft | active | on-hold | revoked | completed | entered-in-error | unknown",
          "type": "string"
        },
        "subject": {
          "$ref": "#/definitions/Reference"
        },
        "supportingInfo": {
          "description": "Additional clinical information",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "DeviceUseStatement": {
      "description": "Record of use of a device",
      "pattern": "DeviceUseStatement",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "basedOn": {
          "description": "Fulfills plan, proposal or order",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "bodySite": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "derivedFrom": {
          "description": "Supporting information",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "device": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "External identifier for this record",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "note": {
          "description": "Addition details (comments, instructions)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "reasonCode": {
          "description": "Why device was used",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "reasonReference": {
          "description": "Why was DeviceUseStatement performed?",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "recordedOn": {
          "description": "When statement was recorded",
          "type": "string"
        },
        "source": {
          "$ref": "#/definitions/Reference"
        },
        "status": {
          "description": "active | completed | entered-in-error +",
          "type": "string"
        },
        "subject": {
          "$ref": "#/definitions/Reference"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "timingTiming": {
          "$ref": "#/definitions/Timing"
        },
        "timingPeriod": {
          "$ref": "#/definitions/Period"
        },
        "timingDateTime": {
          "description": "How often  the device was used",
          "type": "string"
        }
      }
    },
    "DiagnosticReportMediaComponent": {
      "description": "Key images associated with this report",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "comment": {
          "description": "Comment about the image (e.g. explanation)",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "link": {
          "$ref": "#/definitions/Reference"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "DiagnosticReport": {
      "description": "A Diagnostic report - a combination of request information, atomic results, images, interpretation, as well as formatted reports",
      "pattern": "DiagnosticReport",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "basedOn": {
          "description": "What was requested",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "category": {
          "description": "Service category",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "code": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "conclusion": {
          "description": "Clinical conclusion (interpretation) of test results",
          "type": "string"
        },
        "conclusionCode": {
          "description": "Codes for the clinical conclusion of test results",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "effectiveDateTime": {
          "description": "Clinically relevant time/time-period for report",
          "type": "string"
        },
        "effectivePeriod": {
          "$ref": "#/definitions/Period"
        },
        "encounter": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Business identifier for report",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "imagingStudy": {
          "description": "Reference to full details of imaging associated with the diagnostic report",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "issued": {
          "description": "DateTime this version was made",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "media": {
          "description": "Key images associated with this report",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiagnosticReportMediaComponent"
          }
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "performer": {
          "description": "Responsible Diagnostic Service",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "presentedForm": {
          "description": "Entire report as issued",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Attachment"
          }
        },
        "result": {
          "description": "Observations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "resultsInterpreter": {
          "description": "Primary result interpreter",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "specimen": {
          "description": "Specimens this report is based on",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "status": {
          "description": "registered | partial | preliminary | final +",
          "type": "string"
        },
        "subject": {
          "$ref": "#/definitions/Reference"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "DocumentManifestRelatedComponent": {
      "description": "Related things",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "identifier": {
          "$ref": "#/definitions/Identifier"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "ref": {
          "$ref": "#/definitions/Reference"
        }
      }
    },
    "DocumentManifest": {
      "description": "A list that defines a set of documents",
      "pattern": "DocumentManifest",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "author": {
          "description": "Who and/or what authored the DocumentManifest",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "content": {
          "description": "Items in manifest",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "created": {
          "description": "When this document manifest created",
          "type": "string"
        },
        "description": {
          "description": "Human-readable description (title)",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Other identifiers for the manifest",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "masterIdentifier": {
          "$ref": "#/definitions/Identifier"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "recipient": {
          "description": "Intended to get notified about this set of documents",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "related": {
          "description": "Related things",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentManifestRelatedComponent"
          }
        },
        "source": {
          "description": "The source system/application/software",
          "type": "string"
        },
        "status": {
          "description": "current | superseded | entered-in-error",
          "type": "string"
        },
        "subject": {
          "$ref": "#/definitions/Reference"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "DocumentReferenceContentComponent": {
      "description": "Document referenced",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "attachment": {
          "$ref": "#/definitions/Attachment"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "format": {
          "$ref": "#/definitions/Coding"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "DocumentReferenceContextComponent": {
      "description": "Clinical context of document",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "encounter": {
          "description": "Context of the document  content",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "event": {
          "description": "Main clinical acts documented",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "facilityType": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "period": {
          "$ref": "#/definitions/Period"
        },
        "practiceSetting": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "related": {
          "description": "Related identifiers or resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "sourcePatientInfo": {
          "$ref": "#/definitions/Reference"
        }
      }
    },
    "DocumentReferenceRelatesToComponent": {
      "description": "Relationships to other documents",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "code": {
          "description": "replaces | transforms | signs | appends",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "target": {
          "$ref": "#/definitions/Reference"
        }
      }
    },
    "DocumentReference": {
      "description": "A reference to a document",
      "pattern": "DocumentReference",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "authenticator": {
          "$ref": "#/definitions/Reference"
        },
        "author": {
          "description": "Who and/or what authored the document",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "category": {
          "description": "Categorization of document",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "content": {
          "description": "Document referenced",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentReferenceContentComponent"
          }
        },
        "context": {
          "$ref": "#/definitions/DocumentReferenceContextComponent"
        },
        "custodian": {
          "$ref": "#/definitions/Reference"
        },
        "date": {
          "description": "When this document reference was created",
          "type": "string"
        },
        "description": {
          "description": "Human-readable description",
          "type": "string"
        },
        "docStatus": {
          "description": "preliminary | final | amended | entered-in-error",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Other identifiers for the document",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "masterIdentifier": {
          "$ref": "#/definitions/Identifier"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "relatesTo": {
          "description": "Relationships to other documents",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentReferenceRelatesToComponent"
          }
        },
        "securityLabel": {
          "description": "Document security-tags",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "status": {
          "description": "current | superseded | entered-in-error",
          "type": "string"
        },
        "subject": {
          "$ref": "#/definitions/Reference"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "DomainResource": {
      "description": "A resource with narrative, extensions, and contained resources",
      "pattern": "DomainResource",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "EffectEvidenceSynthesisCertaintySubcomponentComponent": {
      "description": "A component that contributes to the overall certainty",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "note": {
          "description": "Used for footnotes or explanatory notes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "rating": {
          "description": "Subcomponent certainty rating",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "EffectEvidenceSynthesisCertaintyComponent": {
      "description": "How certain is the effect",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "certaintySubcomponent": {
          "description": "A component that contributes to the overall certainty",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EffectEvidenceSynthesisCertaintySubcomponentComponent"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "note": {
          "description": "Used for footnotes or explanatory notes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "rating": {
          "description": "Certainty rating",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        }
      }
    },
    "EffectEvidenceSynthesisPrecisionEstimateComponent": {
      "description": "How precise the estimate is",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "from": {
          "format": "double",
          "description": "Lower bound",
          "type": "number"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "level": {
          "format": "double",
          "description": "Level of confidence interval",
          "type": "number"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "to": {
          "format": "double",
          "description": "Upper bound",
          "type": "number"
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "EffectEvidenceSynthesisEffectEstimateComponent": {
      "description": "What was the estimated effect",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "description": {
          "description": "Description of effect estimate",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "precisionEstimate": {
          "description": "How precise the estimate is",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EffectEvidenceSynthesisPrecisionEstimateComponent"
          }
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "unitOfMeasure": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "value": {
          "format": "double",
          "description": "Point estimate",
          "type": "number"
        },
        "variantState": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "EffectEvidenceSynthesisResultsByExposureComponent": {
      "description": "What was the result per exposure?",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "description": {
          "description": "Description of results by exposure",
          "type": "string"
        },
        "exposureState": {
          "description": "exposure | exposure-alternative",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "riskEvidenceSynthesis": {
          "$ref": "#/definitions/Reference"
        },
        "variantState": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "EffectEvidenceSynthesisSampleSizeComponent": {
      "description": "What sample size was involved?",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "description": {
          "description": "Description of sample size",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "numberOfParticipants": {
          "format": "int32",
          "description": "How many participants?",
          "type": "integer"
        },
        "numberOfStudies": {
          "format": "int32",
          "description": "How many studies?",
          "type": "integer"
        }
      }
    },
    "EffectEvidenceSynthesis": {
      "description": "A quantified estimate of effect based on a body of evidence",
      "pattern": "EffectEvidenceSynthesis",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "approvalDate": {
          "description": "When the effect evidence synthesis was approved by publisher",
          "type": "string"
        },
        "author": {
          "description": "Who authored the content",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "certainty": {
          "description": "How certain is the effect",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EffectEvidenceSynthesisCertaintyComponent"
          }
        },
        "contact": {
          "description": "Contact details for the publisher",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "copyright": {
          "description": "Use and/or publishing restrictions",
          "type": "string"
        },
        "date": {
          "description": "Date last changed",
          "type": "string"
        },
        "description": {
          "description": "Natural language description of the effect evidence synthesis",
          "type": "string"
        },
        "editor": {
          "description": "Who edited the content",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "effectEstimate": {
          "description": "What was the estimated effect",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EffectEvidenceSynthesisEffectEstimateComponent"
          }
        },
        "effectivePeriod": {
          "$ref": "#/definitions/Period"
        },
        "endorser": {
          "description": "Who endorsed the content",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "exposure": {
          "$ref": "#/definitions/Reference"
        },
        "exposureAlternative": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Additional identifier for the effect evidence synthesis",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "jurisdiction": {
          "description": "Intended jurisdiction for effect evidence synthesis (if applicable)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "lastReviewDate": {
          "description": "When the effect evidence synthesis was last reviewed",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Name for this effect evidence synthesis (computer friendly)",
          "type": "string"
        },
        "note": {
          "description": "Used for footnotes or explanatory notes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "outcome": {
          "$ref": "#/definitions/Reference"
        },
        "population": {
          "$ref": "#/definitions/Reference"
        },
        "publisher": {
          "description": "Name of the publisher (organization or individual)",
          "type": "string"
        },
        "relatedArtifact": {
          "description": "Additional documentation, citations, etc.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedArtifact"
          }
        },
        "resultsByExposure": {
          "description": "What was the result per exposure?",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EffectEvidenceSynthesisResultsByExposureComponent"
          }
        },
        "reviewer": {
          "description": "Who reviewed the content",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "sampleSize": {
          "$ref": "#/definitions/EffectEvidenceSynthesisSampleSizeComponent"
        },
        "status": {
          "description": "draft | active | retired | unknown",
          "type": "string"
        },
        "studyType": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "synthesisType": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "title": {
          "description": "Name for this effect evidence synthesis (human friendly)",
          "type": "string"
        },
        "topic": {
          "description": "The category of the EffectEvidenceSynthesis, such as Education, Treatment, Assessment, etc.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "url": {
          "description": "Canonical identifier for this effect evidence synthesis, represented as a URI (globally unique)",
          "type": "string"
        },
        "useContext": {
          "description": "The context that the content is intended to support",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UsageContext"
          }
        },
        "version": {
          "description": "Business version of the effect evidence synthesis",
          "type": "string"
        }
      }
    },
    "EncounterClassHistoryComponent": {
      "description": "List of past encounter classes",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "class": {
          "$ref": "#/definitions/Coding"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "period": {
          "$ref": "#/definitions/Period"
        }
      }
    },
    "EncounterDiagnosisComponent": {
      "description": "The list of diagnosis relevant to this encounter",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "condition": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "rank": {
          "format": "int32",
          "description": "Ranking of the diagnosis (for each role type)",
          "type": "integer"
        },
        "use": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "EncounterHospitalizationComponent": {
      "description": "Details about the admission to a healthcare service",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "admitSource": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "destination": {
          "$ref": "#/definitions/Reference"
        },
        "dietPreference": {
          "description": "Diet preferences reported by the patient",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "dischargeDisposition": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "origin": {
          "$ref": "#/definitions/Reference"
        },
        "preAdmissionIdentifier": {
          "$ref": "#/definitions/Identifier"
        },
        "reAdmission": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "specialArrangement": {
          "description": "Wheelchair, translator, stretcher, etc.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "specialCourtesy": {
          "description": "Special courtesies (VIP, board member)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        }
      }
    },
    "EncounterLocationComponent": {
      "description": "List of locations where the patient has been",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/Reference"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "period": {
          "$ref": "#/definitions/Period"
        },
        "physicalType": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "status": {
          "description": "planned | active | reserved | completed",
          "type": "string"
        }
      }
    },
    "EncounterParticipantComponent": {
      "description": "List of participants involved in the encounter",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "individual": {
          "$ref": "#/definitions/Reference"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "period": {
          "$ref": "#/definitions/Period"
        },
        "type": {
          "description": "Role of participant in encounter",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        }
      }
    },
    "EncounterStatusHistoryComponent": {
      "description": "List of past encounter statuses",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "period": {
          "$ref": "#/definitions/Period"
        },
        "status": {
          "description": "planned | arrived | triaged | in-progress | onleave | finished | cancelled +",
          "type": "string"
        }
      }
    },
    "Encounter": {
      "description": "An interaction during which services are provided to the patient",
      "pattern": "Encounter",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "account": {
          "description": "The set of accounts that may be used for billing for this Encounter",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "appointment": {
          "description": "The appointment that scheduled this encounter",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "basedOn": {
          "description": "The ServiceRequest that initiated this encounter",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "class": {
          "$ref": "#/definitions/Coding"
        },
        "classHistory": {
          "description": "List of past encounter classes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EncounterClassHistoryComponent"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "diagnosis": {
          "description": "The list of diagnosis relevant to this encounter",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EncounterDiagnosisComponent"
          }
        },
        "episodeOfCare": {
          "description": "Episode(s) of care that this encounter should be recorded against",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "hospitalization": {
          "$ref": "#/definitions/EncounterHospitalizationComponent"
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Identifier(s) by which this encounter is known",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "length": {
          "$ref": "#/definitions/Duration"
        },
        "location": {
          "description": "List of locations where the patient has been",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EncounterLocationComponent"
          }
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "participant": {
          "description": "List of participants involved in the encounter",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EncounterParticipantComponent"
          }
        },
        "partOf": {
          "$ref": "#/definitions/Reference"
        },
        "period": {
          "$ref": "#/definitions/Period"
        },
        "priority": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "reasonCode": {
          "description": "Coded reason the encounter takes place",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "reasonReference": {
          "description": "Reason the encounter takes place (reference)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "serviceProvider": {
          "$ref": "#/definitions/Reference"
        },
        "serviceType": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "status": {
          "description": "planned | arrived | triaged | in-progress | onleave | finished | cancelled +",
          "type": "string"
        },
        "statusHistory": {
          "description": "List of past encounter statuses",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EncounterStatusHistoryComponent"
          }
        },
        "subject": {
          "$ref": "#/definitions/Reference"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "type": {
          "description": "Specific type of encounter",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        }
      }
    },
    "Endpoint": {
      "description": "The technical details of an endpoint that can be used for electronic services",
      "pattern": "Endpoint",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "address": {
          "description": "The technical base address for connecting to this endpoint",
          "type": "string"
        },
        "connectionType": {
          "$ref": "#/definitions/Coding"
        },
        "contact": {
          "description": "Contact details for source (e.g. troubleshooting)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactPoint"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "header": {
          "description": "Usage depends on the channel type",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Identifies this endpoint across multiple systems",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "managingOrganization": {
          "$ref": "#/definitions/Reference"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "A name that this endpoint can be identified by",
          "type": "string"
        },
        "payloadMimeType": {
          "description": "Mimetype to send. If not specified, the content could be anything (including no payload, if the connectionType defined this)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "payloadType": {
          "description": "The type of content that may be used at this endpoint (e.g. XDS Discharge summaries)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "period": {
          "$ref": "#/definitions/Period"
        },
        "status": {
          "description": "active | suspended | error | off | entered-in-error | test",
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "EnrollmentRequest": {
      "description": "Enroll in coverage",
      "pattern": "EnrollmentRequest",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "candidate": {
          "$ref": "#/definitions/Reference"
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "coverage": {
          "$ref": "#/definitions/Reference"
        },
        "created": {
          "description": "Creation date",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Business Identifier",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "insurer": {
          "$ref": "#/definitions/Reference"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "provider": {
          "$ref": "#/definitions/Reference"
        },
        "status": {
          "description": "active | cancelled | draft | entered-in-error",
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "EnrollmentResponse": {
      "description": "EnrollmentResponse resource",
      "pattern": "EnrollmentResponse",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "created": {
          "description": "Creation date",
          "type": "string"
        },
        "disposition": {
          "description": "Disposition Message",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Business Identifier",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "organization": {
          "$ref": "#/definitions/Reference"
        },
        "outcome": {
          "description": "queued | complete | error | partial",
          "type": "string"
        },
        "request": {
          "$ref": "#/definitions/Reference"
        },
        "requestProvider": {
          "$ref": "#/definitions/Reference"
        },
        "status": {
          "description": "active | cancelled | draft | entered-in-error",
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "EpisodeOfCareDiagnosisComponent": {
      "description": "The list of diagnosis relevant to this episode of care",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "condition": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "rank": {
          "format": "int32",
          "description": "Ranking of the diagnosis (for each role type)",
          "type": "integer"
        },
        "role": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "EpisodeOfCareStatusHistoryComponent": {
      "description": "Past list of status codes (the current status may be included to cover the start date of the status)",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "period": {
          "$ref": "#/definitions/Period"
        },
        "status": {
          "description": "planned | waitlist | active | onhold | finished | cancelled | entered-in-error",
          "type": "string"
        }
      }
    },
    "EpisodeOfCare": {
      "description": "An association of a Patient with an Organization and  Healthcare Provider(s) for a period of time that the Organization assumes some level of responsibility",
      "pattern": "EpisodeOfCare",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "account": {
          "description": "The set of accounts that may be used for billing for this EpisodeOfCare",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "careManager": {
          "$ref": "#/definitions/Reference"
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "diagnosis": {
          "description": "The list of diagnosis relevant to this episode of care",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EpisodeOfCareDiagnosisComponent"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Business Identifier(s) relevant for this EpisodeOfCare",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "managingOrganization": {
          "$ref": "#/definitions/Reference"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "patient": {
          "$ref": "#/definitions/Reference"
        },
        "period": {
          "$ref": "#/definitions/Period"
        },
        "referralRequest": {
          "description": "Originating Referral Request(s)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "status": {
          "description": "planned | waitlist | active | onhold | finished | cancelled | entered-in-error",
          "type": "string"
        },
        "statusHistory": {
          "description": "Past list of status codes (the current status may be included to cover the start date of the status)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EpisodeOfCareStatusHistoryComponent"
          }
        },
        "team": {
          "description": "Other practitioners facilitating this episode of care",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "type": {
          "description": "Type/class  - e.g. specialist referral, disease management",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        }
      }
    },
    "EventDefinition": {
      "description": "A description of when an event can occur",
      "pattern": "EventDefinition",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "approvalDate": {
          "description": "When the event definition was approved by publisher",
          "type": "string"
        },
        "author": {
          "description": "Who authored the content",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "contact": {
          "description": "Contact details for the publisher",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "copyright": {
          "description": "Use and/or publishing restrictions",
          "type": "string"
        },
        "date": {
          "description": "Date last changed",
          "type": "string"
        },
        "description": {
          "description": "Natural language description of the event definition",
          "type": "string"
        },
        "editor": {
          "description": "Who edited the content",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "effectivePeriod": {
          "$ref": "#/definitions/Period"
        },
        "endorser": {
          "description": "Who endorsed the content",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "experimental": {
          "description": "For testing purposes, not real usage",
          "type": "boolean"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Additional identifier for the event definition",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "jurisdiction": {
          "description": "Intended jurisdiction for event definition (if applicable)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "lastReviewDate": {
          "description": "When the event definition was last reviewed",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Name for this event definition (computer friendly)",
          "type": "string"
        },
        "publisher": {
          "description": "Name of the publisher (organization or individual)",
          "type": "string"
        },
        "purpose": {
          "description": "Why this event definition is defined",
          "type": "string"
        },
        "relatedArtifact": {
          "description": "Additional documentation, citations, etc.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedArtifact"
          }
        },
        "reviewer": {
          "description": "Who reviewed the content",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "status": {
          "description": "draft | active | retired | unknown",
          "type": "string"
        },
        "subjectCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "subjectReference": {
          "$ref": "#/definitions/Reference"
        },
        "subtitle": {
          "description": "Subordinate title of the event definition",
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "title": {
          "description": "Name for this event definition (human friendly)",
          "type": "string"
        },
        "topic": {
          "description": "E.g. Education, Treatment, Assessment, etc.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "trigger": {
          "description": "\"when\" the event occurs (multiple = 'or')",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TriggerDefinition"
          }
        },
        "url": {
          "description": "Canonical identifier for this event definition, represented as a URI (globally unique)",
          "type": "string"
        },
        "usage": {
          "description": "Describes the clinical usage of the event definition",
          "type": "string"
        },
        "useContext": {
          "description": "The context that the content is intended to support",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UsageContext"
          }
        },
        "version": {
          "description": "Business version of the event definition",
          "type": "string"
        }
      }
    },
    "Evidence": {
      "description": "A research context or question",
      "pattern": "Evidence",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "approvalDate": {
          "description": "When the evidence was approved by publisher",
          "type": "string"
        },
        "author": {
          "description": "Who authored the content",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "contact": {
          "description": "Contact details for the publisher",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "copyright": {
          "description": "Use and/or publishing restrictions",
          "type": "string"
        },
        "date": {
          "description": "Date last changed",
          "type": "string"
        },
        "description": {
          "description": "Natural language description of the evidence",
          "type": "string"
        },
        "editor": {
          "description": "Who edited the content",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "effectivePeriod": {
          "$ref": "#/definitions/Period"
        },
        "endorser": {
          "description": "Who endorsed the content",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "exposureBackground": {
          "$ref": "#/definitions/Reference"
        },
        "exposureVariant": {
          "description": "What exposure?",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Additional identifier for the evidence",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "jurisdiction": {
          "description": "Intended jurisdiction for evidence (if applicable)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "lastReviewDate": {
          "description": "When the evidence was last reviewed",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Name for this evidence (computer friendly)",
          "type": "string"
        },
        "note": {
          "description": "Used for footnotes or explanatory notes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "outcome": {
          "description": "What outcome?",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "publisher": {
          "description": "Name of the publisher (organization or individual)",
          "type": "string"
        },
        "relatedArtifact": {
          "description": "Additional documentation, citations, etc.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedArtifact"
          }
        },
        "reviewer": {
          "description": "Who reviewed the content",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "shortTitle": {
          "description": "Title for use in informal contexts",
          "type": "string"
        },
        "status": {
          "description": "draft | active | retired | unknown",
          "type": "string"
        },
        "subtitle": {
          "description": "Subordinate title of the Evidence",
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "title": {
          "description": "Name for this evidence (human friendly)",
          "type": "string"
        },
        "topic": {
          "description": "The category of the Evidence, such as Education, Treatment, Assessment, etc.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "url": {
          "description": "Canonical identifier for this evidence, represented as a URI (globally unique)",
          "type": "string"
        },
        "useContext": {
          "description": "The context that the content is intended to support",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UsageContext"
          }
        },
        "version": {
          "description": "Business version of the evidence",
          "type": "string"
        }
      }
    },
    "EvidenceVariableCharacteristicComponent": {
      "description": "What defines the members of the evidence element",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "definitionReference": {
          "$ref": "#/definitions/Reference"
        },
        "definitionCanonical": {
          "description": "What code or expression defines members?",
          "type": "string"
        },
        "definitionCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "definitionExpression": {
          "$ref": "#/definitions/Expression"
        },
        "definitionDataRequirement": {
          "$ref": "#/definitions/DataRequirement"
        },
        "definitionTriggerDefinition": {
          "$ref": "#/definitions/TriggerDefinition"
        },
        "description": {
          "description": "Natural language description of the characteristic",
          "type": "string"
        },
        "exclude": {
          "description": "Whether the characteristic includes or excludes members",
          "type": "boolean"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "groupMeasure": {
          "description": "mean | median | mean-of-mean | mean-of-median | median-of-mean | median-of-median",
          "type": "string"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "participantEffectiveDateTime": {
          "description": "What time period do participants cover",
          "type": "string"
        },
        "participantEffectivePeriod": {
          "$ref": "#/definitions/Period"
        },
        "participantEffectiveDuration": {
          "$ref": "#/definitions/Duration"
        },
        "participantEffectiveTiming": {
          "$ref": "#/definitions/Timing"
        },
        "timeFromStart": {
          "$ref": "#/definitions/Duration"
        },
        "usageContext": {
          "description": "What code/value pairs define members?",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UsageContext"
          }
        }
      }
    },
    "EvidenceVariable": {
      "description": "A population, intervention, or exposure definition",
      "pattern": "EvidenceVariable",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "approvalDate": {
          "description": "When the evidence variable was approved by publisher",
          "type": "string"
        },
        "author": {
          "description": "Who authored the content",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "characteristic": {
          "description": "What defines the members of the evidence element",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EvidenceVariableCharacteristicComponent"
          }
        },
        "contact": {
          "description": "Contact details for the publisher",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "copyright": {
          "description": "Use and/or publishing restrictions",
          "type": "string"
        },
        "date": {
          "description": "Date last changed",
          "type": "string"
        },
        "description": {
          "description": "Natural language description of the evidence variable",
          "type": "string"
        },
        "editor": {
          "description": "Who edited the content",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "effectivePeriod": {
          "$ref": "#/definitions/Period"
        },
        "endorser": {
          "description": "Who endorsed the content",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Additional identifier for the evidence variable",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "jurisdiction": {
          "description": "Intended jurisdiction for evidence variable (if applicable)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "lastReviewDate": {
          "description": "When the evidence variable was last reviewed",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Name for this evidence variable (computer friendly)",
          "type": "string"
        },
        "note": {
          "description": "Used for footnotes or explanatory notes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "publisher": {
          "description": "Name of the publisher (organization or individual)",
          "type": "string"
        },
        "relatedArtifact": {
          "description": "Additional documentation, citations, etc.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedArtifact"
          }
        },
        "reviewer": {
          "description": "Who reviewed the content",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "shortTitle": {
          "description": "Title for use in informal contexts",
          "type": "string"
        },
        "status": {
          "description": "draft | active | retired | unknown",
          "type": "string"
        },
        "subtitle": {
          "description": "Subordinate title of the EvidenceVariable",
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "title": {
          "description": "Name for this evidence variable (human friendly)",
          "type": "string"
        },
        "topic": {
          "description": "The category of the EvidenceVariable, such as Education, Treatment, Assessment, etc.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "type": {
          "description": "dichotomous | continuous | descriptive",
          "type": "string"
        },
        "url": {
          "description": "Canonical identifier for this evidence variable, represented as a URI (globally unique)",
          "type": "string"
        },
        "useContext": {
          "description": "The context that the content is intended to support",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UsageContext"
          }
        },
        "version": {
          "description": "Business version of the evidence variable",
          "type": "string"
        }
      }
    },
    "ExampleScenarioActorComponent": {
      "description": "Actor participating in the resource",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "actorId": {
          "description": "ID or acronym of the actor",
          "type": "string"
        },
        "description": {
          "description": "The description of the actor",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "The name of the actor as shown in the page",
          "type": "string"
        },
        "type": {
          "description": "person | entity",
          "type": "string"
        }
      }
    },
    "ExampleScenarioContainedInstanceComponent": {
      "description": "Resources contained in the instance",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "resourceId": {
          "description": "Each resource contained in the instance",
          "type": "string"
        },
        "versionId": {
          "description": "A specific version of a resource contained in the instance",
          "type": "string"
        }
      }
    },
    "ExampleScenarioVersionComponent": {
      "description": "A specific version of the resource",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "description": {
          "description": "The description of the resource version",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "versionId": {
          "description": "The identifier of a specific version of a resource",
          "type": "string"
        }
      }
    },
    "ExampleScenarioInstanceComponent": {
      "description": "Each resource and each version that is present in the workflow",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "containedInstance": {
          "description": "Resources contained in the instance",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExampleScenarioContainedInstanceComponent"
          }
        },
        "description": {
          "description": "Human-friendly description of the resource instance",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "A short name for the resource instance",
          "type": "string"
        },
        "resourceId": {
          "description": "The id of the resource for referencing",
          "type": "string"
        },
        "resourceType": {
          "description": "The type of the resource",
          "type": "string"
        },
        "version": {
          "description": "A specific version of the resource",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExampleScenarioVersionComponent"
          }
        }
      }
    },
    "ExampleScenarioAlternativeComponent": {
      "description": "Alternate non-typical step action",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "description": {
          "description": "A human-readable description of each option",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "step": {
          "description": "What happens in each alternative option",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExampleScenarioStepComponent"
          }
        },
        "title": {
          "description": "Label for alternative",
          "type": "string"
        }
      }
    },
    "ExampleScenarioOperationComponent": {
      "description": "Each interaction or action",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "description": {
          "description": "A comment to be inserted in the diagram",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "initiator": {
          "description": "Who starts the transaction",
          "type": "string"
        },
        "initiatorActive": {
          "description": "Whether the initiator is deactivated right after the transaction",
          "type": "boolean"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "The human-friendly name of the interaction",
          "type": "string"
        },
        "number": {
          "description": "The sequential number of the interaction",
          "type": "string"
        },
        "receiver": {
          "description": "Who receives the transaction",
          "type": "string"
        },
        "receiverActive": {
          "description": "Whether the receiver is deactivated right after the transaction",
          "type": "boolean"
        },
        "request": {
          "$ref": "#/definitions/ExampleScenarioContainedInstanceComponent"
        },
        "response": {
          "$ref": "#/definitions/ExampleScenarioContainedInstanceComponent"
        },
        "type": {
          "description": "The type of operation - CRUD",
          "type": "string"
        }
      }
    },
    "ExampleScenarioStepComponent": {
      "description": "Each step of the process",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "alternative": {
          "description": "Alternate non-typical step action",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExampleScenarioAlternativeComponent"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "operation": {
          "$ref": "#/definitions/ExampleScenarioOperationComponent"
        },
        "pause": {
          "description": "If there is a pause in the flow",
          "type": "boolean"
        },
        "process": {
          "description": "Nested process",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExampleScenarioProcessComponent"
          }
        }
      }
    },
    "ExampleScenarioProcessComponent": {
      "description": "Each major process - a group of operations",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "description": {
          "description": "A longer description of the group of operations",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "postConditions": {
          "description": "Description of final status after the process ends",
          "type": "string"
        },
        "preConditions": {
          "description": "Description of initial status before the process starts",
          "type": "string"
        },
        "step": {
          "description": "Each step of the process",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExampleScenarioStepComponent"
          }
        },
        "title": {
          "description": "The diagram title of the group of operations",
          "type": "string"
        }
      }
    },
    "ExampleScenario": {
      "description": "Example of workflow instance",
      "pattern": "ExampleScenario",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "actor": {
          "description": "Actor participating in the resource",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExampleScenarioActorComponent"
          }
        },
        "contact": {
          "description": "Contact details for the publisher",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "copyright": {
          "description": "Use and/or publishing restrictions",
          "type": "string"
        },
        "date": {
          "description": "Date last changed",
          "type": "string"
        },
        "experimental": {
          "description": "For testing purposes, not real usage",
          "type": "boolean"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Additional identifier for the example scenario",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "instance": {
          "description": "Each resource and each version that is present in the workflow",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExampleScenarioInstanceComponent"
          }
        },
        "jurisdiction": {
          "description": "Intended jurisdiction for example scenario (if applicable)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Name for this example scenario (computer friendly)",
          "type": "string"
        },
        "process": {
          "description": "Each major process - a group of operations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExampleScenarioProcessComponent"
          }
        },
        "publisher": {
          "description": "Name of the publisher (organization or individual)",
          "type": "string"
        },
        "purpose": {
          "description": "The purpose of the example, e.g. to illustrate a scenario",
          "type": "string"
        },
        "status": {
          "description": "draft | active | retired | unknown",
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "url": {
          "description": "Canonical identifier for this example scenario, represented as a URI (globally unique)",
          "type": "string"
        },
        "useContext": {
          "description": "The context that the content is intended to support",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UsageContext"
          }
        },
        "version": {
          "description": "Business version of the example scenario",
          "type": "string"
        },
        "workflow": {
          "description": "Another nested workflow",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ExplanationOfBenefitAccidentComponent": {
      "description": "Details of the event",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "date": {
          "description": "When the incident occurred",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "locationAddress": {
          "$ref": "#/definitions/Address"
        },
        "locationReference": {
          "$ref": "#/definitions/Reference"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "ExplanationOfBenefitAddedItemDetailSubDetailComponent": {
      "description": "Insurer added line items",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "adjudication": {
          "description": "Added items adjudication",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExplanationOfBenefitAdjudicationComponent"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "factor": {
          "format": "double",
          "description": "Price scaling factor",
          "type": "number"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifier": {
          "description": "Service/Product billing modifiers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "net": {
          "$ref": "#/definitions/Money"
        },
        "noteNumber": {
          "description": "Applicable note numbers",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "productOrService": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "quantity": {
          "$ref": "#/definitions/Quantity"
        },
        "unitPrice": {
          "$ref": "#/definitions/Money"
        }
      }
    },
    "ExplanationOfBenefitAddedItemDetailComponent": {
      "description": "Insurer added line items",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "adjudication": {
          "description": "Added items adjudication",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExplanationOfBenefitAdjudicationComponent"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "factor": {
          "format": "double",
          "description": "Price scaling factor",
          "type": "number"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifier": {
          "description": "Service/Product billing modifiers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "net": {
          "$ref": "#/definitions/Money"
        },
        "noteNumber": {
          "description": "Applicable note numbers",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "productOrService": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "quantity": {
          "$ref": "#/definitions/Quantity"
        },
        "subDetail": {
          "description": "Insurer added line items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExplanationOfBenefitAddedItemDetailSubDetailComponent"
          }
        },
        "unitPrice": {
          "$ref": "#/definitions/Money"
        }
      }
    },
    "ExplanationOfBenefitAddedItemComponent": {
      "description": "Insurer added line items",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "adjudication": {
          "description": "Added items adjudication",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExplanationOfBenefitAdjudicationComponent"
          }
        },
        "bodySite": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "detail": {
          "description": "Insurer added line items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExplanationOfBenefitAddedItemDetailComponent"
          }
        },
        "detailSequence": {
          "description": "Detail sequence number",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "factor": {
          "format": "double",
          "description": "Price scaling factor",
          "type": "number"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "itemSequence": {
          "description": "Item sequence number",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "locationCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "locationAddress": {
          "$ref": "#/definitions/Address"
        },
        "locationReference": {
          "$ref": "#/definitions/Reference"
        },
        "modifier": {
          "description": "Service/Product billing modifiers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "net": {
          "$ref": "#/definitions/Money"
        },
        "noteNumber": {
          "description": "Applicable note numbers",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "productOrService": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "programCode": {
          "description": "Program the product or service is provided under",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "provider": {
          "description": "Authorized providers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "quantity": {
          "$ref": "#/definitions/Quantity"
        },
        "servicedDate": {
          "description": "Date or dates of service or product delivery",
          "type": "string"
        },
        "servicedPeriod": {
          "$ref": "#/definitions/Period"
        },
        "subDetailSequence": {
          "description": "Subdetail sequence number",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "subSite": {
          "description": "Anatomical sub-location",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "unitPrice": {
          "$ref": "#/definitions/Money"
        }
      }
    },
    "ExplanationOfBenefitBenefitComponent": {
      "description": "Benefit Summary",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "allowedUnsignedInt": {
          "format": "int32",
          "description": "Benefits allowed",
          "type": "integer"
        },
        "allowedString": {
          "description": "Benefits allowed",
          "type": "string"
        },
        "allowedMoney": {
          "$ref": "#/definitions/Money"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "usedUnsignedInt": {
          "format": "int32",
          "description": "Benefits used",
          "type": "integer"
        },
        "usedMoney": {
          "$ref": "#/definitions/Money"
        }
      }
    },
    "ExplanationOfBenefitBenefitBalanceComponent": {
      "description": "Balance by Benefit Category",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "category": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "description": {
          "description": "Description of the benefit or services covered",
          "type": "string"
        },
        "excluded": {
          "description": "Excluded from the plan",
          "type": "boolean"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "financial": {
          "description": "Benefit Summary",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExplanationOfBenefitBenefitComponent"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Short name for the benefit",
          "type": "string"
        },
        "network": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "term": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "unit": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "ExplanationOfBenefitCareTeamComponent": {
      "description": "Care Team members",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "provider": {
          "$ref": "#/definitions/Reference"
        },
        "qualification": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "responsible": {
          "description": "Indicator of the lead practitioner",
          "type": "boolean"
        },
        "role": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "sequence": {
          "format": "int32",
          "description": "Order of care team",
          "type": "integer"
        }
      }
    },
    "ExplanationOfBenefitDiagnosisComponent": {
      "description": "Pertinent diagnosis information",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "diagnosisCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "diagnosisReference": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "onAdmission": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "packageCode": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "sequence": {
          "format": "int32",
          "description": "Diagnosis instance identifier",
          "type": "integer"
        },
        "type": {
          "description": "Timing or nature of the diagnosis",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        }
      }
    },
    "ExplanationOfBenefitInsuranceComponent": {
      "description": "Patient insurance information",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "coverage": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "focal": {
          "description": "Coverage to be used for adjudication",
          "type": "boolean"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "preAuthRef": {
          "description": "Prior authorization reference number",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ExplanationOfBenefitAdjudicationComponent": {
      "description": "Adjudication details",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Money"
        },
        "category": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "reason": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "value": {
          "format": "double",
          "description": "Non-monitary value",
          "type": "number"
        }
      }
    },
    "ExplanationOfBenefitSubDetailComponent": {
      "description": "Additional items",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "adjudication": {
          "description": "Subdetail level adjudication details",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExplanationOfBenefitAdjudicationComponent"
          }
        },
        "category": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "factor": {
          "format": "double",
          "description": "Price scaling factor",
          "type": "number"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifier": {
          "description": "Service/Product billing modifiers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "net": {
          "$ref": "#/definitions/Money"
        },
        "noteNumber": {
          "description": "Applicable note numbers",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "productOrService": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "programCode": {
          "description": "Program the product or service is provided under",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "quantity": {
          "$ref": "#/definitions/Quantity"
        },
        "revenue": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "sequence": {
          "format": "int32",
          "description": "Product or service provided",
          "type": "integer"
        },
        "udi": {
          "description": "Unique device identifier",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "unitPrice": {
          "$ref": "#/definitions/Money"
        }
      }
    },
    "ExplanationOfBenefitDetailComponent": {
      "description": "Additional items",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "adjudication": {
          "description": "Detail level adjudication details",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExplanationOfBenefitAdjudicationComponent"
          }
        },
        "category": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "factor": {
          "format": "double",
          "description": "Price scaling factor",
          "type": "number"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifier": {
          "description": "Service/Product billing modifiers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "net": {
          "$ref": "#/definitions/Money"
        },
        "noteNumber": {
          "description": "Applicable note numbers",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "productOrService": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "programCode": {
          "description": "Program the product or service is provided under",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "quantity": {
          "$ref": "#/definitions/Quantity"
        },
        "revenue": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "sequence": {
          "format": "int32",
          "description": "Product or service provided",
          "type": "integer"
        },
        "subDetail": {
          "description": "Additional items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExplanationOfBenefitSubDetailComponent"
          }
        },
        "udi": {
          "description": "Unique device identifier",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "unitPrice": {
          "$ref": "#/definitions/Money"
        }
      }
    },
    "ExplanationOfBenefitItemComponent": {
      "description": "Product or service provided",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "adjudication": {
          "description": "Adjudication details",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExplanationOfBenefitAdjudicationComponent"
          }
        },
        "bodySite": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "careTeamSequence": {
          "description": "Applicable care team members",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "category": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "detail": {
          "description": "Additional items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExplanationOfBenefitDetailComponent"
          }
        },
        "diagnosisSequence": {
          "description": "Applicable diagnoses",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "encounter": {
          "description": "Encounters related to this billed item",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "factor": {
          "format": "double",
          "description": "Price scaling factor",
          "type": "number"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "informationSequence": {
          "description": "Applicable exception and supporting information",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "locationCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "locationAddress": {
          "$ref": "#/definitions/Address"
        },
        "locationReference": {
          "$ref": "#/definitions/Reference"
        },
        "modifier": {
          "description": "Product or service billing modifiers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "net": {
          "$ref": "#/definitions/Money"
        },
        "noteNumber": {
          "description": "Applicable note numbers",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "procedureSequence": {
          "description": "Applicable procedures",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "productOrService": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "programCode": {
          "description": "Program the product or service is provided under",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "quantity": {
          "$ref": "#/definitions/Quantity"
        },
        "revenue": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "sequence": {
          "format": "int32",
          "description": "Item instance identifier",
          "type": "integer"
        },
        "servicedDate": {
          "description": "Date or dates of service or product delivery",
          "type": "string"
        },
        "servicedPeriod": {
          "$ref": "#/definitions/Period"
        },
        "subSite": {
          "description": "Anatomical sub-location",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "udi": {
          "description": "Unique device identifier",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "unitPrice": {
          "$ref": "#/definitions/Money"
        }
      }
    },
    "ExplanationOfBenefitPayeeComponent": {
      "description": "Recipient of benefits payable",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "party": {
          "$ref": "#/definitions/Reference"
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "ExplanationOfBenefitPaymentComponent": {
      "description": "Payment Details",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "adjustment": {
          "$ref": "#/definitions/Money"
        },
        "adjustmentReason": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "amount": {
          "$ref": "#/definitions/Money"
        },
        "date": {
          "description": "Expected date of payment",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "identifier": {
          "$ref": "#/definitions/Identifier"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "ExplanationOfBenefitProcedureComponent": {
      "description": "Clinical procedures performed",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "date": {
          "description": "When the procedure was performed",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "procedureCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "procedureReference": {
          "$ref": "#/definitions/Reference"
        },
        "sequence": {
          "format": "int32",
          "description": "Procedure instance identifier",
          "type": "integer"
        },
        "type": {
          "description": "Category of Procedure",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "udi": {
          "description": "Unique device identifier",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        }
      }
    },
    "ExplanationOfBenefitNoteComponent": {
      "description": "Note concerning adjudication",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "language": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "number": {
          "format": "int32",
          "description": "Note instance identifier",
          "type": "integer"
        },
        "text": {
          "description": "Note explanatory text",
          "type": "string"
        },
        "type": {
          "description": "display | print | printoper",
          "type": "string"
        }
      }
    },
    "ExplanationOfBenefitRelatedClaimComponent": {
      "description": "Prior or corollary claims",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "claim": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "reference": {
          "$ref": "#/definitions/Identifier"
        },
        "relationship": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "ExplanationOfBenefitSupportingInformationComponent": {
      "description": "Supporting information",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "category": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "code": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "reason": {
          "$ref": "#/definitions/Coding"
        },
        "sequence": {
          "format": "int32",
          "description": "Information instance identifier",
          "type": "integer"
        },
        "timingDate": {
          "description": "When it occurred",
          "type": "string"
        },
        "timingPeriod": {
          "$ref": "#/definitions/Period"
        },
        "valueBoolean": {
          "description": "Data to be provided",
          "type": "boolean"
        },
        "valueString": {
          "description": "Data to be provided",
          "type": "string"
        },
        "valueQuantity": {
          "$ref": "#/definitions/Quantity"
        },
        "valueAttachment": {
          "$ref": "#/definitions/Attachment"
        },
        "valueReference": {
          "$ref": "#/definitions/Reference"
        }
      }
    },
    "ExplanationOfBenefitTotalComponent": {
      "description": "Adjudication totals",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Money"
        },
        "category": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "ExplanationOfBenefit": {
      "description": "Explanation of Benefit resource",
      "pattern": "ExplanationOfBenefit",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "accident": {
          "$ref": "#/definitions/ExplanationOfBenefitAccidentComponent"
        },
        "addItem": {
          "description": "Insurer added line items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExplanationOfBenefitAddedItemComponent"
          }
        },
        "adjudication": {
          "description": "Header-level adjudication",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExplanationOfBenefitAdjudicationComponent"
          }
        },
        "benefitBalance": {
          "description": "Balance by Benefit Category",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExplanationOfBenefitBenefitBalanceComponent"
          }
        },
        "benefitPeriod": {
          "$ref": "#/definitions/Period"
        },
        "billablePeriod": {
          "$ref": "#/definitions/Period"
        },
        "careTeam": {
          "description": "Care Team members",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExplanationOfBenefitCareTeamComponent"
          }
        },
        "claim": {
          "$ref": "#/definitions/Reference"
        },
        "claimResponse": {
          "$ref": "#/definitions/Reference"
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "created": {
          "description": "Response creation date",
          "type": "string"
        },
        "diagnosis": {
          "description": "Pertinent diagnosis information",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExplanationOfBenefitDiagnosisComponent"
          }
        },
        "disposition": {
          "description": "Disposition Message",
          "type": "string"
        },
        "enterer": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "facility": {
          "$ref": "#/definitions/Reference"
        },
        "form": {
          "$ref": "#/definitions/Attachment"
        },
        "formCode": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "fundsReserve": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "fundsReserveRequested": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Business Identifier for the resource",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "insurance": {
          "description": "Patient insurance information",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExplanationOfBenefitInsuranceComponent"
          }
        },
        "insurer": {
          "$ref": "#/definitions/Reference"
        },
        "item": {
          "description": "Product or service provided",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExplanationOfBenefitItemComponent"
          }
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "originalPrescription": {
          "$ref": "#/definitions/Reference"
        },
        "outcome": {
          "description": "queued | complete | error | partial",
          "type": "string"
        },
        "patient": {
          "$ref": "#/definitions/Reference"
        },
        "payee": {
          "$ref": "#/definitions/ExplanationOfBenefitPayeeComponent"
        },
        "payment": {
          "$ref": "#/definitions/ExplanationOfBenefitPaymentComponent"
        },
        "preAuthRef": {
          "description": "Preauthorization reference",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "preAuthRefPeriod": {
          "description": "Preauthorization in-effect period",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Period"
          }
        },
        "precedence": {
          "format": "int32",
          "description": "Precedence (primary, secondary, etc.)",
          "type": "integer"
        },
        "prescription": {
          "$ref": "#/definitions/Reference"
        },
        "priority": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "procedure": {
          "description": "Clinical procedures performed",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExplanationOfBenefitProcedureComponent"
          }
        },
        "processNote": {
          "description": "Note concerning adjudication",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExplanationOfBenefitNoteComponent"
          }
        },
        "provider": {
          "$ref": "#/definitions/Reference"
        },
        "referral": {
          "$ref": "#/definitions/Reference"
        },
        "related": {
          "description": "Prior or corollary claims",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExplanationOfBenefitRelatedClaimComponent"
          }
        },
        "status": {
          "description": "active | cancelled | draft | entered-in-error",
          "type": "string"
        },
        "subType": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "supportingInfo": {
          "description": "Supporting information",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExplanationOfBenefitSupportingInformationComponent"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "total": {
          "description": "Adjudication totals",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExplanationOfBenefitTotalComponent"
          }
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "use": {
          "description": "claim | preauthorization | predetermination",
          "type": "string"
        }
      }
    },
    "FamilyMemberHistoryConditionComponent": {
      "description": "Condition that the related person had",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "code": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "contributedToDeath": {
          "description": "Whether the condition contributed to the cause of death",
          "type": "boolean"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "note": {
          "description": "Extra information about condition",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "onsetAge": {
          "$ref": "#/definitions/Age"
        },
        "onsetRange": {
          "$ref": "#/definitions/Range"
        },
        "onsetPeriod": {
          "$ref": "#/definitions/Period"
        },
        "onsetString": {
          "description": "When condition first manifested",
          "type": "string"
        },
        "outcome": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "FamilyMemberHistory": {
      "description": "Information about patient's relatives, relevant for patient",
      "pattern": "FamilyMemberHistory",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "ageAge": {
          "$ref": "#/definitions/Age"
        },
        "ageRange": {
          "$ref": "#/definitions/Range"
        },
        "ageString": {
          "description": "(approximate) age",
          "type": "string"
        },
        "bornPeriod": {
          "$ref": "#/definitions/Period"
        },
        "bornDate": {
          "description": "(approximate) date of birth",
          "type": "string"
        },
        "bornString": {
          "description": "(approximate) date of birth",
          "type": "string"
        },
        "condition": {
          "description": "Condition that the related person had",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FamilyMemberHistoryConditionComponent"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "dataAbsentReason": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "date": {
          "description": "When history was recorded or last updated",
          "type": "string"
        },
        "deceasedBoolean": {
          "description": "Dead? How old/when?",
          "type": "boolean"
        },
        "deceasedAge": {
          "$ref": "#/definitions/Age"
        },
        "deceasedRange": {
          "$ref": "#/definitions/Range"
        },
        "deceasedDate": {
          "description": "Dead? How old/when?",
          "type": "string"
        },
        "deceasedString": {
          "description": "Dead? How old/when?",
          "type": "string"
        },
        "estimatedAge": {
          "description": "Age is estimated?",
          "type": "boolean"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "External Id(s) for this record",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "instantiatesCanonical": {
          "description": "Instantiates FHIR protocol or definition",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "instantiatesUri": {
          "description": "Instantiates external protocol or definition",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "The family member described",
          "type": "string"
        },
        "note": {
          "description": "General note about related person",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "patient": {
          "$ref": "#/definitions/Reference"
        },
        "reasonCode": {
          "description": "Why was family member history performed?",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "reasonReference": {
          "description": "Why was family member history performed?",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "relationship": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "sex": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "status": {
          "description": "partial | completed | entered-in-error | health-unknown",
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "Flag": {
      "description": "Key information to flag to healthcare providers",
      "pattern": "Flag",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "author": {
          "$ref": "#/definitions/Reference"
        },
        "category": {
          "description": "Clinical, administrative, etc.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "code": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "encounter": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Business identifier",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "period": {
          "$ref": "#/definitions/Period"
        },
        "status": {
          "description": "active | inactive | entered-in-error",
          "type": "string"
        },
        "subject": {
          "$ref": "#/definitions/Reference"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "GoalTargetComponent": {
      "description": "Target outcome for the goal",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "detailQuantity": {
          "$ref": "#/definitions/Quantity"
        },
        "detailRange": {
          "$ref": "#/definitions/Range"
        },
        "detailCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "detailString": {
          "description": "The target value to be achieved",
          "type": "string"
        },
        "detailBoolean": {
          "description": "The target value to be achieved",
          "type": "boolean"
        },
        "detailInteger": {
          "format": "int32",
          "description": "The target value to be achieved",
          "type": "integer"
        },
        "detailRatio": {
          "$ref": "#/definitions/Ratio"
        },
        "dueDate": {
          "description": "Reach goal on or before",
          "type": "string"
        },
        "dueDuration": {
          "$ref": "#/definitions/Duration"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "measure": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "Goal": {
      "description": "Describes the intended objective(s) for a patient, group or organization",
      "pattern": "Goal",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "achievementStatus": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "addresses": {
          "description": "Issues addressed by this goal",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "category": {
          "description": "E.g. Treatment, dietary, behavioral, etc.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "description": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "expressedBy": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "External Ids for this goal",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "lifecycleStatus": {
          "description": "proposed | planned | accepted | active | on-hold | completed | cancelled | entered-in-error | rejected",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "note": {
          "description": "Comments about the goal",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "outcomeCode": {
          "description": "What result was achieved regarding the goal?",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "outcomeReference": {
          "description": "Observation that resulted from goal",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "priority": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "startDate": {
          "description": "When goal pursuit begins",
          "type": "string"
        },
        "startCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "statusDate": {
          "description": "When goal status took effect",
          "type": "string"
        },
        "statusReason": {
          "description": "Reason for current status",
          "type": "string"
        },
        "subject": {
          "$ref": "#/definitions/Reference"
        },
        "target": {
          "description": "Target outcome for the goal",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GoalTargetComponent"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "GraphDefinitionCompartmentComponent": {
      "description": "Compartment Consistency Rules",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "code": {
          "description": "Patient | Encounter | RelatedPerson | Practitioner | Device",
          "type": "string"
        },
        "description": {
          "description": "Documentation for FHIRPath expression",
          "type": "string"
        },
        "expression": {
          "description": "Custom rule, as a FHIRPath expression",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "rule": {
          "description": "identical | matching | different | custom",
          "type": "string"
        },
        "use": {
          "description": "condition | requirement",
          "type": "string"
        }
      }
    },
    "GraphDefinitionTargetComponent": {
      "description": "Potential target for the link",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "compartment": {
          "description": "Compartment Consistency Rules",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GraphDefinitionCompartmentComponent"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "link": {
          "description": "Additional links from target resource",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GraphDefinitionLinkComponent"
          }
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "params": {
          "description": "Criteria for reverse lookup",
          "type": "string"
        },
        "profile": {
          "description": "Profile for the target resource",
          "type": "string"
        },
        "type": {
          "description": "Type of resource this link refers to",
          "type": "string"
        }
      }
    },
    "GraphDefinitionLinkComponent": {
      "description": "Links this graph makes rules about",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "description": {
          "description": "Why this link is specified",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "max": {
          "description": "Maximum occurrences for this link",
          "type": "string"
        },
        "min": {
          "format": "int32",
          "description": "Minimum occurrences for this link",
          "type": "integer"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "path": {
          "description": "Path in the resource that contains the link",
          "type": "string"
        },
        "sliceName": {
          "description": "Which slice (if profiled)",
          "type": "string"
        },
        "target": {
          "description": "Potential target for the link",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GraphDefinitionTargetComponent"
          }
        }
      }
    },
    "GraphDefinition": {
      "description": "Definition of a graph of resources",
      "pattern": "GraphDefinition",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "contact": {
          "description": "Contact details for the publisher",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "date": {
          "description": "Date last changed",
          "type": "string"
        },
        "description": {
          "description": "Natural language description of the graph definition",
          "type": "string"
        },
        "experimental": {
          "description": "For testing purposes, not real usage",
          "type": "boolean"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "jurisdiction": {
          "description": "Intended jurisdiction for graph definition (if applicable)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "link": {
          "description": "Links this graph makes rules about",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GraphDefinitionLinkComponent"
          }
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Name for this graph definition (computer friendly)",
          "type": "string"
        },
        "profile": {
          "description": "Profile on base resource",
          "type": "string"
        },
        "publisher": {
          "description": "Name of the publisher (organization or individual)",
          "type": "string"
        },
        "purpose": {
          "description": "Why this graph definition is defined",
          "type": "string"
        },
        "start": {
          "description": "Type of resource at which the graph starts",
          "type": "string"
        },
        "status": {
          "description": "draft | active | retired | unknown",
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "url": {
          "description": "Canonical identifier for this graph definition, represented as a URI (globally unique)",
          "type": "string"
        },
        "useContext": {
          "description": "The context that the content is intended to support",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UsageContext"
          }
        },
        "version": {
          "description": "Business version of the graph definition",
          "type": "string"
        }
      }
    },
    "GroupCharacteristicComponent": {
      "description": "Include / Exclude group members by Trait",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "code": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "exclude": {
          "description": "Group includes or excludes",
          "type": "boolean"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "period": {
          "$ref": "#/definitions/Period"
        },
        "valueCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueBoolean": {
          "description": "Value held by characteristic",
          "type": "boolean"
        },
        "valueQuantity": {
          "$ref": "#/definitions/Quantity"
        },
        "valueRange": {
          "$ref": "#/definitions/Range"
        },
        "valueReference": {
          "$ref": "#/definitions/Reference"
        }
      }
    },
    "GroupMemberComponent": {
      "description": "Who or what is in group",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "entity": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "inactive": {
          "description": "If member is no longer in group",
          "type": "boolean"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "period": {
          "$ref": "#/definitions/Period"
        }
      }
    },
    "Group": {
      "description": "Group of multiple entities",
      "pattern": "Group",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "active": {
          "description": "Whether this group's record is in active use",
          "type": "boolean"
        },
        "actual": {
          "description": "Descriptive or actual",
          "type": "boolean"
        },
        "characteristic": {
          "description": "Include / Exclude group members by Trait",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GroupCharacteristicComponent"
          }
        },
        "code": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Unique id",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "managingEntity": {
          "$ref": "#/definitions/Reference"
        },
        "member": {
          "description": "Who or what is in group",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GroupMemberComponent"
          }
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Label for Group",
          "type": "string"
        },
        "quantity": {
          "format": "int32",
          "description": "Number of members",
          "type": "integer"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "type": {
          "description": "person | animal | practitioner | device | medication | substance",
          "type": "string"
        }
      }
    },
    "GuidanceResponse": {
      "description": "The formal response to a guidance request",
      "pattern": "GuidanceResponse",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "dataRequirement": {
          "description": "Additional required data",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataRequirement"
          }
        },
        "encounter": {
          "$ref": "#/definitions/Reference"
        },
        "evaluationMessage": {
          "description": "Messages resulting from the evaluation of the artifact or artifacts",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Business identifier",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "moduleUri": {
          "description": "What guidance was requested",
          "type": "string"
        },
        "moduleCanonical": {
          "description": "What guidance was requested",
          "type": "string"
        },
        "moduleCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "note": {
          "description": "Additional notes about the response",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "occurrenceDateTime": {
          "description": "When the guidance response was processed",
          "type": "string"
        },
        "outputParameters": {
          "$ref": "#/definitions/Reference"
        },
        "performer": {
          "$ref": "#/definitions/Reference"
        },
        "reasonCode": {
          "description": "Why guidance is needed",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "reasonReference": {
          "description": "Why guidance is needed",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "requestIdentifier": {
          "$ref": "#/definitions/Identifier"
        },
        "result": {
          "$ref": "#/definitions/Reference"
        },
        "status": {
          "description": "success | data-requested | data-required | in-progress | failure | entered-in-error",
          "type": "string"
        },
        "subject": {
          "$ref": "#/definitions/Reference"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "HealthcareServiceAvailableTimeComponent": {
      "description": "Times the Service Site is available",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "allDay": {
          "description": "Always available? e.g. 24 hour service",
          "type": "boolean"
        },
        "availableEndTime": {
          "description": "Closing time of day (ignored if allDay = true)",
          "type": "string"
        },
        "availableStartTime": {
          "description": "Opening time of day (ignored if allDay = true)",
          "type": "string"
        },
        "daysOfWeek": {
          "description": "mon | tue | wed | thu | fri | sat | sun",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "HealthcareServiceEligibilityComponent": {
      "description": "Specific eligibility requirements required to use the service",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "code": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "comment": {
          "description": "Describes the eligibility conditions for the service",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "HealthcareServiceNotAvailableComponent": {
      "description": "Not available during this time due to provided reason",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "description": {
          "description": "Reason presented to the user explaining why time not available",
          "type": "string"
        },
        "during": {
          "$ref": "#/definitions/Period"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "HealthcareService": {
      "description": "The details of a healthcare service available at a location",
      "pattern": "HealthcareService",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "active": {
          "description": "Whether this HealthcareService record is in active use",
          "type": "boolean"
        },
        "appointmentRequired": {
          "description": "If an appointment is required for access to this service",
          "type": "boolean"
        },
        "availabilityExceptions": {
          "description": "Description of availability exceptions",
          "type": "string"
        },
        "availableTime": {
          "description": "Times the Service Site is available",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthcareServiceAvailableTimeComponent"
          }
        },
        "category": {
          "description": "Broad category of service being performed or delivered",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "characteristic": {
          "description": "Collection of characteristics (attributes)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "comment": {
          "description": "Additional description and/or any specific issues not covered elsewhere",
          "type": "string"
        },
        "communication": {
          "description": "The language that this service is offered in",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "coverageArea": {
          "description": "Location(s) service is intended for/available to",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "eligibility": {
          "description": "Specific eligibility requirements required to use the service",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthcareServiceEligibilityComponent"
          }
        },
        "endpoint": {
          "description": "Technical endpoints providing access to electronic services operated for the healthcare service",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "extraDetails": {
          "description": "Extra details about the service that can't be placed in the other fields",
          "type": "string"
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "External identifiers for this item",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "location": {
          "description": "Location(s) where service may be provided",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Description of service as presented to a consumer while searching",
          "type": "string"
        },
        "notAvailable": {
          "description": "Not available during this time due to provided reason",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthcareServiceNotAvailableComponent"
          }
        },
        "photo": {
          "$ref": "#/definitions/Attachment"
        },
        "program": {
          "description": "Programs that this service is applicable to",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "providedBy": {
          "$ref": "#/definitions/Reference"
        },
        "referralMethod": {
          "description": "Ways that the service accepts referrals",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "serviceProvisionCode": {
          "description": "Conditions under which service is available/offered",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "specialty": {
          "description": "Specialties handled by the HealthcareService",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "telecom": {
          "description": "Contacts related to the healthcare service",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactPoint"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "type": {
          "description": "Type of service that may be delivered or performed",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        }
      }
    },
    "ImagingStudyInstanceComponent": {
      "description": "A single SOP instance from the series",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "number": {
          "format": "int32",
          "description": "The number of this instance in the series",
          "type": "integer"
        },
        "sopClass": {
          "$ref": "#/definitions/Coding"
        },
        "title": {
          "description": "Description of instance",
          "type": "string"
        },
        "uid": {
          "description": "DICOM SOP Instance UID",
          "type": "string"
        }
      }
    },
    "ImagingStudyPerformerComponent": {
      "description": "Who performed the series",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "actor": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "function": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "ImagingStudySeriesComponent": {
      "description": "Each study has one or more series of instances",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "bodySite": {
          "$ref": "#/definitions/Coding"
        },
        "description": {
          "description": "A short human readable summary of the series",
          "type": "string"
        },
        "endpoint": {
          "description": "Series access endpoint",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "instance": {
          "description": "A single SOP instance from the series",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImagingStudyInstanceComponent"
          }
        },
        "laterality": {
          "$ref": "#/definitions/Coding"
        },
        "modality": {
          "$ref": "#/definitions/Coding"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "number": {
          "format": "int32",
          "description": "Numeric identifier of this series",
          "type": "integer"
        },
        "numberOfInstances": {
          "format": "int32",
          "description": "Number of Series Related Instances",
          "type": "integer"
        },
        "performer": {
          "description": "Who performed the series",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImagingStudyPerformerComponent"
          }
        },
        "specimen": {
          "description": "Specimen imaged",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "started": {
          "description": "When the series started",
          "type": "string"
        },
        "uid": {
          "description": "DICOM Series Instance UID for the series",
          "type": "string"
        }
      }
    },
    "ImagingStudy": {
      "description": "A set of images produced in single study (one or more series of references images)",
      "pattern": "ImagingStudy",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "basedOn": {
          "description": "Request fulfilled",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "description": {
          "description": "Institution-generated description",
          "type": "string"
        },
        "encounter": {
          "$ref": "#/definitions/Reference"
        },
        "endpoint": {
          "description": "Study access endpoint",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Identifiers for the whole study",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "interpreter": {
          "description": "Who interpreted images",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/Reference"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modality": {
          "description": "All series modality if actual acquisition modalities",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Coding"
          }
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "note": {
          "description": "User-defined comments",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "numberOfInstances": {
          "format": "int32",
          "description": "Number of Study Related Instances",
          "type": "integer"
        },
        "numberOfSeries": {
          "format": "int32",
          "description": "Number of Study Related Series",
          "type": "integer"
        },
        "procedureCode": {
          "description": "The performed procedure code",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "procedureReference": {
          "$ref": "#/definitions/Reference"
        },
        "reasonCode": {
          "description": "Why the study was requested",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "reasonReference": {
          "description": "Why was study performed",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "referrer": {
          "$ref": "#/definitions/Reference"
        },
        "series": {
          "description": "Each study has one or more series of instances",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImagingStudySeriesComponent"
          }
        },
        "started": {
          "description": "When the study was started",
          "type": "string"
        },
        "status": {
          "description": "registered | available | cancelled | entered-in-error | unknown",
          "type": "string"
        },
        "subject": {
          "$ref": "#/definitions/Reference"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "ImmunizationEducationComponent": {
      "description": "Educational material presented to patient",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "documentType": {
          "description": "Educational material document identifier",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "presentationDate": {
          "description": "Educational material presentation date",
          "type": "string"
        },
        "publicationDate": {
          "description": "Educational material publication date",
          "type": "string"
        },
        "reference": {
          "description": "Educational material reference pointer",
          "type": "string"
        }
      }
    },
    "ImmunizationPerformerComponent": {
      "description": "Who performed event",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "actor": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "function": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "ImmunizationProtocolAppliedComponent": {
      "description": "Protocol followed by the provider",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "authority": {
          "$ref": "#/definitions/Reference"
        },
        "doseNumberPositiveInt": {
          "format": "int32",
          "description": "Dose number within series",
          "type": "integer"
        },
        "doseNumberString": {
          "description": "Dose number within series",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "series": {
          "description": "Name of vaccine series",
          "type": "string"
        },
        "seriesDosesPositiveInt": {
          "format": "int32",
          "description": "Recommended number of doses for immunity",
          "type": "integer"
        },
        "seriesDosesString": {
          "description": "Recommended number of doses for immunity",
          "type": "string"
        },
        "targetDisease": {
          "description": "Vaccine preventatable disease being targetted",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        }
      }
    },
    "ImmunizationReactionComponent": {
      "description": "Details of a reaction that follows immunization",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "date": {
          "description": "When reaction started",
          "type": "string"
        },
        "detail": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "reported": {
          "description": "Indicates self-reported reaction",
          "type": "boolean"
        }
      }
    },
    "Immunization": {
      "description": "Immunization event information",
      "pattern": "Immunization",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "doseQuantity": {
          "$ref": "#/definitions/Quantity"
        },
        "education": {
          "description": "Educational material presented to patient",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImmunizationEducationComponent"
          }
        },
        "encounter": {
          "$ref": "#/definitions/Reference"
        },
        "expirationDate": {
          "description": "Vaccine expiration date",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "fundingSource": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Business identifier",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "isSubpotent": {
          "description": "Dose potency",
          "type": "boolean"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/Reference"
        },
        "lotNumber": {
          "description": "Vaccine lot number",
          "type": "string"
        },
        "manufacturer": {
          "$ref": "#/definitions/Reference"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "note": {
          "description": "Additional immunization notes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "occurrenceDateTime": {
          "description": "Vaccine administration date",
          "type": "string"
        },
        "occurrenceString": {
          "description": "Vaccine administration date",
          "type": "string"
        },
        "patient": {
          "$ref": "#/definitions/Reference"
        },
        "performer": {
          "description": "Who performed event",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImmunizationPerformerComponent"
          }
        },
        "primarySource": {
          "description": "Indicates context the data was recorded in",
          "type": "boolean"
        },
        "programEligibility": {
          "description": "Patient eligibility for a vaccination program",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "protocolApplied": {
          "description": "Protocol followed by the provider",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImmunizationProtocolAppliedComponent"
          }
        },
        "reaction": {
          "description": "Details of a reaction that follows immunization",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImmunizationReactionComponent"
          }
        },
        "reasonCode": {
          "description": "Why immunization occurred",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "reasonReference": {
          "description": "Why immunization occurred",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "recorded": {
          "description": "When the immunization was first captured in the subject's record",
          "type": "string"
        },
        "reportOrigin": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "route": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "site": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "status": {
          "description": "completed | entered-in-error | not-done",
          "type": "string"
        },
        "statusReason": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "subpotentReason": {
          "description": "Reason for being subpotent",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "vaccineCode": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "ImmunizationEvaluation": {
      "description": "Immunization evaluation information",
      "pattern": "ImmunizationEvaluation",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "authority": {
          "$ref": "#/definitions/Reference"
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "date": {
          "description": "Date evaluation was performed",
          "type": "string"
        },
        "description": {
          "description": "Evaluation notes",
          "type": "string"
        },
        "doseNumberPositiveInt": {
          "format": "int32",
          "description": "Dose number within series",
          "type": "integer"
        },
        "doseNumberString": {
          "description": "Dose number within series",
          "type": "string"
        },
        "doseStatus": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "doseStatusReason": {
          "description": "Reason for the dose status",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Business identifier",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "immunizationEvent": {
          "$ref": "#/definitions/Reference"
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "patient": {
          "$ref": "#/definitions/Reference"
        },
        "series": {
          "description": "Name of vaccine series",
          "type": "string"
        },
        "seriesDosesPositiveInt": {
          "format": "int32",
          "description": "Recommended number of doses for immunity",
          "type": "integer"
        },
        "seriesDosesString": {
          "description": "Recommended number of doses for immunity",
          "type": "string"
        },
        "status": {
          "description": "completed | entered-in-error",
          "type": "string"
        },
        "targetDisease": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "ImmunizationRecommendationDateCriterionComponent": {
      "description": "Dates governing proposed immunization",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "code": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "value": {
          "description": "Recommended date",
          "type": "string"
        }
      }
    },
    "ImmunizationRecommendationRecommendationComponent": {
      "description": "Vaccine administration recommendations",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "contraindicatedVaccineCode": {
          "description": "Vaccine which is contraindicated to fulfill the recommendation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "dateCriterion": {
          "description": "Dates governing proposed immunization",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImmunizationRecommendationDateCriterionComponent"
          }
        },
        "description": {
          "description": "Protocol details",
          "type": "string"
        },
        "doseNumberPositiveInt": {
          "format": "int32",
          "description": "Recommended dose number within series",
          "type": "integer"
        },
        "doseNumberString": {
          "description": "Recommended dose number within series",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "forecastReason": {
          "description": "Vaccine administration status reason",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "forecastStatus": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "series": {
          "description": "Name of vaccination series",
          "type": "string"
        },
        "seriesDosesPositiveInt": {
          "format": "int32",
          "description": "Recommended number of doses for immunity",
          "type": "integer"
        },
        "seriesDosesString": {
          "description": "Recommended number of doses for immunity",
          "type": "string"
        },
        "supportingImmunization": {
          "description": "Past immunizations supporting recommendation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "supportingPatientInformation": {
          "description": "Patient observations supporting recommendation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "targetDisease": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "vaccineCode": {
          "description": "Vaccine  or vaccine group recommendation applies to",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        }
      }
    },
    "ImmunizationRecommendation": {
      "description": "Guidance or advice relating to an immunization",
      "pattern": "ImmunizationRecommendation",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "authority": {
          "$ref": "#/definitions/Reference"
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "date": {
          "description": "Date recommendation(s) created",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Business identifier",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "patient": {
          "$ref": "#/definitions/Reference"
        },
        "recommendation": {
          "description": "Vaccine administration recommendations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImmunizationRecommendationRecommendationComponent"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "ImplementationGuideGroupingComponent": {
      "description": "Grouping used to present related resources in the IG",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "description": {
          "description": "Human readable text describing the package",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Descriptive name for the package",
          "type": "string"
        }
      }
    },
    "ImplementationGuidePageComponent": {
      "description": "Page/Section in the Guide",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "generation": {
          "description": "html | markdown | xml | generated",
          "type": "string"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "nameUrl": {
          "description": "Where to find that page",
          "type": "string"
        },
        "nameReference": {
          "$ref": "#/definitions/Reference"
        },
        "page": {
          "description": "Nested Pages / Sections",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImplementationGuidePageComponent"
          }
        },
        "title": {
          "description": "Short title shown for navigational assistance",
          "type": "string"
        }
      }
    },
    "ImplementationGuideParameterComponent": {
      "description": "Defines how IG is built by tools",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "code": {
          "description": "apply | path-resource | path-pages | path-tx-cache | expansion-parameter | rule-broken-links | generate-xml | generate-json | generate-turtle | html-template",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "value": {
          "description": "Value for named type",
          "type": "string"
        }
      }
    },
    "ImplementationGuideResourceComponent": {
      "description": "Resource in the implementation guide",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "description": {
          "description": "Reason why included in guide",
          "type": "string"
        },
        "exampleBoolean": {
          "description": "Is an example/What is this an example of?",
          "type": "boolean"
        },
        "exampleCanonical": {
          "description": "Is an example/What is this an example of?",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "fhirVersion": {
          "description": "Versions this applies to (if different to IG)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groupingId": {
          "description": "Grouping this is part of",
          "type": "string"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Human Name for the resource",
          "type": "string"
        },
        "reference": {
          "$ref": "#/definitions/Reference"
        }
      }
    },
    "ImplementationGuideTemplateComponent": {
      "description": "A template for building resources",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "code": {
          "description": "Type of template specified",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "scope": {
          "description": "The scope in which the template applies",
          "type": "string"
        },
        "source": {
          "description": "The source location for the template",
          "type": "string"
        }
      }
    },
    "ImplementationGuideDefinitionComponent": {
      "description": "Information needed to build the IG",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "grouping": {
          "description": "Grouping used to present related resources in the IG",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImplementationGuideGroupingComponent"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "page": {
          "$ref": "#/definitions/ImplementationGuidePageComponent"
        },
        "parameter": {
          "description": "Defines how IG is built by tools",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImplementationGuideParameterComponent"
          }
        },
        "resource": {
          "description": "Resource in the implementation guide",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImplementationGuideResourceComponent"
          }
        },
        "template": {
          "description": "A template for building resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImplementationGuideTemplateComponent"
          }
        }
      }
    },
    "ImplementationGuideDependsOnComponent": {
      "description": "Another Implementation guide this depends on",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "packageId": {
          "description": "NPM Package name for IG this depends on",
          "type": "string"
        },
        "uri": {
          "description": "Identity of the IG that this depends on",
          "type": "string"
        },
        "version": {
          "description": "Version of the IG",
          "type": "string"
        }
      }
    },
    "ImplementationGuideGlobalComponent": {
      "description": "Profiles that apply globally",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "profile": {
          "description": "Profile that all resources must conform to",
          "type": "string"
        },
        "type": {
          "description": "Type this profile applies to",
          "type": "string"
        }
      }
    },
    "ImplementationGuideManifestPageComponent": {
      "description": "HTML page within the parent IG",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "anchor": {
          "description": "Anchor available on the page",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "HTML page name",
          "type": "string"
        },
        "title": {
          "description": "Title of the page, for references",
          "type": "string"
        }
      }
    },
    "ImplementationGuideManifestResourceComponent": {
      "description": "Resource in the implementation guide",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "exampleBoolean": {
          "description": "Is an example/What is this an example of?",
          "type": "boolean"
        },
        "exampleCanonical": {
          "description": "Is an example/What is this an example of?",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "reference": {
          "$ref": "#/definitions/Reference"
        },
        "relativePath": {
          "description": "Relative path for page in IG",
          "type": "string"
        }
      }
    },
    "ImplementationGuideManifestComponent": {
      "description": "Information about an assembled IG",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "image": {
          "description": "Image within the IG",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "other": {
          "description": "Additional linkable file in IG",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "page": {
          "description": "HTML page within the parent IG",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImplementationGuideManifestPageComponent"
          }
        },
        "rendering": {
          "description": "Location of rendered implementation guide",
          "type": "string"
        },
        "resource": {
          "description": "Resource in the implementation guide",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImplementationGuideManifestResourceComponent"
          }
        }
      }
    },
    "ImplementationGuide": {
      "description": "A set of rules about how FHIR is used",
      "pattern": "ImplementationGuide",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "contact": {
          "description": "Contact details for the publisher",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "copyright": {
          "description": "Use and/or publishing restrictions",
          "type": "string"
        },
        "date": {
          "description": "Date last changed",
          "type": "string"
        },
        "definition": {
          "$ref": "#/definitions/ImplementationGuideDefinitionComponent"
        },
        "dependsOn": {
          "description": "Another Implementation guide this depends on",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImplementationGuideDependsOnComponent"
          }
        },
        "description": {
          "description": "Natural language description of the implementation guide",
          "type": "string"
        },
        "experimental": {
          "description": "For testing purposes, not real usage",
          "type": "boolean"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "fhirVersion": {
          "description": "FHIR Version(s) this Implementation Guide targets",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "global": {
          "description": "Profiles that apply globally",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImplementationGuideGlobalComponent"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "jurisdiction": {
          "description": "Intended jurisdiction for implementation guide (if applicable)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "license": {
          "description": "SPDX license code for this IG (or not-open-source)",
          "type": "string"
        },
        "manifest": {
          "$ref": "#/definitions/ImplementationGuideManifestComponent"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Name for this implementation guide (computer friendly)",
          "type": "string"
        },
        "packageId": {
          "description": "NPM Package name for IG",
          "type": "string"
        },
        "publisher": {
          "description": "Name of the publisher (organization or individual)",
          "type": "string"
        },
        "status": {
          "description": "draft | active | retired | unknown",
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "title": {
          "description": "Name for this implementation guide (human friendly)",
          "type": "string"
        },
        "url": {
          "description": "Canonical identifier for this implementation guide, represented as a URI (globally unique)",
          "type": "string"
        },
        "useContext": {
          "description": "The context that the content is intended to support",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UsageContext"
          }
        },
        "version": {
          "description": "Business version of the implementation guide",
          "type": "string"
        }
      }
    },
    "InsurancePlanContactComponent": {
      "description": "Contact for the product",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "address": {
          "$ref": "#/definitions/Address"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "$ref": "#/definitions/HumanName"
        },
        "purpose": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "telecom": {
          "description": "Contact details (telephone, email, etc.)  for a contact",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactPoint"
          }
        }
      }
    },
    "InsurancePlanLimitComponent": {
      "description": "Benefit limits",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "code": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "value": {
          "$ref": "#/definitions/Quantity"
        }
      }
    },
    "InsurancePlanCoverageBenefitComponent": {
      "description": "List of benefits",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "limit": {
          "description": "Benefit limits",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InsurancePlanLimitComponent"
          }
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "requirement": {
          "description": "Referral requirements",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "InsurancePlanCoverageComponent": {
      "description": "Coverage details",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "benefit": {
          "description": "List of benefits",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InsurancePlanCoverageBenefitComponent"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "network": {
          "description": "What networks provide coverage",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "InsurancePlanGeneralCostComponent": {
      "description": "Overall costs",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "comment": {
          "description": "Additional cost information",
          "type": "string"
        },
        "cost": {
          "$ref": "#/definitions/Money"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "groupSize": {
          "format": "int32",
          "description": "Number of enrollees",
          "type": "integer"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "InsurancePlanCostComponent": {
      "description": "List of the costs",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "applicability": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "qualifiers": {
          "description": "Additional information about the cost",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "value": {
          "$ref": "#/definitions/Quantity"
        }
      }
    },
    "InsurancePlanPlanBenefitComponent": {
      "description": "Benefits list",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "cost": {
          "description": "List of the costs",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InsurancePlanCostComponent"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "InsurancePlanSpecificCostComponent": {
      "description": "Specific costs",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "benefit": {
          "description": "Benefits list",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InsurancePlanPlanBenefitComponent"
          }
        },
        "category": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "InsurancePlanPlanComponent": {
      "description": "Plan details",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "coverageArea": {
          "description": "Where product applies",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "generalCost": {
          "description": "Overall costs",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InsurancePlanGeneralCostComponent"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "identifier": {
          "description": "Business Identifier for Product",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "network": {
          "description": "What networks provide coverage",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "specificCost": {
          "description": "Specific costs",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InsurancePlanSpecificCostComponent"
          }
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "InsurancePlan": {
      "description": "Details of a Health Insurance product/plan provided by an organization",
      "pattern": "InsurancePlan",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "administeredBy": {
          "$ref": "#/definitions/Reference"
        },
        "alias": {
          "description": "Alternate names",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "contact": {
          "description": "Contact for the product",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InsurancePlanContactComponent"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "coverage": {
          "description": "Coverage details",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InsurancePlanCoverageComponent"
          }
        },
        "coverageArea": {
          "description": "Where product applies",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "endpoint": {
          "description": "Technical endpoint",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Business Identifier for Product",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Official name",
          "type": "string"
        },
        "network": {
          "description": "What networks are Included",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "ownedBy": {
          "$ref": "#/definitions/Reference"
        },
        "period": {
          "$ref": "#/definitions/Period"
        },
        "plan": {
          "description": "Plan details",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InsurancePlanPlanComponent"
          }
        },
        "status": {
          "description": "draft | active | retired | unknown",
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "type": {
          "description": "Kind of product",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        }
      }
    },
    "InvoicePriceComponentComponent": {
      "description": "Components of total line item price",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Money"
        },
        "code": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "factor": {
          "format": "double",
          "description": "Factor used for calculating this component",
          "type": "number"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "type": {
          "description": "base | surcharge | deduction | discount | tax | informational",
          "type": "string"
        }
      }
    },
    "InvoiceLineItemComponent": {
      "description": "Line items of this Invoice",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "chargeItemReference": {
          "$ref": "#/definitions/Reference"
        },
        "chargeItemCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "priceComponent": {
          "description": "Components of total line item price",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InvoicePriceComponentComponent"
          }
        },
        "sequence": {
          "format": "int32",
          "description": "Sequence number of line item",
          "type": "integer"
        }
      }
    },
    "InvoiceParticipantComponent": {
      "description": "Participant in creation of this Invoice",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "actor": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "role": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "Invoice": {
      "description": "Invoice containing ChargeItems from an Account",
      "pattern": "Invoice",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "account": {
          "$ref": "#/definitions/Reference"
        },
        "cancelledReason": {
          "description": "Reason for cancellation of this Invoice",
          "type": "string"
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "date": {
          "description": "Invoice date / posting date",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Business Identifier for item",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "issuer": {
          "$ref": "#/definitions/Reference"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "lineItem": {
          "description": "Line items of this Invoice",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InvoiceLineItemComponent"
          }
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "note": {
          "description": "Comments made about the invoice",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "participant": {
          "description": "Participant in creation of this Invoice",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InvoiceParticipantComponent"
          }
        },
        "paymentTerms": {
          "description": "Payment details",
          "type": "string"
        },
        "recipient": {
          "$ref": "#/definitions/Reference"
        },
        "status": {
          "description": "draft | issued | balanced | cancelled | entered-in-error",
          "type": "string"
        },
        "subject": {
          "$ref": "#/definitions/Reference"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "totalGross": {
          "$ref": "#/definitions/Money"
        },
        "totalNet": {
          "$ref": "#/definitions/Money"
        },
        "totalPriceComponent": {
          "description": "Components of Invoice total",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InvoicePriceComponentComponent"
          }
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "Library": {
      "description": "Represents a library of quality improvement components",
      "pattern": "Library",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "approvalDate": {
          "description": "When the library was approved by publisher",
          "type": "string"
        },
        "author": {
          "description": "Who authored the content",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "contact": {
          "description": "Contact details for the publisher",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "content": {
          "description": "Contents of the library, either embedded or referenced",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Attachment"
          }
        },
        "copyright": {
          "description": "Use and/or publishing restrictions",
          "type": "string"
        },
        "dataRequirement": {
          "description": "What data is referenced by this library",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataRequirement"
          }
        },
        "date": {
          "description": "Date last changed",
          "type": "string"
        },
        "description": {
          "description": "Natural language description of the library",
          "type": "string"
        },
        "editor": {
          "description": "Who edited the content",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "effectivePeriod": {
          "$ref": "#/definitions/Period"
        },
        "endorser": {
          "description": "Who endorsed the content",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "experimental": {
          "description": "For testing purposes, not real usage",
          "type": "boolean"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Additional identifier for the library",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "jurisdiction": {
          "description": "Intended jurisdiction for library (if applicable)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "lastReviewDate": {
          "description": "When the library was last reviewed",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Name for this library (computer friendly)",
          "type": "string"
        },
        "parameter": {
          "description": "Parameters defined by the library",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParameterDefinition"
          }
        },
        "publisher": {
          "description": "Name of the publisher (organization or individual)",
          "type": "string"
        },
        "purpose": {
          "description": "Why this library is defined",
          "type": "string"
        },
        "relatedArtifact": {
          "description": "Additional documentation, citations, etc.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedArtifact"
          }
        },
        "reviewer": {
          "description": "Who reviewed the content",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "status": {
          "description": "draft | active | retired | unknown",
          "type": "string"
        },
        "subjectCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "subjectReference": {
          "$ref": "#/definitions/Reference"
        },
        "subtitle": {
          "description": "Subordinate title of the library",
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "title": {
          "description": "Name for this library (human friendly)",
          "type": "string"
        },
        "topic": {
          "description": "E.g. Education, Treatment, Assessment, etc.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "url": {
          "description": "Canonical identifier for this library, represented as a URI (globally unique)",
          "type": "string"
        },
        "usage": {
          "description": "Describes the clinical usage of the library",
          "type": "string"
        },
        "useContext": {
          "description": "The context that the content is intended to support",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UsageContext"
          }
        },
        "version": {
          "description": "Business version of the library",
          "type": "string"
        }
      }
    },
    "LinkageItemComponent": {
      "description": "Item to be linked",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "resource": {
          "$ref": "#/definitions/Reference"
        },
        "type": {
          "description": "source | alternate | historical",
          "type": "string"
        }
      }
    },
    "Linkage": {
      "description": "Links records for 'same' item",
      "pattern": "Linkage",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "active": {
          "description": "Whether this linkage assertion is active or not",
          "type": "boolean"
        },
        "author": {
          "$ref": "#/definitions/Reference"
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "item": {
          "description": "Item to be linked",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LinkageItemComponent"
          }
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "ListEntryComponent": {
      "description": "Entries in the list",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "date": {
          "description": "When item added to list",
          "type": "string"
        },
        "deleted": {
          "description": "If this item is actually marked as deleted",
          "type": "boolean"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "flag": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "item": {
          "$ref": "#/definitions/Reference"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "List": {
      "description": "A list is a curated collection of resources",
      "pattern": "List",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "code": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "date": {
          "description": "When the list was prepared",
          "type": "string"
        },
        "emptyReason": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "encounter": {
          "$ref": "#/definitions/Reference"
        },
        "entry": {
          "description": "Entries in the list",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ListEntryComponent"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Business identifier",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "mode": {
          "description": "working | snapshot | changes",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "note": {
          "description": "Comments about the list",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "orderedBy": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "source": {
          "$ref": "#/definitions/Reference"
        },
        "status": {
          "description": "current | retired | entered-in-error",
          "type": "string"
        },
        "subject": {
          "$ref": "#/definitions/Reference"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "title": {
          "description": "Descriptive name for the list",
          "type": "string"
        }
      }
    },
    "LocationHoursOfOperationComponent": {
      "description": "What days/times during a week is this location usually open",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "allDay": {
          "description": "The Location is open all day",
          "type": "boolean"
        },
        "closingTime": {
          "description": "Time that the Location closes",
          "type": "string"
        },
        "daysOfWeek": {
          "description": "mon | tue | wed | thu | fri | sat | sun",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "openingTime": {
          "description": "Time that the Location opens",
          "type": "string"
        }
      }
    },
    "LocationPositionComponent": {
      "description": "The absolute geographic location",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "altitude": {
          "format": "double",
          "description": "Altitude with WGS84 datum",
          "type": "number"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "latitude": {
          "format": "double",
          "description": "Latitude with WGS84 datum",
          "type": "number"
        },
        "longitude": {
          "format": "double",
          "description": "Longitude with WGS84 datum",
          "type": "number"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "Location": {
      "description": "Details and position information for a physical place",
      "pattern": "Location",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "address": {
          "$ref": "#/definitions/Address"
        },
        "alias": {
          "description": "A list of alternate names that the location is known as, or was known as, in the past",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "availabilityExceptions": {
          "description": "Description of availability exceptions",
          "type": "string"
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "description": {
          "description": "Additional details about the location that could be displayed as further information to identify the location beyond its name",
          "type": "string"
        },
        "endpoint": {
          "description": "Technical endpoints providing access to services operated for the location",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "hoursOfOperation": {
          "description": "What days/times during a week is this location usually open",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LocationHoursOfOperationComponent"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Unique code or number identifying the location to its users",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "managingOrganization": {
          "$ref": "#/definitions/Reference"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "mode": {
          "description": "instance | kind",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Name of the location as used by humans",
          "type": "string"
        },
        "operationalStatus": {
          "$ref": "#/definitions/Coding"
        },
        "partOf": {
          "$ref": "#/definitions/Reference"
        },
        "physicalType": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "position": {
          "$ref": "#/definitions/LocationPositionComponent"
        },
        "status": {
          "description": "active | suspended | inactive",
          "type": "string"
        },
        "telecom": {
          "description": "Contact details of the location",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactPoint"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "type": {
          "description": "Type of function performed",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        }
      }
    },
    "MeasurePopulationComponent": {
      "description": "Population criteria",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "code": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "criteria": {
          "$ref": "#/definitions/Expression"
        },
        "description": {
          "description": "The human readable description of this population criteria",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "MeasureComponentComponent": {
      "description": "Stratifier criteria component for the measure",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "code": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "criteria": {
          "$ref": "#/definitions/Expression"
        },
        "description": {
          "description": "The human readable description of this stratifier component",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "MeasureStratifierComponent": {
      "description": "Stratifier criteria for the measure",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "code": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "component": {
          "description": "Stratifier criteria component for the measure",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MeasureComponentComponent"
          }
        },
        "criteria": {
          "$ref": "#/definitions/Expression"
        },
        "description": {
          "description": "The human readable description of this stratifier",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "MeasureGroupComponent": {
      "description": "Population criteria group",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "code": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "description": {
          "description": "Summary description",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "population": {
          "description": "Population criteria",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MeasurePopulationComponent"
          }
        },
        "stratifier": {
          "description": "Stratifier criteria for the measure",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MeasureStratifierComponent"
          }
        }
      }
    },
    "MeasureSupplementalDataComponent": {
      "description": "What other data should be reported with the measure",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "code": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "criteria": {
          "$ref": "#/definitions/Expression"
        },
        "description": {
          "description": "The human readable description of this supplemental data",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "usage": {
          "description": "supplemental-data | risk-adjustment-factor",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        }
      }
    },
    "Measure": {
      "description": "A quality measure definition",
      "pattern": "Measure",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "approvalDate": {
          "description": "When the measure was approved by publisher",
          "type": "string"
        },
        "author": {
          "description": "Who authored the content",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "clinicalRecommendationStatement": {
          "description": "Summary of clinical guidelines",
          "type": "string"
        },
        "compositeScoring": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "contact": {
          "description": "Contact details for the publisher",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "copyright": {
          "description": "Use and/or publishing restrictions",
          "type": "string"
        },
        "date": {
          "description": "Date last changed",
          "type": "string"
        },
        "definition": {
          "description": "Defined terms used in the measure documentation",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "description": "Natural language description of the measure",
          "type": "string"
        },
        "disclaimer": {
          "description": "Disclaimer for use of the measure or its referenced content",
          "type": "string"
        },
        "editor": {
          "description": "Who edited the content",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "effectivePeriod": {
          "$ref": "#/definitions/Period"
        },
        "endorser": {
          "description": "Who endorsed the content",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "experimental": {
          "description": "For testing purposes, not real usage",
          "type": "boolean"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "group": {
          "description": "Population criteria group",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MeasureGroupComponent"
          }
        },
        "guidance": {
          "description": "Additional guidance for implementers",
          "type": "string"
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Additional identifier for the measure",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "improvementNotation": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "jurisdiction": {
          "description": "Intended jurisdiction for measure (if applicable)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "lastReviewDate": {
          "description": "When the measure was last reviewed",
          "type": "string"
        },
        "library": {
          "description": "Logic used by the measure",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Name for this measure (computer friendly)",
          "type": "string"
        },
        "publisher": {
          "description": "Name of the publisher (organization or individual)",
          "type": "string"
        },
        "purpose": {
          "description": "Why this measure is defined",
          "type": "string"
        },
        "rateAggregation": {
          "description": "How is rate aggregation performed for this measure",
          "type": "string"
        },
        "rationale": {
          "description": "Detailed description of why the measure exists",
          "type": "string"
        },
        "relatedArtifact": {
          "description": "Additional documentation, citations, etc.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedArtifact"
          }
        },
        "reviewer": {
          "description": "Who reviewed the content",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "riskAdjustment": {
          "description": "How risk adjustment is applied for this measure",
          "type": "string"
        },
        "scoring": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "status": {
          "description": "draft | active | retired | unknown",
          "type": "string"
        },
        "subjectCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "subjectReference": {
          "$ref": "#/definitions/Reference"
        },
        "subtitle": {
          "description": "Subordinate title of the measure",
          "type": "string"
        },
        "supplementalData": {
          "description": "What other data should be reported with the measure",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MeasureSupplementalDataComponent"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "title": {
          "description": "Name for this measure (human friendly)",
          "type": "string"
        },
        "topic": {
          "description": "The category of the measure, such as Education, Treatment, Assessment, etc.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "type": {
          "description": "process | outcome | structure | patient-reported-outcome | composite",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "url": {
          "description": "Canonical identifier for this measure, represented as a URI (globally unique)",
          "type": "string"
        },
        "usage": {
          "description": "Describes the clinical usage of the measure",
          "type": "string"
        },
        "useContext": {
          "description": "The context that the content is intended to support",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UsageContext"
          }
        },
        "version": {
          "description": "Business version of the measure",
          "type": "string"
        }
      }
    },
    "MeasureReportPopulationComponent": {
      "description": "The populations in the group",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "code": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "count": {
          "format": "int32",
          "description": "Size of the population",
          "type": "integer"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "subjectResults": {
          "$ref": "#/definitions/Reference"
        }
      }
    },
    "MeasureReportComponentComponent": {
      "description": "Stratifier component values",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "code": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "value": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "MeasureReportStratifierGroupPopulationComponent": {
      "description": "Population results in this stratum",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "code": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "count": {
          "format": "int32",
          "description": "Size of the population",
          "type": "integer"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "subjectResults": {
          "$ref": "#/definitions/Reference"
        }
      }
    },
    "MeasureReportStratifierGroupComponent": {
      "description": "Stratum results, one for each unique value, or set of values, in the stratifier, or stratifier components",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "component": {
          "description": "Stratifier component values",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MeasureReportComponentComponent"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "measureScore": {
          "$ref": "#/definitions/Quantity"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "population": {
          "description": "Population results in this stratum",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MeasureReportStratifierGroupPopulationComponent"
          }
        },
        "value": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "MeasureReportStratifierComponent": {
      "description": "Stratification results",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "code": {
          "description": "What stratifier of the group",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "stratum": {
          "description": "Stratum results, one for each unique value, or set of values, in the stratifier, or stratifier components",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MeasureReportStratifierGroupComponent"
          }
        }
      }
    },
    "MeasureReportGroupComponent": {
      "description": "Measure results for each group",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "code": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "measureScore": {
          "$ref": "#/definitions/Quantity"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "population": {
          "description": "The populations in the group",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MeasureReportPopulationComponent"
          }
        },
        "stratifier": {
          "description": "Stratification results",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MeasureReportStratifierComponent"
          }
        }
      }
    },
    "MeasureReport": {
      "description": "Results of a measure evaluation",
      "pattern": "MeasureReport",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "date": {
          "description": "When the report was generated",
          "type": "string"
        },
        "evaluatedResource": {
          "description": "What data was used to calculate the measure score",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "group": {
          "description": "Measure results for each group",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MeasureReportGroupComponent"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Additional identifier for the MeasureReport",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "improvementNotation": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "measure": {
          "description": "What measure was calculated",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "period": {
          "$ref": "#/definitions/Period"
        },
        "reporter": {
          "$ref": "#/definitions/Reference"
        },
        "status": {
          "description": "complete | pending | error",
          "type": "string"
        },
        "subject": {
          "$ref": "#/definitions/Reference"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "type": {
          "description": "individual | subject-list | summary | data-collection",
          "type": "string"
        }
      }
    },
    "Media": {
      "description": "A photo, video, or audio recording acquired or used in healthcare. The actual content may be inline or provided by direct reference",
      "pattern": "Media",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "basedOn": {
          "description": "Procedure that caused this media to be created",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "bodySite": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "content": {
          "$ref": "#/definitions/Attachment"
        },
        "createdDateTime": {
          "description": "When Media was collected",
          "type": "string"
        },
        "createdPeriod": {
          "$ref": "#/definitions/Period"
        },
        "device": {
          "$ref": "#/definitions/Reference"
        },
        "deviceName": {
          "description": "Name of the device/manufacturer",
          "type": "string"
        },
        "duration": {
          "format": "double",
          "description": "Length in seconds (audio / video)",
          "type": "number"
        },
        "encounter": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "frames": {
          "format": "int32",
          "description": "Number of frames if > 1 (photo)",
          "type": "integer"
        },
        "height": {
          "format": "int32",
          "description": "Height of the image in pixels (photo/video)",
          "type": "integer"
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Identifier(s) for the image",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "issued": {
          "description": "Date/Time this version was made available",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modality": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "note": {
          "description": "Comments made about the media",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "operator": {
          "$ref": "#/definitions/Reference"
        },
        "partOf": {
          "description": "Part of referenced event",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "reasonCode": {
          "description": "Why was event performed?",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "status": {
          "description": "preparation | in-progress | not-done | on-hold | stopped | completed | entered-in-error | unknown",
          "type": "string"
        },
        "subject": {
          "$ref": "#/definitions/Reference"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "view": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "width": {
          "format": "int32",
          "description": "Width of the image in pixels (photo/video)",
          "type": "integer"
        }
      }
    },
    "MedicationBatchComponent": {
      "description": "Details about packaged medications",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "expirationDate": {
          "description": "When batch will expire",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "lotNumber": {
          "description": "Identifier assigned to batch",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "MedicationIngredientComponent": {
      "description": "Active or inactive ingredient",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "isActive": {
          "description": "Active ingredient indicator",
          "type": "boolean"
        },
        "itemCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "itemReference": {
          "$ref": "#/definitions/Reference"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "strength": {
          "$ref": "#/definitions/Ratio"
        }
      }
    },
    "Medication": {
      "description": "Definition of a Medication",
      "pattern": "Medication",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Ratio"
        },
        "batch": {
          "$ref": "#/definitions/MedicationBatchComponent"
        },
        "code": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "form": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Business identifier for this medication",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "ingredient": {
          "description": "Active or inactive ingredient",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MedicationIngredientComponent"
          }
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "manufacturer": {
          "$ref": "#/definitions/Reference"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "status": {
          "description": "active | inactive | entered-in-error",
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "MedicationAdministrationDosageComponent": {
      "description": "Details of how medication was taken",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "dose": {
          "$ref": "#/definitions/Quantity"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "method": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "rateRatio": {
          "$ref": "#/definitions/Ratio"
        },
        "rateQuantity": {
          "$ref": "#/definitions/Quantity"
        },
        "route": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "site": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "text": {
          "description": "Free text dosage instructions e.g. SIG",
          "type": "string"
        }
      }
    },
    "MedicationAdministrationPerformerComponent": {
      "description": "Who performed the medication administration and what they did",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "actor": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "function": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "MedicationAdministration": {
      "description": "Administration of medication to a patient",
      "pattern": "MedicationAdministration",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "category": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "context": {
          "$ref": "#/definitions/Reference"
        },
        "device": {
          "description": "Device used to administer",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "dosage": {
          "$ref": "#/definitions/MedicationAdministrationDosageComponent"
        },
        "effectiveDateTime": {
          "description": "Start and end time of administration",
          "type": "string"
        },
        "effectivePeriod": {
          "$ref": "#/definitions/Period"
        },
        "eventHistory": {
          "description": "A list of events of interest in the lifecycle",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "External identifier",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "instantiates": {
          "description": "Instantiates protocol or definition",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "medicationCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "medicationReference": {
          "$ref": "#/definitions/Reference"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "note": {
          "description": "Information about the administration",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "partOf": {
          "description": "Part of referenced event",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "performer": {
          "description": "Who performed the medication administration and what they did",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MedicationAdministrationPerformerComponent"
          }
        },
        "reasonCode": {
          "description": "Reason administration performed",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "reasonReference": {
          "description": "Condition or observation that supports why the medication was administered",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "request": {
          "$ref": "#/definitions/Reference"
        },
        "status": {
          "description": "in-progress | not-done | on-hold | completed | entered-in-error | stopped | unknown",
          "type": "string"
        },
        "statusReason": {
          "description": "Reason administration not performed",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "subject": {
          "$ref": "#/definitions/Reference"
        },
        "supportingInformation": {
          "description": "Additional information to support administration",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "MedicationDispensePerformerComponent": {
      "description": "Who performed event",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "actor": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "function": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "MedicationDispenseSubstitutionComponent": {
      "description": "Whether a substitution was performed on the dispense",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "reason": {
          "description": "Why was substitution made",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "responsibleParty": {
          "description": "Who is responsible for the substitution",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "wasSubstituted": {
          "description": "Whether a substitution was or was not performed on the dispense",
          "type": "boolean"
        }
      }
    },
    "MedicationDispense": {
      "description": "Dispensing a medication to a named patient",
      "pattern": "MedicationDispense",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "authorizingPrescription": {
          "description": "Medication order that authorizes the dispense",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "category": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "context": {
          "$ref": "#/definitions/Reference"
        },
        "daysSupply": {
          "$ref": "#/definitions/Quantity"
        },
        "destination": {
          "$ref": "#/definitions/Reference"
        },
        "detectedIssue": {
          "description": "Clinical issue with action",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "dosageInstruction": {
          "description": "How the medication is to be used by the patient or administered by the caregiver",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Dosage"
          }
        },
        "eventHistory": {
          "description": "A list of relevant lifecycle events",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "External identifier",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/Reference"
        },
        "medicationCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "medicationReference": {
          "$ref": "#/definitions/Reference"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "note": {
          "description": "Information about the dispense",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "partOf": {
          "description": "Event that dispense is part of",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "performer": {
          "description": "Who performed event",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MedicationDispensePerformerComponent"
          }
        },
        "quantity": {
          "$ref": "#/definitions/Quantity"
        },
        "receiver": {
          "description": "Who collected the medication",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "status": {
          "description": "preparation | in-progress | cancelled | on-hold | completed | entered-in-error | stopped | declined | unknown",
          "type": "string"
        },
        "statusReasonCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "statusReasonReference": {
          "$ref": "#/definitions/Reference"
        },
        "subject": {
          "$ref": "#/definitions/Reference"
        },
        "substitution": {
          "$ref": "#/definitions/MedicationDispenseSubstitutionComponent"
        },
        "supportingInformation": {
          "description": "Information that supports the dispensing of the medication",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "whenHandedOver": {
          "description": "When product was given out",
          "type": "string"
        },
        "whenPrepared": {
          "description": "When product was packaged and reviewed",
          "type": "string"
        }
      }
    },
    "MedicationKnowledgeDosageComponent": {
      "description": "Dosage for the medication for the specific guidelines",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "dosage": {
          "description": "Dosage for the medication for the specific guidelines",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Dosage"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "MedicationKnowledgePatientCharacteristicsComponent": {
      "description": "Characteristics of the patient that are relevant to the administration guidelines",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "characteristicCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "characteristicQuantity": {
          "$ref": "#/definitions/Quantity"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "value": {
          "description": "The specific characteristic",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "MedicationKnowledgeAdministrationGuidelinesComponent": {
      "description": "Guidelines for administration of the medication",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "dosage": {
          "description": "Dosage for the medication for the specific guidelines",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MedicationKnowledgeDosageComponent"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "indicationCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "indicationReference": {
          "$ref": "#/definitions/Reference"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "patientCharacteristics": {
          "description": "Characteristics of the patient that are relevant to the administration guidelines",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MedicationKnowledgePatientCharacteristicsComponent"
          }
        }
      }
    },
    "MedicationKnowledgeCostComponent": {
      "description": "The pricing of the medication",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "cost": {
          "$ref": "#/definitions/Money"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "source": {
          "description": "The source or owner for the price information",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "MedicationKnowledgeDrugCharacteristicComponent": {
      "description": "Specifies descriptive properties of the medicine",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueString": {
          "description": "Description of the characteristic",
          "type": "string"
        },
        "valueQuantity": {
          "$ref": "#/definitions/Quantity"
        },
        "valueBase64Binary": {
          "format": "byte",
          "description": "Description of the characteristic",
          "type": "string"
        }
      }
    },
    "MedicationKnowledgeIngredientComponent": {
      "description": "Active or inactive ingredient",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "isActive": {
          "description": "Active ingredient indicator",
          "type": "boolean"
        },
        "itemCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "itemReference": {
          "$ref": "#/definitions/Reference"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "strength": {
          "$ref": "#/definitions/Ratio"
        }
      }
    },
    "MedicationKnowledgeKineticsComponent": {
      "description": "The time course of drug absorption, distribution, metabolism and excretion of a medication from the body",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "areaUnderCurve": {
          "description": "The drug concentration measured at certain discrete points in time",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Quantity"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "halfLifePeriod": {
          "$ref": "#/definitions/Duration"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "lethalDose50": {
          "description": "The median lethal dose of a drug",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Quantity"
          }
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "MedicationKnowledgeMedicineClassificationComponent": {
      "description": "Categorization of the medication within a formulary or classification system",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "classification": {
          "description": "Specific category assigned to the medication",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "MedicationKnowledgeMonitoringProgramComponent": {
      "description": "Program under which a medication is reviewed",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Name of the reviewing program",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "MedicationKnowledgeMonographComponent": {
      "description": "Associated documentation about the medication",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "source": {
          "$ref": "#/definitions/Reference"
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "MedicationKnowledgePackagingComponent": {
      "description": "Details about packaged medications",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "quantity": {
          "$ref": "#/definitions/Quantity"
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "MedicationKnowledgeMaxDispenseComponent": {
      "description": "The maximum number of units of the medication that can be dispensed in a period",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "period": {
          "$ref": "#/definitions/Duration"
        },
        "quantity": {
          "$ref": "#/definitions/Quantity"
        }
      }
    },
    "MedicationKnowledgeScheduleComponent": {
      "description": "Specifies the schedule of a medication in jurisdiction",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "schedule": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "MedicationKnowledgeSubstitutionComponent": {
      "description": "Specifies if changes are allowed when dispensing a medication from a regulatory perspective",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "allowed": {
          "description": "Specifies if regulation allows for changes in the medication when dispensing",
          "type": "boolean"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "MedicationKnowledgeRegulatoryComponent": {
      "description": "Regulatory information about a medication",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "maxDispense": {
          "$ref": "#/definitions/MedicationKnowledgeMaxDispenseComponent"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "regulatoryAuthority": {
          "$ref": "#/definitions/Reference"
        },
        "schedule": {
          "description": "Specifies the schedule of a medication in jurisdiction",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MedicationKnowledgeScheduleComponent"
          }
        },
        "substitution": {
          "description": "Specifies if changes are allowed when dispensing a medication from a regulatory perspective",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MedicationKnowledgeSubstitutionComponent"
          }
        }
      }
    },
    "MedicationKnowledgeRelatedMedicationKnowledgeComponent": {
      "description": "Associated or related medication information",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "reference": {
          "description": "Associated documentation about the associated medication knowledge",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "MedicationKnowledge": {
      "description": "Definition of Medication Knowledge",
      "pattern": "MedicationKnowledge",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "administrationGuidelines": {
          "description": "Guidelines for administration of the medication",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MedicationKnowledgeAdministrationGuidelinesComponent"
          }
        },
        "amount": {
          "$ref": "#/definitions/Quantity"
        },
        "associatedMedication": {
          "description": "A medication resource that is associated with this medication",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "code": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "contraindication": {
          "description": "Potential clinical issue with or between medication(s)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "cost": {
          "description": "The pricing of the medication",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MedicationKnowledgeCostComponent"
          }
        },
        "doseForm": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "drugCharacteristic": {
          "description": "Specifies descriptive properties of the medicine",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MedicationKnowledgeDrugCharacteristicComponent"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "ingredient": {
          "description": "Active or inactive ingredient",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MedicationKnowledgeIngredientComponent"
          }
        },
        "intendedRoute": {
          "description": "The intended or approved route of administration",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "kinetics": {
          "description": "The time course of drug absorption, distribution, metabolism and excretion of a medication from the body",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MedicationKnowledgeKineticsComponent"
          }
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "manufacturer": {
          "$ref": "#/definitions/Reference"
        },
        "medicineClassification": {
          "description": "Categorization of the medication within a formulary or classification system",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MedicationKnowledgeMedicineClassificationComponent"
          }
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "monitoringProgram": {
          "description": "Program under which a medication is reviewed",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MedicationKnowledgeMonitoringProgramComponent"
          }
        },
        "monograph": {
          "description": "Associated documentation about the medication",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MedicationKnowledgeMonographComponent"
          }
        },
        "packaging": {
          "$ref": "#/definitions/MedicationKnowledgePackagingComponent"
        },
        "preparationInstruction": {
          "description": "The instructions for preparing the medication",
          "type": "string"
        },
        "productType": {
          "description": "Category of the medication or product",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "regulatory": {
          "description": "Regulatory information about a medication",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MedicationKnowledgeRegulatoryComponent"
          }
        },
        "relatedMedicationKnowledge": {
          "description": "Associated or related medication information",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MedicationKnowledgeRelatedMedicationKnowledgeComponent"
          }
        },
        "status": {
          "description": "active | inactive | entered-in-error",
          "type": "string"
        },
        "synonym": {
          "description": "Additional names for a medication",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "MedicationRequestInitialFillComponent": {
      "description": "First fill details",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "duration": {
          "$ref": "#/definitions/Duration"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "quantity": {
          "$ref": "#/definitions/Quantity"
        }
      }
    },
    "MedicationRequestDispenseRequestComponent": {
      "description": "Medication supply authorization",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "dispenseInterval": {
          "$ref": "#/definitions/Duration"
        },
        "expectedSupplyDuration": {
          "$ref": "#/definitions/Duration"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "initialFill": {
          "$ref": "#/definitions/MedicationRequestInitialFillComponent"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "numberOfRepeatsAllowed": {
          "format": "int32",
          "description": "Number of refills authorized",
          "type": "integer"
        },
        "performer": {
          "$ref": "#/definitions/Reference"
        },
        "quantity": {
          "$ref": "#/definitions/Quantity"
        },
        "validityPeriod": {
          "$ref": "#/definitions/Period"
        }
      }
    },
    "MedicationRequestSubstitutionComponent": {
      "description": "Any restrictions on medication substitution",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "allowedBoolean": {
          "description": "Whether substitution is allowed or not",
          "type": "boolean"
        },
        "allowedCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "reason": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "MedicationRequest": {
      "description": "Ordering of medication for patient or group",
      "pattern": "MedicationRequest",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "authoredOn": {
          "description": "When request was initially authored",
          "type": "string"
        },
        "basedOn": {
          "description": "What request fulfills",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "category": {
          "description": "Type of medication usage",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "courseOfTherapyType": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "detectedIssue": {
          "description": "Clinical Issue with action",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "dispenseRequest": {
          "$ref": "#/definitions/MedicationRequestDispenseRequestComponent"
        },
        "doNotPerform": {
          "description": "True if request is prohibiting action",
          "type": "boolean"
        },
        "dosageInstruction": {
          "description": "How the medication should be taken",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Dosage"
          }
        },
        "encounter": {
          "$ref": "#/definitions/Reference"
        },
        "eventHistory": {
          "description": "A list of events of interest in the lifecycle",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "groupIdentifier": {
          "$ref": "#/definitions/Identifier"
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "External ids for this request",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "instantiatesCanonical": {
          "description": "Instantiates FHIR protocol or definition",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "instantiatesUri": {
          "description": "Instantiates external protocol or definition",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "insurance": {
          "description": "Associated insurance coverage",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "intent": {
          "description": "proposal | plan | order | original-order | reflex-order | filler-order | instance-order | option",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "medicationCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "medicationReference": {
          "$ref": "#/definitions/Reference"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "note": {
          "description": "Information about the prescription",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "performer": {
          "$ref": "#/definitions/Reference"
        },
        "performerType": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "priority": {
          "description": "routine | urgent | asap | stat",
          "type": "string"
        },
        "priorPrescription": {
          "$ref": "#/definitions/Reference"
        },
        "reasonCode": {
          "description": "Reason or indication for ordering or not ordering the medication",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "reasonReference": {
          "description": "Condition or observation that supports why the prescription is being written",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "recorder": {
          "$ref": "#/definitions/Reference"
        },
        "reportedBoolean": {
          "description": "Reported rather than primary record",
          "type": "boolean"
        },
        "reportedReference": {
          "$ref": "#/definitions/Reference"
        },
        "requester": {
          "$ref": "#/definitions/Reference"
        },
        "status": {
          "description": "active | on-hold | cancelled | completed | entered-in-error | stopped | draft | unknown",
          "type": "string"
        },
        "statusReason": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "subject": {
          "$ref": "#/definitions/Reference"
        },
        "substitution": {
          "$ref": "#/definitions/MedicationRequestSubstitutionComponent"
        },
        "supportingInformation": {
          "description": "Information to support ordering of the medication",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "MedicationStatement": {
      "description": "Record of medication being taken by a patient",
      "pattern": "MedicationStatement",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "basedOn": {
          "description": "Fulfils plan, proposal or order",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "category": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "context": {
          "$ref": "#/definitions/Reference"
        },
        "dateAsserted": {
          "description": "When the statement was asserted?",
          "type": "string"
        },
        "derivedFrom": {
          "description": "Additional supporting information",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "dosage": {
          "description": "Details of how medication is/was taken or should be taken",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Dosage"
          }
        },
        "effectiveDateTime": {
          "description": "The date/time or interval when the medication is/was/will be taken",
          "type": "string"
        },
        "effectivePeriod": {
          "$ref": "#/definitions/Period"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "External identifier",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "informationSource": {
          "$ref": "#/definitions/Reference"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "medicationCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "medicationReference": {
          "$ref": "#/definitions/Reference"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "note": {
          "description": "Further information about the statement",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "partOf": {
          "description": "Part of referenced event",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "reasonCode": {
          "description": "Reason for why the medication is being/was taken",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "reasonReference": {
          "description": "Condition or observation that supports why the medication is being/was taken",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "status": {
          "description": "active | completed | entered-in-error | intended | stopped | on-hold | unknown | not-taken",
          "type": "string"
        },
        "statusReason": {
          "description": "Reason for current status",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "subject": {
          "$ref": "#/definitions/Reference"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "MedicinalProductManufacturingBusinessOperationComponent": {
      "description": "An operation applied to the product, for manufacturing or adminsitrative purpose",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "authorisationReferenceNumber": {
          "$ref": "#/definitions/Identifier"
        },
        "confidentialityIndicator": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "effectiveDate": {
          "description": "Regulatory authorization date",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "manufacturer": {
          "description": "The manufacturer or establishment associated with the process",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "operationType": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "regulator": {
          "$ref": "#/definitions/Reference"
        }
      }
    },
    "MedicinalProductCountryLanguageComponent": {
      "description": "Country where the name applies",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "country": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "jurisdiction": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "language": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "MedicinalProductNamePartComponent": {
      "description": "Coding words or phrases of the name",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "part": {
          "description": "A fragment of a product name",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/Coding"
        }
      }
    },
    "MedicinalProductNameComponent": {
      "description": "The product's name, including full name and possibly coded parts",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "countryLanguage": {
          "description": "Country where the name applies",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MedicinalProductCountryLanguageComponent"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "namePart": {
          "description": "Coding words or phrases of the name",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MedicinalProductNamePartComponent"
          }
        },
        "productName": {
          "description": "The full product name",
          "type": "string"
        }
      }
    },
    "MedicinalProductSpecialDesignationComponent": {
      "description": "Indicates if the medicinal product has an orphan designation for the treatment of a rare disease",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "date": {
          "description": "Date when the designation was granted",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "identifier": {
          "description": "Identifier for the designation, or procedure number",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "indicationCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "indicationReference": {
          "$ref": "#/definitions/Reference"
        },
        "intendedUse": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "species": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "status": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "MedicinalProduct": {
      "description": "Detailed definition of a medicinal product, typically for uses other than direct patient care (e.g. regulatory use)",
      "pattern": "MedicinalProduct",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "additionalMonitoringIndicator": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "attachedDocument": {
          "description": "Supporting documentation, typically for regulatory submission",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "clinicalTrial": {
          "description": "Clinical trials or studies that this product is involved in",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "combinedPharmaceuticalDoseForm": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "contact": {
          "description": "A product specific contact, person (in a role), or an organization",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "crossReference": {
          "description": "Reference to another product, e.g. for linking authorised to investigational product",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "domain": {
          "$ref": "#/definitions/Coding"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Business identifier for this product. Could be an MPID",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "legalStatusOfSupply": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "manufacturingBusinessOperation": {
          "description": "An operation applied to the product, for manufacturing or adminsitrative purpose",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MedicinalProductManufacturingBusinessOperationComponent"
          }
        },
        "marketingStatus": {
          "description": "Marketing status of the medicinal product, in contrast to marketing authorizaton",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MarketingStatus"
          }
        },
        "masterFile": {
          "description": "A master file for to the medicinal product (e.g. Pharmacovigilance System Master File)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "The product's name, including full name and possibly coded parts",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MedicinalProductNameComponent"
          }
        },
        "packagedMedicinalProduct": {
          "description": "Package representation for the product",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "paediatricUseIndicator": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "pharmaceuticalProduct": {
          "description": "Pharmaceutical aspects of product",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "productClassification": {
          "description": "Allows the product to be classified by various systems",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "specialDesignation": {
          "description": "Indicates if the medicinal product has an orphan designation for the treatment of a rare disease",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MedicinalProductSpecialDesignationComponent"
          }
        },
        "specialMeasures": {
          "description": "Whether the Medicinal Product is subject to special measures for regulatory reasons",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "MedicinalProductAuthorizationJurisdictionalAuthorizationComponent": {
      "description": "Authorization in areas within a country",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "country": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "identifier": {
          "description": "The assigned number for the marketing authorization",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "jurisdiction": {
          "description": "Jurisdiction within a country",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "legalStatusOfSupply": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "validityPeriod": {
          "$ref": "#/definitions/Period"
        }
      }
    },
    "MedicinalProductAuthorizationProcedureComponent": {
      "description": "The regulatory procedure for granting or amending a marketing authorization",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "application": {
          "description": "Applcations submitted to obtain a marketing authorization",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MedicinalProductAuthorizationProcedureComponent"
          }
        },
        "datePeriod": {
          "$ref": "#/definitions/Period"
        },
        "dateDateTime": {
          "description": "Date of procedure",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "identifier": {
          "$ref": "#/definitions/Identifier"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "MedicinalProductAuthorization": {
      "description": "The regulatory authorization of a medicinal product",
      "pattern": "MedicinalProductAuthorization",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "country": {
          "description": "The country in which the marketing authorization has been granted",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "dataExclusivityPeriod": {
          "$ref": "#/definitions/Period"
        },
        "dateOfFirstAuthorization": {
          "description": "The date when the first authorization was granted by a Medicines Regulatory Agency",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "holder": {
          "$ref": "#/definitions/Reference"
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Business identifier for the marketing authorization, as assigned by a regulator",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "internationalBirthDate": {
          "description": "Date of first marketing authorization for a company's new medicinal product in any country in the World",
          "type": "string"
        },
        "jurisdiction": {
          "description": "Jurisdiction within a country",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "jurisdictionalAuthorization": {
          "description": "Authorization in areas within a country",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MedicinalProductAuthorizationJurisdictionalAuthorizationComponent"
          }
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "legalBasis": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "procedure": {
          "$ref": "#/definitions/MedicinalProductAuthorizationProcedureComponent"
        },
        "regulator": {
          "$ref": "#/definitions/Reference"
        },
        "restoreDate": {
          "description": "The date when a suspended the marketing or the marketing authorization of the product is anticipated to be restored",
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "statusDate": {
          "description": "The date at which the given status has become applicable",
          "type": "string"
        },
        "subject": {
          "$ref": "#/definitions/Reference"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "validityPeriod": {
          "$ref": "#/definitions/Period"
        }
      }
    },
    "MedicinalProductContraindicationOtherTherapyComponent": {
      "description": "Information about the use of the medicinal product in relation to other therapies described as part of the indication",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "medicationCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "medicationReference": {
          "$ref": "#/definitions/Reference"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "therapyRelationshipType": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "MedicinalProductContraindication": {
      "description": "MedicinalProductContraindication",
      "pattern": "MedicinalProductContraindication",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "comorbidity": {
          "description": "A comorbidity (concurrent condition) or coinfection",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "disease": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "diseaseStatus": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "otherTherapy": {
          "description": "Information about the use of the medicinal product in relation to other therapies described as part of the indication",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MedicinalProductContraindicationOtherTherapyComponent"
          }
        },
        "population": {
          "description": "The population group to which this applies",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Population"
          }
        },
        "subject": {
          "description": "The medication for which this is an indication",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "therapeuticIndication": {
          "description": "Information about the use of the medicinal product in relation to other therapies as part of the indication",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        }
      }
    },
    "MedicinalProductIndicationOtherTherapyComponent": {
      "description": "Information about the use of the medicinal product in relation to other therapies described as part of the indication",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "medicationCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "medicationReference": {
          "$ref": "#/definitions/Reference"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "therapyRelationshipType": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "MedicinalProductIndication": {
      "description": "MedicinalProductIndication",
      "pattern": "MedicinalProductIndication",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "comorbidity": {
          "description": "Comorbidity (concurrent condition) or co-infection as part of the indication",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "diseaseStatus": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "diseaseSymptomProcedure": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "duration": {
          "$ref": "#/definitions/Quantity"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "intendedEffect": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "otherTherapy": {
          "description": "Information about the use of the medicinal product in relation to other therapies described as part of the indication",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MedicinalProductIndicationOtherTherapyComponent"
          }
        },
        "population": {
          "description": "The population group to which this applies",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Population"
          }
        },
        "subject": {
          "description": "The medication for which this is an indication",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "undesirableEffect": {
          "description": "Describe the undesirable effects of the medicinal product",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        }
      }
    },
    "MedicinalProductIngredientReferenceStrengthComponent": {
      "description": "Strength expressed in terms of a reference substance",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "country": {
          "description": "The country or countries for which the strength range applies",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "measurementPoint": {
          "description": "For when strength is measured at a particular point or distance",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "strength": {
          "$ref": "#/definitions/Ratio"
        },
        "strengthLowLimit": {
          "$ref": "#/definitions/Ratio"
        },
        "substance": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "MedicinalProductIngredientStrengthComponent": {
      "description": "Quantity of the substance or specified substance present in the manufactured item or pharmaceutical product",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "concentration": {
          "$ref": "#/definitions/Ratio"
        },
        "concentrationLowLimit": {
          "$ref": "#/definitions/Ratio"
        },
        "country": {
          "description": "The country or countries for which the strength range applies",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "measurementPoint": {
          "description": "For when strength is measured at a particular point or distance",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "presentation": {
          "$ref": "#/definitions/Ratio"
        },
        "presentationLowLimit": {
          "$ref": "#/definitions/Ratio"
        },
        "referenceStrength": {
          "description": "Strength expressed in terms of a reference substance",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MedicinalProductIngredientReferenceStrengthComponent"
          }
        }
      }
    },
    "MedicinalProductIngredientSpecifiedSubstanceComponent": {
      "description": "A specified substance that comprises this ingredient",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "code": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "confidentiality": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "group": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "strength": {
          "description": "Quantity of the substance or specified substance present in the manufactured item or pharmaceutical product",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MedicinalProductIngredientStrengthComponent"
          }
        }
      }
    },
    "MedicinalProductIngredientSubstanceComponent": {
      "description": "The ingredient substance",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "code": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "strength": {
          "description": "Quantity of the substance or specified substance present in the manufactured item or pharmaceutical product",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MedicinalProductIngredientStrengthComponent"
          }
        }
      }
    },
    "MedicinalProductIngredient": {
      "description": "An ingredient of a manufactured item or pharmaceutical product",
      "pattern": "MedicinalProductIngredient",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "allergenicIndicator": {
          "description": "If the ingredient is a known or suspected allergen",
          "type": "boolean"
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "$ref": "#/definitions/Identifier"
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "manufacturer": {
          "description": "Manufacturer of this Ingredient",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "role": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "specifiedSubstance": {
          "description": "A specified substance that comprises this ingredient",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MedicinalProductIngredientSpecifiedSubstanceComponent"
          }
        },
        "substance": {
          "$ref": "#/definitions/MedicinalProductIngredientSubstanceComponent"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "MedicinalProductInteractionInteractantComponent": {
      "description": "The specific medication, food or laboratory test that interacts",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "itemReference": {
          "$ref": "#/definitions/Reference"
        },
        "itemCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "MedicinalProductInteraction": {
      "description": "MedicinalProductInteraction",
      "pattern": "MedicinalProductInteraction",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "description": {
          "description": "The interaction described",
          "type": "string"
        },
        "effect": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "incidence": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "interactant": {
          "description": "The specific medication, food or laboratory test that interacts",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MedicinalProductInteractionInteractantComponent"
          }
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "management": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "subject": {
          "description": "The medication for which this is a described interaction",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "MedicinalProductManufactured": {
      "description": "The manufactured item as contained in the packaged medicinal product",
      "pattern": "MedicinalProductManufactured",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "ingredient": {
          "description": "Ingredient",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "manufacturedDoseForm": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "manufacturer": {
          "description": "Manufacturer of the item (Note that this should be named \"manufacturer\" but it currently causes technical issues)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "otherCharacteristics": {
          "description": "Other codeable characteristics",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "physicalCharacteristics": {
          "$ref": "#/definitions/ProdCharacteristic"
        },
        "quantity": {
          "$ref": "#/definitions/Quantity"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "unitOfPresentation": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "MedicinalProductPackagedBatchIdentifierComponent": {
      "description": "Batch numbering",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "immediatePackaging": {
          "$ref": "#/definitions/Identifier"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "outerPackaging": {
          "$ref": "#/definitions/Identifier"
        }
      }
    },
    "MedicinalProductPackagedPackageItemComponent": {
      "description": "A packaging item, as a contained for medicine, possibly with other packaging items within",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "alternateMaterial": {
          "description": "A possible alternate material for the packaging",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "device": {
          "description": "A device accompanying a medicinal product",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "identifier": {
          "description": "Including possibly Data Carrier Identifier",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "manufacturedItem": {
          "description": "The manufactured item as contained in the packaged medicinal product",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "manufacturer": {
          "description": "Manufacturer of this Package Item",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "material": {
          "description": "Material type of the package item",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "otherCharacteristics": {
          "description": "Other codeable characteristics",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "packageItem": {
          "description": "Allows containers within containers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MedicinalProductPackagedPackageItemComponent"
          }
        },
        "physicalCharacteristics": {
          "$ref": "#/definitions/ProdCharacteristic"
        },
        "quantity": {
          "$ref": "#/definitions/Quantity"
        },
        "shelfLifeStorage": {
          "description": "Shelf Life and storage information",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductShelfLife"
          }
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "MedicinalProductPackaged": {
      "description": "A medicinal product in a container or package",
      "pattern": "MedicinalProductPackaged",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "batchIdentifier": {
          "description": "Batch numbering",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MedicinalProductPackagedBatchIdentifierComponent"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "description": {
          "description": "Textual description",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Unique identifier",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "legalStatusOfSupply": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "manufacturer": {
          "description": "Manufacturer of this Package Item",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "marketingAuthorization": {
          "$ref": "#/definitions/Reference"
        },
        "marketingStatus": {
          "description": "Marketing information",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MarketingStatus"
          }
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "packageItem": {
          "description": "A packaging item, as a contained for medicine, possibly with other packaging items within",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MedicinalProductPackagedPackageItemComponent"
          }
        },
        "subject": {
          "description": "The product with this is a pack for",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "MedicinalProductPharmaceuticalCharacteristicsComponent": {
      "description": "Characteristics e.g. a products onset of action",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "code": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "status": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "MedicinalProductPharmaceuticalWithdrawalPeriodComponent": {
      "description": "A species specific time during which consumption of animal product is not appropriate",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "supportingInformation": {
          "description": "Extra information about the withdrawal period",
          "type": "string"
        },
        "tissue": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "value": {
          "$ref": "#/definitions/Quantity"
        }
      }
    },
    "MedicinalProductPharmaceuticalTargetSpeciesComponent": {
      "description": "A species for which this route applies",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "code": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "withdrawalPeriod": {
          "description": "A species specific time during which consumption of animal product is not appropriate",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MedicinalProductPharmaceuticalWithdrawalPeriodComponent"
          }
        }
      }
    },
    "MedicinalProductPharmaceuticalRouteOfAdministrationComponent": {
      "description": "The path by which the pharmaceutical product is taken into or makes contact with the body",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "code": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "firstDose": {
          "$ref": "#/definitions/Quantity"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "maxDosePerDay": {
          "$ref": "#/definitions/Quantity"
        },
        "maxDosePerTreatmentPeriod": {
          "$ref": "#/definitions/Ratio"
        },
        "maxSingleDose": {
          "$ref": "#/definitions/Quantity"
        },
        "maxTreatmentPeriod": {
          "$ref": "#/definitions/Duration"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "targetSpecies": {
          "description": "A species for which this route applies",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MedicinalProductPharmaceuticalTargetSpeciesComponent"
          }
        }
      }
    },
    "MedicinalProductPharmaceutical": {
      "description": "A pharmaceutical product described in terms of its composition and dose form",
      "pattern": "MedicinalProductPharmaceutical",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "administrableDoseForm": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "characteristics": {
          "description": "Characteristics e.g. a products onset of action",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MedicinalProductPharmaceuticalCharacteristicsComponent"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "device": {
          "description": "Accompanying device",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "An identifier for the pharmaceutical medicinal product",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "ingredient": {
          "description": "Ingredient",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "routeOfAdministration": {
          "description": "The path by which the pharmaceutical product is taken into or makes contact with the body",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MedicinalProductPharmaceuticalRouteOfAdministrationComponent"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "unitOfPresentation": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "MedicinalProductUndesirableEffect": {
      "description": "MedicinalProductUndesirableEffect",
      "pattern": "MedicinalProductUndesirableEffect",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "classification": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "frequencyOfOccurrence": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "population": {
          "description": "The population group to which this applies",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Population"
          }
        },
        "subject": {
          "description": "The medication for which this is an indication",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "symptomConditionEffect": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "MessageDefinitionAllowedResponseComponent": {
      "description": "Responses to this message",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "message": {
          "description": "Reference to allowed message definition response",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "situation": {
          "description": "When should this response be used",
          "type": "string"
        }
      }
    },
    "MessageDefinitionFocusComponent": {
      "description": "Resource(s) that are the subject of the event",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "code": {
          "description": "Type of resource",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "max": {
          "description": "Maximum number of focuses of this type",
          "type": "string"
        },
        "min": {
          "format": "int32",
          "description": "Minimum number of focuses of this type",
          "type": "integer"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "profile": {
          "description": "Profile that must be adhered to by focus",
          "type": "string"
        }
      }
    },
    "MessageDefinition": {
      "description": "A resource that defines a type of message that can be exchanged between systems",
      "pattern": "MessageDefinition",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "allowedResponse": {
          "description": "Responses to this message",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MessageDefinitionAllowedResponseComponent"
          }
        },
        "base": {
          "description": "Definition this one is based on",
          "type": "string"
        },
        "category": {
          "description": "consequence | currency | notification",
          "type": "string"
        },
        "contact": {
          "description": "Contact details for the publisher",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "copyright": {
          "description": "Use and/or publishing restrictions",
          "type": "string"
        },
        "date": {
          "description": "Date last changed",
          "type": "string"
        },
        "description": {
          "description": "Natural language description of the message definition",
          "type": "string"
        },
        "eventCoding": {
          "$ref": "#/definitions/Coding"
        },
        "eventUri": {
          "description": "Event code  or link to the EventDefinition",
          "type": "string"
        },
        "experimental": {
          "description": "For testing purposes, not real usage",
          "type": "boolean"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "focus": {
          "description": "Resource(s) that are the subject of the event",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MessageDefinitionFocusComponent"
          }
        },
        "graph": {
          "description": "Canonical reference to a GraphDefinition",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Primary key for the message definition on a given server",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "jurisdiction": {
          "description": "Intended jurisdiction for message definition (if applicable)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Name for this message definition (computer friendly)",
          "type": "string"
        },
        "parent": {
          "description": "Protocol/workflow this is part of",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "publisher": {
          "description": "Name of the publisher (organization or individual)",
          "type": "string"
        },
        "purpose": {
          "description": "Why this message definition is defined",
          "type": "string"
        },
        "replaces": {
          "description": "Takes the place of",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "responseRequired": {
          "description": "always | on-error | never | on-success",
          "type": "string"
        },
        "status": {
          "description": "draft | active | retired | unknown",
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "title": {
          "description": "Name for this message definition (human friendly)",
          "type": "string"
        },
        "url": {
          "description": "Business Identifier for a given MessageDefinition",
          "type": "string"
        },
        "useContext": {
          "description": "The context that the content is intended to support",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UsageContext"
          }
        },
        "version": {
          "description": "Business version of the message definition",
          "type": "string"
        }
      }
    },
    "MessageHeaderMessageDestinationComponent": {
      "description": "Message destination application(s)",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "endpoint": {
          "description": "Actual destination address or id",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Name of system",
          "type": "string"
        },
        "receiver": {
          "$ref": "#/definitions/Reference"
        },
        "target": {
          "$ref": "#/definitions/Reference"
        }
      }
    },
    "MessageHeaderResponseComponent": {
      "description": "If this is a reply to prior message",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "code": {
          "description": "ok | transient-error | fatal-error",
          "type": "string"
        },
        "details": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "identifier": {
          "description": "Id of original message",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "MessageHeaderMessageSourceComponent": {
      "description": "Message source application",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "contact": {
          "$ref": "#/definitions/ContactPoint"
        },
        "endpoint": {
          "description": "Actual message source address or id",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Name of system",
          "type": "string"
        },
        "software": {
          "description": "Name of software running the system",
          "type": "string"
        },
        "version": {
          "description": "Version of software running",
          "type": "string"
        }
      }
    },
    "MessageHeader": {
      "description": "A resource that describes a message that is exchanged between systems",
      "pattern": "MessageHeader",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "author": {
          "$ref": "#/definitions/Reference"
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "definition": {
          "description": "Link to the definition for this message",
          "type": "string"
        },
        "destination": {
          "description": "Message destination application(s)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MessageHeaderMessageDestinationComponent"
          }
        },
        "enterer": {
          "$ref": "#/definitions/Reference"
        },
        "eventCoding": {
          "$ref": "#/definitions/Coding"
        },
        "eventUri": {
          "description": "Code for the event this message represents or link to event definition",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "focus": {
          "description": "The actual content of the message",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "reason": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "response": {
          "$ref": "#/definitions/MessageHeaderResponseComponent"
        },
        "responsible": {
          "$ref": "#/definitions/Reference"
        },
        "sender": {
          "$ref": "#/definitions/Reference"
        },
        "source": {
          "$ref": "#/definitions/MessageHeaderMessageSourceComponent"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "MolecularSequenceRocComponent": {
      "description": "Receiver Operator Characteristic (ROC) Curve",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "fMeasure": {
          "description": "FScore of the GQ score",
          "type": "array",
          "items": {
            "format": "double",
            "type": "number"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "numFN": {
          "description": "Roc score false negative numbers",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "numFP": {
          "description": "Roc score false positive numbers",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "numTP": {
          "description": "Roc score true positive numbers",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "precision": {
          "description": "Precision of the GQ score",
          "type": "array",
          "items": {
            "format": "double",
            "type": "number"
          }
        },
        "score": {
          "description": "Genotype quality score",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "sensitivity": {
          "description": "Sensitivity of the GQ score",
          "type": "array",
          "items": {
            "format": "double",
            "type": "number"
          }
        }
      }
    },
    "MolecularSequenceQualityComponent": {
      "description": "An set of value as quality of sequence",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "end": {
          "format": "int32",
          "description": "End position of the sequence",
          "type": "integer"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "fScore": {
          "format": "double",
          "description": "F-score",
          "type": "number"
        },
        "gtFP": {
          "format": "double",
          "description": "False positives where the non-REF alleles in the Truth and Query Call Sets match",
          "type": "number"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "method": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "precision": {
          "format": "double",
          "description": "Precision of comparison",
          "type": "number"
        },
        "queryFP": {
          "format": "double",
          "description": "False positives",
          "type": "number"
        },
        "queryTP": {
          "format": "double",
          "description": "True positives from the perspective of the query data",
          "type": "number"
        },
        "recall": {
          "format": "double",
          "description": "Recall of comparison",
          "type": "number"
        },
        "roc": {
          "$ref": "#/definitions/MolecularSequenceRocComponent"
        },
        "score": {
          "$ref": "#/definitions/Quantity"
        },
        "standardSequence": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "start": {
          "format": "int32",
          "description": "Start position of the sequence",
          "type": "integer"
        },
        "truthFN": {
          "format": "double",
          "description": "False negatives",
          "type": "number"
        },
        "truthTP": {
          "format": "double",
          "description": "True positives from the perspective of the truth data",
          "type": "number"
        },
        "type": {
          "description": "indel | snp | unknown",
          "type": "string"
        }
      }
    },
    "MolecularSequenceReferenceSeqComponent": {
      "description": "A sequence used as reference",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "chromosome": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "genomeBuild": {
          "description": "The Genome Build used for reference, following GRCh build versions e.g. 'GRCh 37'",
          "type": "string"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "orientation": {
          "description": "sense | antisense",
          "type": "string"
        },
        "referenceSeqId": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "referenceSeqPointer": {
          "$ref": "#/definitions/Reference"
        },
        "referenceSeqString": {
          "description": "A string to represent reference sequence",
          "type": "string"
        },
        "strand": {
          "description": "watson | crick",
          "type": "string"
        },
        "windowEnd": {
          "format": "int32",
          "description": "End position of the window on the reference sequence",
          "type": "integer"
        },
        "windowStart": {
          "format": "int32",
          "description": "Start position of the window on the  reference sequence",
          "type": "integer"
        }
      }
    },
    "MolecularSequenceRepositoryComponent": {
      "description": "External repository which contains detailed report related with observedSeq in this resource",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "datasetId": {
          "description": "Id of the dataset that used to call for dataset in repository",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Repository's name",
          "type": "string"
        },
        "readsetId": {
          "description": "Id of the read",
          "type": "string"
        },
        "type": {
          "description": "directlink | openapi | login | oauth | other",
          "type": "string"
        },
        "url": {
          "description": "URI of the repository",
          "type": "string"
        },
        "variantsetId": {
          "description": "Id of the variantset that used to call for variantset in repository",
          "type": "string"
        }
      }
    },
    "MolecularSequenceInnerComponent": {
      "description": "Structural variant inner",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "end": {
          "format": "int32",
          "description": "Structural variant inner end",
          "type": "integer"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "start": {
          "format": "int32",
          "description": "Structural variant inner start",
          "type": "integer"
        }
      }
    },
    "MolecularSequenceOuterComponent": {
      "description": "Structural variant outer",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "end": {
          "format": "int32",
          "description": "Structural variant outer end",
          "type": "integer"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "start": {
          "format": "int32",
          "description": "Structural variant outer start",
          "type": "integer"
        }
      }
    },
    "MolecularSequenceStructureVariantComponent": {
      "description": "Structural variant",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "exact": {
          "description": "Does the structural variant have base pair resolution breakpoints?",
          "type": "boolean"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "inner": {
          "$ref": "#/definitions/MolecularSequenceInnerComponent"
        },
        "length": {
          "format": "int32",
          "description": "Structural variant length",
          "type": "integer"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "outer": {
          "$ref": "#/definitions/MolecularSequenceOuterComponent"
        },
        "variantType": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "MolecularSequenceVariantComponent": {
      "description": "Variant in sequence",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "cigar": {
          "description": "Extended CIGAR string for aligning the sequence with reference bases",
          "type": "string"
        },
        "end": {
          "format": "int32",
          "description": "End position of the variant on the reference sequence",
          "type": "integer"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "observedAllele": {
          "description": "Allele that was observed",
          "type": "string"
        },
        "referenceAllele": {
          "description": "Allele in the reference sequence",
          "type": "string"
        },
        "start": {
          "format": "int32",
          "description": "Start position of the variant on the  reference sequence",
          "type": "integer"
        },
        "variantPointer": {
          "$ref": "#/definitions/Reference"
        }
      }
    },
    "MolecularSequence": {
      "description": "Information about a biological sequence",
      "pattern": "MolecularSequence",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "coordinateSystem": {
          "format": "int32",
          "description": "Base number of coordinate system (0 for 0-based numbering or coordinates, inclusive start, exclusive end, 1 for 1-based numbering, inclusive start, inclusive end)",
          "type": "integer"
        },
        "device": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Unique ID for this particular sequence. This is a FHIR-defined id",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "observedSeq": {
          "description": "Sequence that was observed",
          "type": "string"
        },
        "patient": {
          "$ref": "#/definitions/Reference"
        },
        "performer": {
          "$ref": "#/definitions/Reference"
        },
        "pointer": {
          "description": "Pointer to next atomic sequence",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "quality": {
          "description": "An set of value as quality of sequence",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MolecularSequenceQualityComponent"
          }
        },
        "quantity": {
          "$ref": "#/definitions/Quantity"
        },
        "readCoverage": {
          "format": "int32",
          "description": "Average number of reads representing a given nucleotide in the reconstructed sequence",
          "type": "integer"
        },
        "referenceSeq": {
          "$ref": "#/definitions/MolecularSequenceReferenceSeqComponent"
        },
        "repository": {
          "description": "External repository which contains detailed report related with observedSeq in this resource",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MolecularSequenceRepositoryComponent"
          }
        },
        "specimen": {
          "$ref": "#/definitions/Reference"
        },
        "structureVariant": {
          "description": "Structural variant",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MolecularSequenceStructureVariantComponent"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "type": {
          "description": "aa | dna | rna",
          "type": "string"
        },
        "variant": {
          "description": "Variant in sequence",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MolecularSequenceVariantComponent"
          }
        }
      }
    },
    "NamingSystemUniqueIdComponent": {
      "description": "Unique identifiers used for system",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "comment": {
          "description": "Notes about identifier usage",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "period": {
          "$ref": "#/definitions/Period"
        },
        "preferred": {
          "description": "Is this the id that should be used for this type",
          "type": "boolean"
        },
        "type": {
          "description": "oid | uuid | uri | other",
          "type": "string"
        },
        "value": {
          "description": "The unique identifier",
          "type": "string"
        }
      }
    },
    "NamingSystem": {
      "description": "System of unique identification",
      "pattern": "NamingSystem",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "contact": {
          "description": "Contact details for the publisher",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "date": {
          "description": "Date last changed",
          "type": "string"
        },
        "description": {
          "description": "Natural language description of the naming system",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "jurisdiction": {
          "description": "Intended jurisdiction for naming system (if applicable)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "kind": {
          "description": "codesystem | identifier | root",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Name for this naming system (computer friendly)",
          "type": "string"
        },
        "publisher": {
          "description": "Name of the publisher (organization or individual)",
          "type": "string"
        },
        "responsible": {
          "description": "Who maintains system namespace?",
          "type": "string"
        },
        "status": {
          "description": "draft | active | retired | unknown",
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "uniqueId": {
          "description": "Unique identifiers used for system",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NamingSystemUniqueIdComponent"
          }
        },
        "usage": {
          "description": "How/where is it used",
          "type": "string"
        },
        "useContext": {
          "description": "The context that the content is intended to support",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UsageContext"
          }
        }
      }
    },
    "NutritionOrderAdministrationComponent": {
      "description": "Formula feeding instruction as structured data",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "quantity": {
          "$ref": "#/definitions/Quantity"
        },
        "rateQuantity": {
          "$ref": "#/definitions/Quantity"
        },
        "rateRatio": {
          "$ref": "#/definitions/Ratio"
        },
        "schedule": {
          "$ref": "#/definitions/Timing"
        }
      }
    },
    "NutritionOrderEnteralFormulaComponent": {
      "description": "Enteral formula components",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "additiveProductName": {
          "description": "Product or brand name of the modular additive",
          "type": "string"
        },
        "additiveType": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "administration": {
          "description": "Formula feeding instruction as structured data",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NutritionOrderAdministrationComponent"
          }
        },
        "administrationInstruction": {
          "description": "Formula feeding instructions expressed as text",
          "type": "string"
        },
        "baseFormulaProductName": {
          "description": "Product or brand name of the enteral or infant formula",
          "type": "string"
        },
        "baseFormulaType": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "caloricDensity": {
          "$ref": "#/definitions/Quantity"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "maxVolumeToDeliver": {
          "$ref": "#/definitions/Quantity"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "routeofAdministration": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "NutritionOrderNutrientComponent": {
      "description": "Required  nutrient modifications",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Quantity"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifier": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "NutritionOrderTextureComponent": {
      "description": "Required  texture modifications",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "foodType": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifier": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "NutritionOrderOralDietComponent": {
      "description": "Oral diet components",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "fluidConsistencyType": {
          "description": "The required consistency of fluids and liquids provided to the patient",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "instruction": {
          "description": "Instructions or additional information about the oral diet",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "nutrient": {
          "description": "Required  nutrient modifications",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NutritionOrderNutrientComponent"
          }
        },
        "schedule": {
          "description": "Scheduled frequency of diet",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Timing"
          }
        },
        "texture": {
          "description": "Required  texture modifications",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NutritionOrderTextureComponent"
          }
        },
        "type": {
          "description": "Type of oral diet or diet restrictions that describe what can be consumed orally",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        }
      }
    },
    "NutritionOrderSupplementComponent": {
      "description": "Supplement components",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "instruction": {
          "description": "Instructions or additional information about the oral supplement",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "productName": {
          "description": "Product or brand name of the nutritional supplement",
          "type": "string"
        },
        "quantity": {
          "$ref": "#/definitions/Quantity"
        },
        "schedule": {
          "description": "Scheduled frequency of supplement",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Timing"
          }
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "NutritionOrder": {
      "description": "Diet, formula or nutritional supplement request",
      "pattern": "NutritionOrder",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "allergyIntolerance": {
          "description": "List of the patient's food and nutrition-related allergies and intolerances",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "dateTime": {
          "description": "Date and time the nutrition order was requested",
          "type": "string"
        },
        "encounter": {
          "$ref": "#/definitions/Reference"
        },
        "enteralFormula": {
          "$ref": "#/definitions/NutritionOrderEnteralFormulaComponent"
        },
        "excludeFoodModifier": {
          "description": "Order-specific modifier about the type of food that should not be given",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "foodPreferenceModifier": {
          "description": "Order-specific modifier about the type of food that should be given",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Identifiers assigned to this order",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "instantiates": {
          "description": "Instantiates protocol or definition",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "instantiatesCanonical": {
          "description": "Instantiates FHIR protocol or definition",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "instantiatesUri": {
          "description": "Instantiates external protocol or definition",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "intent": {
          "description": "proposal | plan | directive | order | original-order | reflex-order | filler-order | instance-order | option",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "note": {
          "description": "Comments",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "oralDiet": {
          "$ref": "#/definitions/NutritionOrderOralDietComponent"
        },
        "orderer": {
          "$ref": "#/definitions/Reference"
        },
        "patient": {
          "$ref": "#/definitions/Reference"
        },
        "status": {
          "description": "draft | active | on-hold | revoked | completed | entered-in-error | unknown",
          "type": "string"
        },
        "supplement": {
          "description": "Supplement components",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NutritionOrderSupplementComponent"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "ObservationComponentComponent": {
      "description": "Component results",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "code": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "dataAbsentReason": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "interpretation": {
          "description": "High, low, normal, etc.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "referenceRange": {
          "description": "Provides guide for interpretation of component result",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ObservationReferenceRangeComponent"
          }
        },
        "valueQuantity": {
          "$ref": "#/definitions/Quantity"
        },
        "valueCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueString": {
          "description": "Actual component result",
          "type": "string"
        },
        "valueBoolean": {
          "description": "Actual component result",
          "type": "boolean"
        },
        "valueInteger": {
          "format": "int32",
          "description": "Actual component result",
          "type": "integer"
        },
        "valueRange": {
          "$ref": "#/definitions/Range"
        },
        "valueRatio": {
          "$ref": "#/definitions/Ratio"
        },
        "valueSampledData": {
          "$ref": "#/definitions/SampledData"
        },
        "valueTime": {
          "description": "Actual component result",
          "type": "string"
        },
        "valueDateTime": {
          "description": "Actual component result",
          "type": "string"
        },
        "valuePeriod": {
          "$ref": "#/definitions/Period"
        }
      }
    },
    "ObservationReferenceRangeComponent": {
      "description": "Provides guide for interpretation",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "age": {
          "$ref": "#/definitions/Range"
        },
        "appliesTo": {
          "description": "Reference range population",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "high": {
          "$ref": "#/definitions/Quantity"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "low": {
          "$ref": "#/definitions/Quantity"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "text": {
          "description": "Text based reference range in an observation",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "Observation": {
      "description": "Measurements and simple assertions",
      "pattern": "Observation",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "basedOn": {
          "description": "Fulfills plan, proposal or order",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "bodySite": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "category": {
          "description": "Classification of  type of observation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "code": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "component": {
          "description": "Component results",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ObservationComponentComponent"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "dataAbsentReason": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "derivedFrom": {
          "description": "Related measurements the observation is made from",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "device": {
          "$ref": "#/definitions/Reference"
        },
        "effectiveDateTime": {
          "description": "Clinically relevant time/time-period for observation",
          "type": "string"
        },
        "effectivePeriod": {
          "$ref": "#/definitions/Period"
        },
        "effectiveTiming": {
          "$ref": "#/definitions/Timing"
        },
        "effectiveInstant": {
          "description": "Clinically relevant time/time-period for observation",
          "type": "string"
        },
        "encounter": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "focus": {
          "description": "What the observation is about, when it is not about the subject of record",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "hasMember": {
          "description": "Related resource that belongs to the Observation group",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Business Identifier for observation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "interpretation": {
          "description": "High, low, normal, etc.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "issued": {
          "description": "Date/Time this version was made available",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "method": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "note": {
          "description": "Comments about the observation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "partOf": {
          "description": "Part of referenced event",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "performer": {
          "description": "Who is responsible for the observation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "referenceRange": {
          "description": "Provides guide for interpretation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ObservationReferenceRangeComponent"
          }
        },
        "specimen": {
          "$ref": "#/definitions/Reference"
        },
        "status": {
          "description": "registered | preliminary | final | amended +",
          "type": "string"
        },
        "subject": {
          "$ref": "#/definitions/Reference"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "valueQuantity": {
          "$ref": "#/definitions/Quantity"
        },
        "valueCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueString": {
          "description": "Actual result",
          "type": "string"
        },
        "valueBoolean": {
          "description": "Actual result",
          "type": "boolean"
        },
        "valueInteger": {
          "format": "int32",
          "description": "Actual result",
          "type": "integer"
        },
        "valueRange": {
          "$ref": "#/definitions/Range"
        },
        "valueRatio": {
          "$ref": "#/definitions/Ratio"
        },
        "valueSampledData": {
          "$ref": "#/definitions/SampledData"
        },
        "valueTime": {
          "description": "Actual result",
          "type": "string"
        },
        "valueDateTime": {
          "description": "Actual result",
          "type": "string"
        },
        "valuePeriod": {
          "$ref": "#/definitions/Period"
        }
      }
    },
    "ObservationDefinitionQualifiedIntervalComponent": {
      "description": "Qualified range for continuous and ordinal observation results",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "age": {
          "$ref": "#/definitions/Range"
        },
        "appliesTo": {
          "description": "Targetted population of the range",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "category": {
          "description": "reference | critical | absolute",
          "type": "string"
        },
        "condition": {
          "description": "Condition associated with the reference range",
          "type": "string"
        },
        "context": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "gender": {
          "description": "male | female | other | unknown",
          "type": "string"
        },
        "gestationalAge": {
          "$ref": "#/definitions/Range"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "range": {
          "$ref": "#/definitions/Range"
        }
      }
    },
    "ObservationDefinitionQuantitativeDetailsComponent": {
      "description": "Characteristics of quantitative results",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "conversionFactor": {
          "format": "double",
          "description": "SI to Customary unit conversion factor",
          "type": "number"
        },
        "customaryUnit": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "decimalPrecision": {
          "format": "int32",
          "description": "Decimal precision of observation quantitative results",
          "type": "integer"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "unit": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "ObservationDefinition": {
      "description": "Definition of an observation",
      "pattern": "ObservationDefinition",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "abnormalCodedValueSet": {
          "$ref": "#/definitions/Reference"
        },
        "category": {
          "description": "Category of observation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "code": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "criticalCodedValueSet": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Business identifier for this ObservationDefinition instance",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "method": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "multipleResultsAllowed": {
          "description": "Multiple results allowed",
          "type": "boolean"
        },
        "normalCodedValueSet": {
          "$ref": "#/definitions/Reference"
        },
        "permittedDataType": {
          "description": "Quantity | CodeableConcept | string | boolean | integer | Range | Ratio | SampledData | time | dateTime | Period",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "preferredReportName": {
          "description": "Preferred report name",
          "type": "string"
        },
        "qualifiedInterval": {
          "description": "Qualified range for continuous and ordinal observation results",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ObservationDefinitionQualifiedIntervalComponent"
          }
        },
        "quantitativeDetails": {
          "$ref": "#/definitions/ObservationDefinitionQuantitativeDetailsComponent"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "validCodedValueSet": {
          "$ref": "#/definitions/Reference"
        }
      }
    },
    "OperationDefinitionOverloadComponent": {
      "description": "Define overloaded variants for when  generating code",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "comment": {
          "description": "Comments to go on overload",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "parameterName": {
          "description": "Name of parameter to include in overload",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "OperationDefinitionBindingComponent": {
      "description": "ValueSet details if this is coded",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "strength": {
          "description": "required | extensible | preferred | example",
          "type": "string"
        },
        "valueSet": {
          "description": "Source of value set",
          "type": "string"
        }
      }
    },
    "OperationDefinitionReferencedFromComponent": {
      "description": "References to this parameter",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "source": {
          "description": "Referencing parameter",
          "type": "string"
        },
        "sourceId": {
          "description": "Element id of reference",
          "type": "string"
        }
      }
    },
    "OperationDefinitionParameterComponent": {
      "description": "Parameters for the operation/query",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "binding": {
          "$ref": "#/definitions/OperationDefinitionBindingComponent"
        },
        "documentation": {
          "description": "Description of meaning/use",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "max": {
          "description": "Maximum Cardinality (a number or *)",
          "type": "string"
        },
        "min": {
          "format": "int32",
          "description": "Minimum Cardinality",
          "type": "integer"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Name in Parameters.parameter.name or in URL",
          "type": "string"
        },
        "part": {
          "description": "Parts of a nested Parameter",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OperationDefinitionParameterComponent"
          }
        },
        "referencedFrom": {
          "description": "References to this parameter",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OperationDefinitionReferencedFromComponent"
          }
        },
        "searchType": {
          "description": "number | date | string | token | reference | composite | quantity | uri | special",
          "type": "string"
        },
        "targetProfile": {
          "description": "If type is Reference | canonical, allowed targets",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "description": "What type this parameter has",
          "type": "string"
        },
        "use": {
          "description": "in | out",
          "type": "string"
        }
      }
    },
    "OperationDefinition": {
      "description": "Definition of an operation or a named query",
      "pattern": "OperationDefinition",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "affectsState": {
          "description": "Whether content is changed by the operation",
          "type": "boolean"
        },
        "base": {
          "description": "Marks this as a profile of the base",
          "type": "string"
        },
        "code": {
          "description": "Name used to invoke the operation",
          "type": "string"
        },
        "comment": {
          "description": "Additional information about use",
          "type": "string"
        },
        "contact": {
          "description": "Contact details for the publisher",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "date": {
          "description": "Date last changed",
          "type": "string"
        },
        "description": {
          "description": "Natural language description of the operation definition",
          "type": "string"
        },
        "experimental": {
          "description": "For testing purposes, not real usage",
          "type": "boolean"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "inputProfile": {
          "description": "Validation information for in parameters",
          "type": "string"
        },
        "instance": {
          "description": "Invoke on an instance?",
          "type": "boolean"
        },
        "jurisdiction": {
          "description": "Intended jurisdiction for operation definition (if applicable)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "kind": {
          "description": "operation | query",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Name for this operation definition (computer friendly)",
          "type": "string"
        },
        "outputProfile": {
          "description": "Validation information for out parameters",
          "type": "string"
        },
        "overload": {
          "description": "Define overloaded variants for when  generating code",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OperationDefinitionOverloadComponent"
          }
        },
        "parameter": {
          "description": "Parameters for the operation/query",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OperationDefinitionParameterComponent"
          }
        },
        "publisher": {
          "description": "Name of the publisher (organization or individual)",
          "type": "string"
        },
        "purpose": {
          "description": "Why this operation definition is defined",
          "type": "string"
        },
        "resource": {
          "description": "Types this operation applies to",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "description": "draft | active | retired | unknown",
          "type": "string"
        },
        "system": {
          "description": "Invoke at the system level?",
          "type": "boolean"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "title": {
          "description": "Name for this operation definition (human friendly)",
          "type": "string"
        },
        "type": {
          "description": "Invoke at the type level?",
          "type": "boolean"
        },
        "url": {
          "description": "Canonical identifier for this operation definition, represented as a URI (globally unique)",
          "type": "string"
        },
        "useContext": {
          "description": "The context that the content is intended to support",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UsageContext"
          }
        },
        "version": {
          "description": "Business version of the operation definition",
          "type": "string"
        }
      }
    },
    "OperationOutcomeIssueComponent": {
      "description": "A single issue associated with the action",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "code": {
          "description": "Error or warning code",
          "type": "string"
        },
        "details": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "diagnostics": {
          "description": "Additional diagnostic information about the issue",
          "type": "string"
        },
        "expression": {
          "description": "FHIRPath of element(s) related to issue",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "location": {
          "description": "Deprecated: Path of element(s) related to issue",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "severity": {
          "description": "fatal | error | warning | information",
          "type": "string"
        }
      }
    },
    "OperationOutcome": {
      "description": "Information about the success/failure of an action",
      "pattern": "OperationOutcome",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "issue": {
          "description": "A single issue associated with the action",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OperationOutcomeIssueComponent"
          }
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "OrganizationContactComponent": {
      "description": "Contact for the organization for a certain purpose",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "address": {
          "$ref": "#/definitions/Address"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "$ref": "#/definitions/HumanName"
        },
        "purpose": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "telecom": {
          "description": "Contact details (telephone, email, etc.)  for a contact",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactPoint"
          }
        }
      }
    },
    "Organization": {
      "description": "A grouping of people or organizations with a common purpose",
      "pattern": "Organization",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "active": {
          "description": "Whether the organization's record is still in active use",
          "type": "boolean"
        },
        "address": {
          "description": "An address for the organization",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Address"
          }
        },
        "alias": {
          "description": "A list of alternate names that the organization is known as, or was known as in the past",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "contact": {
          "description": "Contact for the organization for a certain purpose",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrganizationContactComponent"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "endpoint": {
          "description": "Technical endpoints providing access to services operated for the organization",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Identifies this organization  across multiple systems",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Name used for the organization",
          "type": "string"
        },
        "partOf": {
          "$ref": "#/definitions/Reference"
        },
        "telecom": {
          "description": "A contact detail for the organization",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactPoint"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "type": {
          "description": "Kind of organization",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        }
      }
    },
    "OrganizationAffiliation": {
      "description": "Defines an affiliation/assotiation/relationship between 2 distinct oganizations, that is not a part-of relationship/sub-division relationship",
      "pattern": "OrganizationAffiliation",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "active": {
          "description": "Whether this organization affiliation record is in active use",
          "type": "boolean"
        },
        "code": {
          "description": "Definition of the role the participatingOrganization plays",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "endpoint": {
          "description": "Technical endpoints providing access to services operated for this role",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "healthcareService": {
          "description": "Healthcare services provided through the role",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Business identifiers that are specific to this role",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "location": {
          "description": "The location(s) at which the role occurs",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "network": {
          "description": "Health insurance provider network in which the participatingOrganization provides the role's services (if defined) at the indicated locations (if defined)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "organization": {
          "$ref": "#/definitions/Reference"
        },
        "participatingOrganization": {
          "$ref": "#/definitions/Reference"
        },
        "period": {
          "$ref": "#/definitions/Period"
        },
        "specialty": {
          "description": "Specific specialty of the participatingOrganization in the context of the role",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "telecom": {
          "description": "Contact details at the participatingOrganization relevant to this Affiliation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactPoint"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "ParametersParameterComponent": {
      "description": "Operation Parameter",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Name from the definition",
          "type": "string"
        },
        "part": {
          "description": "Named part of a multi-part parameter",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParametersParameterComponent"
          }
        },
        "resource": {
          "$ref": "#/definitions/Resource"
        },
        "valueBase64Binary": {
          "format": "byte",
          "description": "If parameter is a data type",
          "type": "string"
        },
        "valueBoolean": {
          "description": "If parameter is a data type",
          "type": "boolean"
        },
        "valueCanonical": {
          "description": "If parameter is a data type",
          "type": "string"
        },
        "valueCode": {
          "description": "If parameter is a data type",
          "type": "string"
        },
        "valueDate": {
          "description": "If parameter is a data type",
          "type": "string"
        },
        "valueDateTime": {
          "description": "If parameter is a data type",
          "type": "string"
        },
        "valueDecimal": {
          "format": "double",
          "description": "If parameter is a data type",
          "type": "number"
        },
        "valueId": {
          "description": "If parameter is a data type",
          "type": "string"
        },
        "valueInstant": {
          "description": "If parameter is a data type",
          "type": "string"
        },
        "valueInteger": {
          "format": "int32",
          "description": "If parameter is a data type",
          "type": "integer"
        },
        "valueMarkdown": {
          "description": "If parameter is a data type",
          "type": "string"
        },
        "valueOid": {
          "description": "If parameter is a data type",
          "type": "string"
        },
        "valuePositiveInt": {
          "format": "int32",
          "description": "If parameter is a data type",
          "type": "integer"
        },
        "valueString": {
          "description": "If parameter is a data type",
          "type": "string"
        },
        "valueTime": {
          "description": "If parameter is a data type",
          "type": "string"
        },
        "valueUnsignedInt": {
          "format": "int32",
          "description": "If parameter is a data type",
          "type": "integer"
        },
        "valueUri": {
          "description": "If parameter is a data type",
          "type": "string"
        },
        "valueUrl": {
          "description": "If parameter is a data type",
          "type": "string"
        },
        "valueUuid": {
          "description": "If parameter is a data type",
          "type": "string"
        },
        "valueAddress": {
          "$ref": "#/definitions/Address"
        },
        "valueAge": {
          "$ref": "#/definitions/Age"
        },
        "valueAnnotation": {
          "$ref": "#/definitions/Annotation"
        },
        "valueAttachment": {
          "$ref": "#/definitions/Attachment"
        },
        "valueCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueCoding": {
          "$ref": "#/definitions/Coding"
        },
        "valueContactPoint": {
          "$ref": "#/definitions/ContactPoint"
        },
        "valueCount": {
          "$ref": "#/definitions/Count"
        },
        "valueDistance": {
          "$ref": "#/definitions/Distance"
        },
        "valueDuration": {
          "$ref": "#/definitions/Duration"
        },
        "valueHumanName": {
          "$ref": "#/definitions/HumanName"
        },
        "valueIdentifier": {
          "$ref": "#/definitions/Identifier"
        },
        "valueMoney": {
          "$ref": "#/definitions/Money"
        },
        "valuePeriod": {
          "$ref": "#/definitions/Period"
        },
        "valueQuantity": {
          "$ref": "#/definitions/Quantity"
        },
        "valueRange": {
          "$ref": "#/definitions/Range"
        },
        "valueRatio": {
          "$ref": "#/definitions/Ratio"
        },
        "valueReference": {
          "$ref": "#/definitions/Reference"
        },
        "valueSampledData": {
          "$ref": "#/definitions/SampledData"
        },
        "valueSignature": {
          "$ref": "#/definitions/Signature"
        },
        "valueTiming": {
          "$ref": "#/definitions/Timing"
        },
        "valueContactDetail": {
          "$ref": "#/definitions/ContactDetail"
        },
        "valueContributor": {
          "$ref": "#/definitions/Contributor"
        },
        "valueDataRequirement": {
          "$ref": "#/definitions/DataRequirement"
        },
        "valueExpression": {
          "$ref": "#/definitions/Expression"
        },
        "valueParameterDefinition": {
          "$ref": "#/definitions/ParameterDefinition"
        },
        "valueRelatedArtifact": {
          "$ref": "#/definitions/RelatedArtifact"
        },
        "valueTriggerDefinition": {
          "$ref": "#/definitions/TriggerDefinition"
        },
        "valueUsageContext": {
          "$ref": "#/definitions/UsageContext"
        },
        "valueDosage": {
          "$ref": "#/definitions/Dosage"
        },
        "valueMeta": {
          "$ref": "#/definitions/Meta"
        }
      }
    },
    "Parameters": {
      "description": "Operation Request or Response",
      "pattern": "Parameters",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "parameter": {
          "description": "Operation Parameter",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParametersParameterComponent"
          }
        }
      }
    },
    "PatientCommunicationComponent": {
      "description": "A language which may be used to communicate with the patient about his or her health",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "language": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "preferred": {
          "description": "Language preference indicator",
          "type": "boolean"
        }
      }
    },
    "PatientContactComponent": {
      "description": "A contact party (e.g. guardian, partner, friend) for the patient",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "address": {
          "$ref": "#/definitions/Address"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "gender": {
          "description": "male | female | other | unknown",
          "type": "string"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "$ref": "#/definitions/HumanName"
        },
        "organization": {
          "$ref": "#/definitions/Reference"
        },
        "period": {
          "$ref": "#/definitions/Period"
        },
        "relationship": {
          "description": "The kind of relationship",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "telecom": {
          "description": "A contact detail for the person",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactPoint"
          }
        }
      }
    },
    "PatientLinkComponent": {
      "description": "Link to another patient resource that concerns the same actual person",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "other": {
          "$ref": "#/definitions/Reference"
        },
        "type": {
          "description": "replaced-by | replaces | refer | seealso",
          "type": "string"
        }
      }
    },
    "Patient": {
      "description": "Information about an individual or animal receiving health care services",
      "pattern": "Patient",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "active": {
          "description": "Whether this patient's record is in active use",
          "type": "boolean"
        },
        "address": {
          "description": "An address for the individual",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Address"
          }
        },
        "birthDate": {
          "description": "The date of birth for the individual",
          "type": "string"
        },
        "communication": {
          "description": "A language which may be used to communicate with the patient about his or her health",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PatientCommunicationComponent"
          }
        },
        "contact": {
          "description": "A contact party (e.g. guardian, partner, friend) for the patient",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PatientContactComponent"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "deceasedBoolean": {
          "description": "Indicates if the individual is deceased or not",
          "type": "boolean"
        },
        "deceasedDateTime": {
          "description": "Indicates if the individual is deceased or not",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "gender": {
          "description": "male | female | other | unknown",
          "type": "string"
        },
        "generalPractitioner": {
          "description": "Patient's nominated primary care provider",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "An identifier for this patient",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "link": {
          "description": "Link to another patient resource that concerns the same actual person",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PatientLinkComponent"
          }
        },
        "managingOrganization": {
          "$ref": "#/definitions/Reference"
        },
        "maritalStatus": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "multipleBirthBoolean": {
          "description": "Whether patient is part of a multiple birth",
          "type": "boolean"
        },
        "multipleBirthInteger": {
          "format": "int32",
          "description": "Whether patient is part of a multiple birth",
          "type": "integer"
        },
        "name": {
          "description": "A name associated with the patient",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HumanName"
          }
        },
        "photo": {
          "description": "Image of the patient",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Attachment"
          }
        },
        "telecom": {
          "description": "A contact detail for the individual",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactPoint"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "PaymentNotice": {
      "description": "PaymentNotice request",
      "pattern": "PaymentNotice",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Money"
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "created": {
          "description": "Creation date",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Business Identifier for the payment noctice",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "payee": {
          "$ref": "#/definitions/Reference"
        },
        "payment": {
          "$ref": "#/definitions/Reference"
        },
        "paymentDate": {
          "description": "Payment or clearing date",
          "type": "string"
        },
        "paymentStatus": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "provider": {
          "$ref": "#/definitions/Reference"
        },
        "recipient": {
          "$ref": "#/definitions/Reference"
        },
        "request": {
          "$ref": "#/definitions/Reference"
        },
        "response": {
          "$ref": "#/definitions/Reference"
        },
        "status": {
          "description": "active | cancelled | draft | entered-in-error",
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "PaymentReconciliationDetailsComponent": {
      "description": "Settlement particulars",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Money"
        },
        "date": {
          "description": "Date of commitment to pay",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "identifier": {
          "$ref": "#/definitions/Identifier"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "payee": {
          "$ref": "#/definitions/Reference"
        },
        "predecessor": {
          "$ref": "#/definitions/Identifier"
        },
        "request": {
          "$ref": "#/definitions/Reference"
        },
        "response": {
          "$ref": "#/definitions/Reference"
        },
        "responsible": {
          "$ref": "#/definitions/Reference"
        },
        "submitter": {
          "$ref": "#/definitions/Reference"
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "PaymentReconciliationNotesComponent": {
      "description": "Note concerning processing",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "text": {
          "description": "Note explanatory text",
          "type": "string"
        },
        "type": {
          "description": "display | print | printoper",
          "type": "string"
        }
      }
    },
    "PaymentReconciliation": {
      "description": "PaymentReconciliation resource",
      "pattern": "PaymentReconciliation",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "created": {
          "description": "Creation date",
          "type": "string"
        },
        "detail": {
          "description": "Settlement particulars",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PaymentReconciliationDetailsComponent"
          }
        },
        "disposition": {
          "description": "Disposition message",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "formCode": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Business Identifier for a payment reconciliation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "outcome": {
          "description": "queued | complete | error | partial",
          "type": "string"
        },
        "paymentAmount": {
          "$ref": "#/definitions/Money"
        },
        "paymentDate": {
          "description": "When payment issued",
          "type": "string"
        },
        "paymentIdentifier": {
          "$ref": "#/definitions/Identifier"
        },
        "paymentIssuer": {
          "$ref": "#/definitions/Reference"
        },
        "period": {
          "$ref": "#/definitions/Period"
        },
        "processNote": {
          "description": "Note concerning processing",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PaymentReconciliationNotesComponent"
          }
        },
        "request": {
          "$ref": "#/definitions/Reference"
        },
        "requestor": {
          "$ref": "#/definitions/Reference"
        },
        "status": {
          "description": "active | cancelled | draft | entered-in-error",
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "PersonLinkComponent": {
      "description": "Link to a resource that concerns the same actual person",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "assurance": {
          "description": "level1 | level2 | level3 | level4",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "target": {
          "$ref": "#/definitions/Reference"
        }
      }
    },
    "Person": {
      "description": "A generic person record",
      "pattern": "Person",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "active": {
          "description": "This person's record is in active use",
          "type": "boolean"
        },
        "address": {
          "description": "One or more addresses for the person",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Address"
          }
        },
        "birthDate": {
          "description": "The date on which the person was born",
          "type": "string"
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "gender": {
          "description": "male | female | other | unknown",
          "type": "string"
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "A human identifier for this person",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "link": {
          "description": "Link to a resource that concerns the same actual person",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PersonLinkComponent"
          }
        },
        "managingOrganization": {
          "$ref": "#/definitions/Reference"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "A name associated with the person",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HumanName"
          }
        },
        "photo": {
          "$ref": "#/definitions/Attachment"
        },
        "telecom": {
          "description": "A contact detail for the person",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactPoint"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "PlanDefinitionConditionComponent": {
      "description": "Whether or not the action is applicable",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "expression": {
          "$ref": "#/definitions/Expression"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "kind": {
          "description": "applicability | start | stop",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "PlanDefinitionDynamicValueComponent": {
      "description": "Dynamic aspects of the definition",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "expression": {
          "$ref": "#/definitions/Expression"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "path": {
          "description": "The path to the element to be set dynamically",
          "type": "string"
        }
      }
    },
    "PlanDefinitionParticipantComponent": {
      "description": "Who should participate in the action",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "role": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "type": {
          "description": "patient | practitioner | related-person | device",
          "type": "string"
        }
      }
    },
    "PlanDefinitionRelatedActionComponent": {
      "description": "Relationship to another action",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "actionId": {
          "description": "What action is this related to",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "offsetDuration": {
          "$ref": "#/definitions/Duration"
        },
        "offsetRange": {
          "$ref": "#/definitions/Range"
        },
        "relationship": {
          "description": "before-start | before | before-end | concurrent-with-start | concurrent | concurrent-with-end | after-start | after | after-end",
          "type": "string"
        }
      }
    },
    "PlanDefinitionActionComponent": {
      "description": "Action defined by the plan",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "action": {
          "description": "A sub-action",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlanDefinitionActionComponent"
          }
        },
        "cardinalityBehavior": {
          "description": "single | multiple",
          "type": "string"
        },
        "code": {
          "description": "Code representing the meaning of the action or sub-actions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "condition": {
          "description": "Whether or not the action is applicable",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlanDefinitionConditionComponent"
          }
        },
        "definitionCanonical": {
          "description": "Description of the activity to be performed",
          "type": "string"
        },
        "definitionUri": {
          "description": "Description of the activity to be performed",
          "type": "string"
        },
        "description": {
          "description": "Brief description of the action",
          "type": "string"
        },
        "documentation": {
          "description": "Supporting documentation for the intended performer of the action",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedArtifact"
          }
        },
        "dynamicValue": {
          "description": "Dynamic aspects of the definition",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlanDefinitionDynamicValueComponent"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "goalId": {
          "description": "What goals this action supports",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groupingBehavior": {
          "description": "visual-group | logical-group | sentence-group",
          "type": "string"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "input": {
          "description": "Input data requirements",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataRequirement"
          }
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "output": {
          "description": "Output data definition",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataRequirement"
          }
        },
        "participant": {
          "description": "Who should participate in the action",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlanDefinitionParticipantComponent"
          }
        },
        "precheckBehavior": {
          "description": "yes | no",
          "type": "string"
        },
        "prefix": {
          "description": "User-visible prefix for the action (e.g. 1. or A.)",
          "type": "string"
        },
        "priority": {
          "description": "routine | urgent | asap | stat",
          "type": "string"
        },
        "reason": {
          "description": "Why the action should be performed",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "relatedAction": {
          "description": "Relationship to another action",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlanDefinitionRelatedActionComponent"
          }
        },
        "requiredBehavior": {
          "description": "must | could | must-unless-documented",
          "type": "string"
        },
        "selectionBehavior": {
          "description": "any | all | all-or-none | exactly-one | at-most-one | one-or-more",
          "type": "string"
        },
        "subjectCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "subjectReference": {
          "$ref": "#/definitions/Reference"
        },
        "textEquivalent": {
          "description": "Static text equivalent of the action, used if the dynamic aspects cannot be interpreted by the receiving system",
          "type": "string"
        },
        "timingDateTime": {
          "description": "When the action should take place",
          "type": "string"
        },
        "timingAge": {
          "$ref": "#/definitions/Age"
        },
        "timingPeriod": {
          "$ref": "#/definitions/Period"
        },
        "timingDuration": {
          "$ref": "#/definitions/Duration"
        },
        "timingRange": {
          "$ref": "#/definitions/Range"
        },
        "timingTiming": {
          "$ref": "#/definitions/Timing"
        },
        "title": {
          "description": "User-visible title",
          "type": "string"
        },
        "transform": {
          "description": "Transform to apply the template",
          "type": "string"
        },
        "trigger": {
          "description": "When the action should be triggered",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TriggerDefinition"
          }
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "PlanDefinitionTargetComponent": {
      "description": "Target outcome for the goal",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "detailQuantity": {
          "$ref": "#/definitions/Quantity"
        },
        "detailRange": {
          "$ref": "#/definitions/Range"
        },
        "detailCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "due": {
          "$ref": "#/definitions/Duration"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "measure": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "PlanDefinitionGoalComponent": {
      "description": "What the plan is trying to accomplish",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "addresses": {
          "description": "What does the goal address",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "category": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "description": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "documentation": {
          "description": "Supporting documentation for the goal",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedArtifact"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "priority": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "start": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "target": {
          "description": "Target outcome for the goal",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlanDefinitionTargetComponent"
          }
        }
      }
    },
    "PlanDefinition": {
      "description": "The definition of a plan for a series of actions, independent of any specific patient or context",
      "pattern": "PlanDefinition",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "action": {
          "description": "Action defined by the plan",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlanDefinitionActionComponent"
          }
        },
        "approvalDate": {
          "description": "When the plan definition was approved by publisher",
          "type": "string"
        },
        "author": {
          "description": "Who authored the content",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "contact": {
          "description": "Contact details for the publisher",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "copyright": {
          "description": "Use and/or publishing restrictions",
          "type": "string"
        },
        "date": {
          "description": "Date last changed",
          "type": "string"
        },
        "description": {
          "description": "Natural language description of the plan definition",
          "type": "string"
        },
        "editor": {
          "description": "Who edited the content",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "effectivePeriod": {
          "$ref": "#/definitions/Period"
        },
        "endorser": {
          "description": "Who endorsed the content",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "experimental": {
          "description": "For testing purposes, not real usage",
          "type": "boolean"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "goal": {
          "description": "What the plan is trying to accomplish",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlanDefinitionGoalComponent"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Additional identifier for the plan definition",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "jurisdiction": {
          "description": "Intended jurisdiction for plan definition (if applicable)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "lastReviewDate": {
          "description": "When the plan definition was last reviewed",
          "type": "string"
        },
        "library": {
          "description": "Logic used by the plan definition",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Name for this plan definition (computer friendly)",
          "type": "string"
        },
        "publisher": {
          "description": "Name of the publisher (organization or individual)",
          "type": "string"
        },
        "purpose": {
          "description": "Why this plan definition is defined",
          "type": "string"
        },
        "relatedArtifact": {
          "description": "Additional documentation, citations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedArtifact"
          }
        },
        "reviewer": {
          "description": "Who reviewed the content",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "status": {
          "description": "draft | active | retired | unknown",
          "type": "string"
        },
        "subjectCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "subjectReference": {
          "$ref": "#/definitions/Reference"
        },
        "subtitle": {
          "description": "Subordinate title of the plan definition",
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "title": {
          "description": "Name for this plan definition (human friendly)",
          "type": "string"
        },
        "topic": {
          "description": "E.g. Education, Treatment, Assessment",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "url": {
          "description": "Canonical identifier for this plan definition, represented as a URI (globally unique)",
          "type": "string"
        },
        "usage": {
          "description": "Describes the clinical usage of the plan",
          "type": "string"
        },
        "useContext": {
          "description": "The context that the content is intended to support",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UsageContext"
          }
        },
        "version": {
          "description": "Business version of the plan definition",
          "type": "string"
        }
      }
    },
    "PractitionerQualificationComponent": {
      "description": "Certification, licenses, or training pertaining to the provision of care",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "code": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "identifier": {
          "description": "An identifier for this qualification for the practitioner",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "issuer": {
          "$ref": "#/definitions/Reference"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "period": {
          "$ref": "#/definitions/Period"
        }
      }
    },
    "Practitioner": {
      "description": "A person with a  formal responsibility in the provisioning of healthcare or related services",
      "pattern": "Practitioner",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "active": {
          "description": "Whether this practitioner's record is in active use",
          "type": "boolean"
        },
        "address": {
          "description": "Address(es) of the practitioner that are not role specific (typically home address)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Address"
          }
        },
        "birthDate": {
          "description": "The date  on which the practitioner was born",
          "type": "string"
        },
        "communication": {
          "description": "A language the practitioner can use in patient communication",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "gender": {
          "description": "male | female | other | unknown",
          "type": "string"
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "An identifier for the person as this agent",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "The name(s) associated with the practitioner",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HumanName"
          }
        },
        "photo": {
          "description": "Image of the person",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Attachment"
          }
        },
        "qualification": {
          "description": "Certification, licenses, or training pertaining to the provision of care",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PractitionerQualificationComponent"
          }
        },
        "telecom": {
          "description": "A contact detail for the practitioner (that apply to all roles)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactPoint"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "PractitionerRoleAvailableTimeComponent": {
      "description": "Times the Service Site is available",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "allDay": {
          "description": "Always available? e.g. 24 hour service",
          "type": "boolean"
        },
        "availableEndTime": {
          "description": "Closing time of day (ignored if allDay = true)",
          "type": "string"
        },
        "availableStartTime": {
          "description": "Opening time of day (ignored if allDay = true)",
          "type": "string"
        },
        "daysOfWeek": {
          "description": "mon | tue | wed | thu | fri | sat | sun",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "PractitionerRoleNotAvailableComponent": {
      "description": "Not available during this time due to provided reason",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "description": {
          "description": "Reason presented to the user explaining why time not available",
          "type": "string"
        },
        "during": {
          "$ref": "#/definitions/Period"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "PractitionerRole": {
      "description": "Roles/organizations the practitioner is associated with",
      "pattern": "PractitionerRole",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "active": {
          "description": "Whether this practitioner role record is in active use",
          "type": "boolean"
        },
        "availabilityExceptions": {
          "description": "Description of availability exceptions",
          "type": "string"
        },
        "availableTime": {
          "description": "Times the Service Site is available",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PractitionerRoleAvailableTimeComponent"
          }
        },
        "code": {
          "description": "Roles which this practitioner may perform",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "endpoint": {
          "description": "Technical endpoints providing access to services operated for the practitioner with this role",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "healthcareService": {
          "description": "The list of healthcare services that this worker provides for this role's Organization/Location(s)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Business Identifiers that are specific to a role/location",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "location": {
          "description": "The location(s) at which this practitioner provides care",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "notAvailable": {
          "description": "Not available during this time due to provided reason",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PractitionerRoleNotAvailableComponent"
          }
        },
        "organization": {
          "$ref": "#/definitions/Reference"
        },
        "period": {
          "$ref": "#/definitions/Period"
        },
        "practitioner": {
          "$ref": "#/definitions/Reference"
        },
        "specialty": {
          "description": "Specific specialty of the practitioner",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "telecom": {
          "description": "Contact details that are specific to the role/location/service",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactPoint"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "ProcedureFocalDeviceComponent": {
      "description": "Manipulated, implanted, or removed device",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "action": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "manipulated": {
          "$ref": "#/definitions/Reference"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "ProcedurePerformerComponent": {
      "description": "The people who performed the procedure",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "actor": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "function": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "onBehalfOf": {
          "$ref": "#/definitions/Reference"
        }
      }
    },
    "Procedure": {
      "description": "An action that is being or was performed on a patient",
      "pattern": "Procedure",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "asserter": {
          "$ref": "#/definitions/Reference"
        },
        "basedOn": {
          "description": "A request for this procedure",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "bodySite": {
          "description": "Target body sites",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "category": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "code": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "complication": {
          "description": "Complication following the procedure",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "complicationDetail": {
          "description": "A condition that is a result of the procedure",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "encounter": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "focalDevice": {
          "description": "Manipulated, implanted, or removed device",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcedureFocalDeviceComponent"
          }
        },
        "followUp": {
          "description": "Instructions for follow up",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "External Identifiers for this procedure",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "instantiatesCanonical": {
          "description": "Instantiates FHIR protocol or definition",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "instantiatesUri": {
          "description": "Instantiates external protocol or definition",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/Reference"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "note": {
          "description": "Additional information about the procedure",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "outcome": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "partOf": {
          "description": "Part of referenced event",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "performedDateTime": {
          "description": "When the procedure was performed",
          "type": "string"
        },
        "performedPeriod": {
          "$ref": "#/definitions/Period"
        },
        "performedString": {
          "description": "When the procedure was performed",
          "type": "string"
        },
        "performedAge": {
          "$ref": "#/definitions/Age"
        },
        "performedRange": {
          "$ref": "#/definitions/Range"
        },
        "performer": {
          "description": "The people who performed the procedure",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcedurePerformerComponent"
          }
        },
        "reasonCode": {
          "description": "Coded reason procedure performed",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "reasonReference": {
          "description": "The justification that the procedure was performed",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "recorder": {
          "$ref": "#/definitions/Reference"
        },
        "report": {
          "description": "Any report resulting from the procedure",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "status": {
          "description": "preparation | in-progress | not-done | on-hold | stopped | completed | entered-in-error | unknown",
          "type": "string"
        },
        "statusReason": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "subject": {
          "$ref": "#/definitions/Reference"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "usedCode": {
          "description": "Coded items used during the procedure",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "usedReference": {
          "description": "Items used during procedure",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        }
      }
    },
    "ProvenanceAgentComponent": {
      "description": "Actor involved",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "onBehalfOf": {
          "$ref": "#/definitions/Reference"
        },
        "role": {
          "description": "What the agents role was",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "who": {
          "$ref": "#/definitions/Reference"
        }
      }
    },
    "ProvenanceEntityComponent": {
      "description": "An entity used in this activity",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "agent": {
          "description": "Entity is attributed to this agent",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProvenanceAgentComponent"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "role": {
          "description": "derivation | revision | quotation | source | removal",
          "type": "string"
        },
        "what": {
          "$ref": "#/definitions/Reference"
        }
      }
    },
    "Provenance": {
      "description": "Who, What, When for a set of resources",
      "pattern": "Provenance",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "activity": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "agent": {
          "description": "Actor involved",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProvenanceAgentComponent"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "entity": {
          "description": "An entity used in this activity",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProvenanceEntityComponent"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/Reference"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "occurredPeriod": {
          "$ref": "#/definitions/Period"
        },
        "occurredDateTime": {
          "description": "When the activity occurred",
          "type": "string"
        },
        "policy": {
          "description": "Policy or plan the activity was defined by",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "reason": {
          "description": "Reason the activity is occurring",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "recorded": {
          "description": "When the activity was recorded / updated",
          "type": "string"
        },
        "signature": {
          "description": "Signature on target",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Signature"
          }
        },
        "target": {
          "description": "Target Reference(s) (usually version specific)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "QuestionnaireAnswerOptionComponent": {
      "description": "Permitted answer",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "initialSelected": {
          "description": "Whether option is selected by default",
          "type": "boolean"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "valueInteger": {
          "format": "int32",
          "description": "Answer value",
          "type": "integer"
        },
        "valueDate": {
          "description": "Answer value",
          "type": "string"
        },
        "valueTime": {
          "description": "Answer value",
          "type": "string"
        },
        "valueString": {
          "description": "Answer value",
          "type": "string"
        },
        "valueCoding": {
          "$ref": "#/definitions/Coding"
        },
        "valueReference": {
          "$ref": "#/definitions/Reference"
        }
      }
    },
    "QuestionnaireEnableWhenComponent": {
      "description": "Only allow data when",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "answerBoolean": {
          "description": "Value for question comparison based on operator",
          "type": "boolean"
        },
        "answerDecimal": {
          "format": "double",
          "description": "Value for question comparison based on operator",
          "type": "number"
        },
        "answerInteger": {
          "format": "int32",
          "description": "Value for question comparison based on operator",
          "type": "integer"
        },
        "answerDate": {
          "description": "Value for question comparison based on operator",
          "type": "string"
        },
        "answerDateTime": {
          "description": "Value for question comparison based on operator",
          "type": "string"
        },
        "answerTime": {
          "description": "Value for question comparison based on operator",
          "type": "string"
        },
        "answerString": {
          "description": "Value for question comparison based on operator",
          "type": "string"
        },
        "answerCoding": {
          "$ref": "#/definitions/Coding"
        },
        "answerQuantity": {
          "$ref": "#/definitions/Quantity"
        },
        "answerReference": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "operator": {
          "description": "exists | = | != | > | < | >= | <=",
          "type": "string"
        },
        "question": {
          "description": "Question that determines whether item is enabled",
          "type": "string"
        }
      }
    },
    "QuestionnaireInitialComponent": {
      "description": "Initial value(s) when item is first rendered",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "valueBoolean": {
          "description": "Actual value for initializing the question",
          "type": "boolean"
        },
        "valueDecimal": {
          "format": "double",
          "description": "Actual value for initializing the question",
          "type": "number"
        },
        "valueInteger": {
          "format": "int32",
          "description": "Actual value for initializing the question",
          "type": "integer"
        },
        "valueDate": {
          "description": "Actual value for initializing the question",
          "type": "string"
        },
        "valueDateTime": {
          "description": "Actual value for initializing the question",
          "type": "string"
        },
        "valueTime": {
          "description": "Actual value for initializing the question",
          "type": "string"
        },
        "valueString": {
          "description": "Actual value for initializing the question",
          "type": "string"
        },
        "valueUri": {
          "description": "Actual value for initializing the question",
          "type": "string"
        },
        "valueAttachment": {
          "$ref": "#/definitions/Attachment"
        },
        "valueCoding": {
          "$ref": "#/definitions/Coding"
        },
        "valueQuantity": {
          "$ref": "#/definitions/Quantity"
        },
        "valueReference": {
          "$ref": "#/definitions/Reference"
        }
      }
    },
    "QuestionnaireItemComponent": {
      "description": "Questions and sections within the Questionnaire",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "answerOption": {
          "description": "Permitted answer",
          "type": "array",
          "items": {
            "$ref": "#/definitions/QuestionnaireAnswerOptionComponent"
          }
        },
        "answerValueSet": {
          "description": "Valueset containing permitted answers",
          "type": "string"
        },
        "code": {
          "description": "Corresponding concept for this item in a terminology",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Coding"
          }
        },
        "definition": {
          "description": "ElementDefinition - details for the item",
          "type": "string"
        },
        "enableBehavior": {
          "description": "all | any",
          "type": "string"
        },
        "enableWhen": {
          "description": "Only allow data when",
          "type": "array",
          "items": {
            "$ref": "#/definitions/QuestionnaireEnableWhenComponent"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "initial": {
          "description": "Initial value(s) when item is first rendered",
          "type": "array",
          "items": {
            "$ref": "#/definitions/QuestionnaireInitialComponent"
          }
        },
        "item": {
          "description": "Nested questionnaire items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/QuestionnaireItemComponent"
          }
        },
        "linkId": {
          "description": "Unique id for item in questionnaire",
          "type": "string"
        },
        "maxLength": {
          "format": "int32",
          "description": "No more than this many characters",
          "type": "integer"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "prefix": {
          "description": "E.g. \"1(a)\", \"2.5.3\"",
          "type": "string"
        },
        "readOnly": {
          "description": "Don't allow human editing",
          "type": "boolean"
        },
        "repeats": {
          "description": "Whether the item may repeat",
          "type": "boolean"
        },
        "required": {
          "description": "Whether the item must be included in data results",
          "type": "boolean"
        },
        "text": {
          "description": "Primary text for the item",
          "type": "string"
        },
        "type": {
          "description": "group | display | boolean | decimal | integer | date | dateTime +",
          "type": "string"
        }
      }
    },
    "Questionnaire": {
      "description": "A structured set of questions",
      "pattern": "Questionnaire",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "approvalDate": {
          "description": "When the questionnaire was approved by publisher",
          "type": "string"
        },
        "code": {
          "description": "Concept that represents the overall questionnaire",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Coding"
          }
        },
        "contact": {
          "description": "Contact details for the publisher",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "copyright": {
          "description": "Use and/or publishing restrictions",
          "type": "string"
        },
        "date": {
          "description": "Date last changed",
          "type": "string"
        },
        "derivedFrom": {
          "description": "Instantiates protocol or definition",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "description": "Natural language description of the questionnaire",
          "type": "string"
        },
        "effectivePeriod": {
          "$ref": "#/definitions/Period"
        },
        "experimental": {
          "description": "For testing purposes, not real usage",
          "type": "boolean"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Additional identifier for the questionnaire",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "item": {
          "description": "Questions and sections within the Questionnaire",
          "type": "array",
          "items": {
            "$ref": "#/definitions/QuestionnaireItemComponent"
          }
        },
        "jurisdiction": {
          "description": "Intended jurisdiction for questionnaire (if applicable)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "lastReviewDate": {
          "description": "When the questionnaire was last reviewed",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Name for this questionnaire (computer friendly)",
          "type": "string"
        },
        "publisher": {
          "description": "Name of the publisher (organization or individual)",
          "type": "string"
        },
        "purpose": {
          "description": "Why this questionnaire is defined",
          "type": "string"
        },
        "status": {
          "description": "draft | active | retired | unknown",
          "type": "string"
        },
        "subjectType": {
          "description": "Resource that can be subject of QuestionnaireResponse",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "title": {
          "description": "Name for this questionnaire (human friendly)",
          "type": "string"
        },
        "url": {
          "description": "Canonical identifier for this questionnaire, represented as a URI (globally unique)",
          "type": "string"
        },
        "useContext": {
          "description": "The context that the content is intended to support",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UsageContext"
          }
        },
        "version": {
          "description": "Business version of the questionnaire",
          "type": "string"
        }
      }
    },
    "QuestionnaireResponseAnswerComponent": {
      "description": "The response(s) to the question",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "item": {
          "description": "Nested groups and questions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/QuestionnaireResponseItemComponent"
          }
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "valueBoolean": {
          "description": "Single-valued answer to the question",
          "type": "boolean"
        },
        "valueDecimal": {
          "format": "double",
          "description": "Single-valued answer to the question",
          "type": "number"
        },
        "valueInteger": {
          "format": "int32",
          "description": "Single-valued answer to the question",
          "type": "integer"
        },
        "valueDate": {
          "description": "Single-valued answer to the question",
          "type": "string"
        },
        "valueDateTime": {
          "description": "Single-valued answer to the question",
          "type": "string"
        },
        "valueTime": {
          "description": "Single-valued answer to the question",
          "type": "string"
        },
        "valueString": {
          "description": "Single-valued answer to the question",
          "type": "string"
        },
        "valueUri": {
          "description": "Single-valued answer to the question",
          "type": "string"
        },
        "valueAttachment": {
          "$ref": "#/definitions/Attachment"
        },
        "valueCoding": {
          "$ref": "#/definitions/Coding"
        },
        "valueQuantity": {
          "$ref": "#/definitions/Quantity"
        },
        "valueReference": {
          "$ref": "#/definitions/Reference"
        }
      }
    },
    "QuestionnaireResponseItemComponent": {
      "description": "Groups and questions",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "answer": {
          "description": "The response(s) to the question",
          "type": "array",
          "items": {
            "$ref": "#/definitions/QuestionnaireResponseAnswerComponent"
          }
        },
        "definition": {
          "description": "ElementDefinition - details for the item",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "item": {
          "description": "Nested questionnaire response items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/QuestionnaireResponseItemComponent"
          }
        },
        "linkId": {
          "description": "Pointer to specific item from Questionnaire",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "text": {
          "description": "Name for group or question text",
          "type": "string"
        }
      }
    },
    "QuestionnaireResponse": {
      "description": "A structured set of questions and their answers",
      "pattern": "QuestionnaireResponse",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "author": {
          "$ref": "#/definitions/Reference"
        },
        "authored": {
          "description": "Date the answers were gathered",
          "type": "string"
        },
        "basedOn": {
          "description": "Request fulfilled by this QuestionnaireResponse",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "encounter": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "$ref": "#/definitions/Identifier"
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "item": {
          "description": "Groups and questions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/QuestionnaireResponseItemComponent"
          }
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "partOf": {
          "description": "Part of this action",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "questionnaire": {
          "description": "Form being answered",
          "type": "string"
        },
        "source": {
          "$ref": "#/definitions/Reference"
        },
        "status": {
          "description": "in-progress | completed | amended | entered-in-error | stopped",
          "type": "string"
        },
        "subject": {
          "$ref": "#/definitions/Reference"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "RelatedPersonCommunicationComponent": {
      "description": "A language which may be used to communicate with about the patient's health",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "language": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "preferred": {
          "description": "Language preference indicator",
          "type": "boolean"
        }
      }
    },
    "RelatedPerson": {
      "description": "A person that is related to a patient, but who is not a direct target of care",
      "pattern": "RelatedPerson",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "active": {
          "description": "Whether this related person's record is in active use",
          "type": "boolean"
        },
        "address": {
          "description": "Address where the related person can be contacted or visited",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Address"
          }
        },
        "birthDate": {
          "description": "The date on which the related person was born",
          "type": "string"
        },
        "communication": {
          "description": "A language which may be used to communicate with about the patient's health",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedPersonCommunicationComponent"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "gender": {
          "description": "male | female | other | unknown",
          "type": "string"
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "A human identifier for this person",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "A name associated with the person",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HumanName"
          }
        },
        "patient": {
          "$ref": "#/definitions/Reference"
        },
        "period": {
          "$ref": "#/definitions/Period"
        },
        "photo": {
          "description": "Image of the person",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Attachment"
          }
        },
        "relationship": {
          "description": "The nature of the relationship",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "telecom": {
          "description": "A contact detail for the person",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactPoint"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "RequestGroupConditionComponent": {
      "description": "Whether or not the action is applicable",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "expression": {
          "$ref": "#/definitions/Expression"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "kind": {
          "description": "applicability | start | stop",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "RequestGroupRelatedActionComponent": {
      "description": "Relationship to another action",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "actionId": {
          "description": "What action this is related to",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "offsetDuration": {
          "$ref": "#/definitions/Duration"
        },
        "offsetRange": {
          "$ref": "#/definitions/Range"
        },
        "relationship": {
          "description": "before-start | before | before-end | concurrent-with-start | concurrent | concurrent-with-end | after-start | after | after-end",
          "type": "string"
        }
      }
    },
    "RequestGroupActionComponent": {
      "description": "Proposed actions, if any",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "action": {
          "description": "Sub action",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RequestGroupActionComponent"
          }
        },
        "cardinalityBehavior": {
          "description": "single | multiple",
          "type": "string"
        },
        "code": {
          "description": "Code representing the meaning of the action or sub-actions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "condition": {
          "description": "Whether or not the action is applicable",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RequestGroupConditionComponent"
          }
        },
        "description": {
          "description": "Short description of the action",
          "type": "string"
        },
        "documentation": {
          "description": "Supporting documentation for the intended performer of the action",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedArtifact"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "groupingBehavior": {
          "description": "visual-group | logical-group | sentence-group",
          "type": "string"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "participant": {
          "description": "Who should perform the action",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "precheckBehavior": {
          "description": "yes | no",
          "type": "string"
        },
        "prefix": {
          "description": "User-visible prefix for the action (e.g. 1. or A.)",
          "type": "string"
        },
        "priority": {
          "description": "routine | urgent | asap | stat",
          "type": "string"
        },
        "relatedAction": {
          "description": "Relationship to another action",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RequestGroupRelatedActionComponent"
          }
        },
        "requiredBehavior": {
          "description": "must | could | must-unless-documented",
          "type": "string"
        },
        "resource": {
          "$ref": "#/definitions/Reference"
        },
        "selectionBehavior": {
          "description": "any | all | all-or-none | exactly-one | at-most-one | one-or-more",
          "type": "string"
        },
        "textEquivalent": {
          "description": "Static text equivalent of the action, used if the dynamic aspects cannot be interpreted by the receiving system",
          "type": "string"
        },
        "timingDateTime": {
          "description": "When the action should take place",
          "type": "string"
        },
        "timingAge": {
          "$ref": "#/definitions/Age"
        },
        "timingPeriod": {
          "$ref": "#/definitions/Period"
        },
        "timingDuration": {
          "$ref": "#/definitions/Duration"
        },
        "timingRange": {
          "$ref": "#/definitions/Range"
        },
        "timingTiming": {
          "$ref": "#/definitions/Timing"
        },
        "title": {
          "description": "User-visible title",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "RequestGroup": {
      "description": "A group of related requests",
      "pattern": "RequestGroup",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "action": {
          "description": "Proposed actions, if any",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RequestGroupActionComponent"
          }
        },
        "author": {
          "$ref": "#/definitions/Reference"
        },
        "authoredOn": {
          "description": "When the request group was authored",
          "type": "string"
        },
        "basedOn": {
          "description": "Fulfills plan, proposal, or order",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "code": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "encounter": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "groupIdentifier": {
          "$ref": "#/definitions/Identifier"
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Business identifier",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "instantiatesCanonical": {
          "description": "Instantiates FHIR protocol or definition",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "instantiatesUri": {
          "description": "Instantiates external protocol or definition",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "intent": {
          "description": "proposal | plan | directive | order | original-order | reflex-order | filler-order | instance-order | option",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "note": {
          "description": "Additional notes about the response",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "priority": {
          "description": "routine | urgent | asap | stat",
          "type": "string"
        },
        "reasonCode": {
          "description": "Why the request group is needed",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "reasonReference": {
          "description": "Why the request group is needed",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "replaces": {
          "description": "Request(s) replaced by this request",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "status": {
          "description": "draft | active | on-hold | revoked | completed | entered-in-error | unknown",
          "type": "string"
        },
        "subject": {
          "$ref": "#/definitions/Reference"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "ResearchDefinition": {
      "description": "A research context or question",
      "pattern": "ResearchDefinition",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "approvalDate": {
          "description": "When the research definition was approved by publisher",
          "type": "string"
        },
        "author": {
          "description": "Who authored the content",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "comment": {
          "description": "Used for footnotes or explanatory notes",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "contact": {
          "description": "Contact details for the publisher",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "copyright": {
          "description": "Use and/or publishing restrictions",
          "type": "string"
        },
        "date": {
          "description": "Date last changed",
          "type": "string"
        },
        "description": {
          "description": "Natural language description of the research definition",
          "type": "string"
        },
        "editor": {
          "description": "Who edited the content",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "effectivePeriod": {
          "$ref": "#/definitions/Period"
        },
        "endorser": {
          "description": "Who endorsed the content",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "experimental": {
          "description": "For testing purposes, not real usage",
          "type": "boolean"
        },
        "exposure": {
          "$ref": "#/definitions/Reference"
        },
        "exposureAlternative": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Additional identifier for the research definition",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "jurisdiction": {
          "description": "Intended jurisdiction for research definition (if applicable)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "lastReviewDate": {
          "description": "When the research definition was last reviewed",
          "type": "string"
        },
        "library": {
          "description": "Logic used by the ResearchDefinition",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Name for this research definition (computer friendly)",
          "type": "string"
        },
        "outcome": {
          "$ref": "#/definitions/Reference"
        },
        "population": {
          "$ref": "#/definitions/Reference"
        },
        "publisher": {
          "description": "Name of the publisher (organization or individual)",
          "type": "string"
        },
        "purpose": {
          "description": "Why this research definition is defined",
          "type": "string"
        },
        "relatedArtifact": {
          "description": "Additional documentation, citations, etc.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedArtifact"
          }
        },
        "reviewer": {
          "description": "Who reviewed the content",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "shortTitle": {
          "description": "Title for use in informal contexts",
          "type": "string"
        },
        "status": {
          "description": "draft | active | retired | unknown",
          "type": "string"
        },
        "subjectCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "subjectReference": {
          "$ref": "#/definitions/Reference"
        },
        "subtitle": {
          "description": "Subordinate title of the ResearchDefinition",
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "title": {
          "description": "Name for this research definition (human friendly)",
          "type": "string"
        },
        "topic": {
          "description": "The category of the ResearchDefinition, such as Education, Treatment, Assessment, etc.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "url": {
          "description": "Canonical identifier for this research definition, represented as a URI (globally unique)",
          "type": "string"
        },
        "usage": {
          "description": "Describes the clinical usage of the ResearchDefinition",
          "type": "string"
        },
        "useContext": {
          "description": "The context that the content is intended to support",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UsageContext"
          }
        },
        "version": {
          "description": "Business version of the research definition",
          "type": "string"
        }
      }
    },
    "ResearchElementDefinitionCharacteristicComponent": {
      "description": "What defines the members of the research element",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "definitionCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "definitionCanonical": {
          "description": "What code or expression defines members?",
          "type": "string"
        },
        "definitionExpression": {
          "$ref": "#/definitions/Expression"
        },
        "definitionDataRequirement": {
          "$ref": "#/definitions/DataRequirement"
        },
        "exclude": {
          "description": "Whether the characteristic includes or excludes members",
          "type": "boolean"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "participantEffectiveDateTime": {
          "description": "What time period do participants cover",
          "type": "string"
        },
        "participantEffectivePeriod": {
          "$ref": "#/definitions/Period"
        },
        "participantEffectiveDuration": {
          "$ref": "#/definitions/Duration"
        },
        "participantEffectiveTiming": {
          "$ref": "#/definitions/Timing"
        },
        "participantEffectiveDescription": {
          "description": "What time period do participants cover",
          "type": "string"
        },
        "participantEffectiveGroupMeasure": {
          "description": "mean | median | mean-of-mean | mean-of-median | median-of-mean | median-of-median",
          "type": "string"
        },
        "participantEffectiveTimeFromStart": {
          "$ref": "#/definitions/Duration"
        },
        "studyEffectiveDateTime": {
          "description": "What time period does the study cover",
          "type": "string"
        },
        "studyEffectivePeriod": {
          "$ref": "#/definitions/Period"
        },
        "studyEffectiveDuration": {
          "$ref": "#/definitions/Duration"
        },
        "studyEffectiveTiming": {
          "$ref": "#/definitions/Timing"
        },
        "studyEffectiveDescription": {
          "description": "What time period does the study cover",
          "type": "string"
        },
        "studyEffectiveGroupMeasure": {
          "description": "mean | median | mean-of-mean | mean-of-median | median-of-mean | median-of-median",
          "type": "string"
        },
        "studyEffectiveTimeFromStart": {
          "$ref": "#/definitions/Duration"
        },
        "unitOfMeasure": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "usageContext": {
          "description": "What code/value pairs define members?",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UsageContext"
          }
        }
      }
    },
    "ResearchElementDefinition": {
      "description": "A population, intervention, or exposure definition",
      "pattern": "ResearchElementDefinition",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "approvalDate": {
          "description": "When the research element definition was approved by publisher",
          "type": "string"
        },
        "author": {
          "description": "Who authored the content",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "characteristic": {
          "description": "What defines the members of the research element",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResearchElementDefinitionCharacteristicComponent"
          }
        },
        "comment": {
          "description": "Used for footnotes or explanatory notes",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "contact": {
          "description": "Contact details for the publisher",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "copyright": {
          "description": "Use and/or publishing restrictions",
          "type": "string"
        },
        "date": {
          "description": "Date last changed",
          "type": "string"
        },
        "description": {
          "description": "Natural language description of the research element definition",
          "type": "string"
        },
        "editor": {
          "description": "Who edited the content",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "effectivePeriod": {
          "$ref": "#/definitions/Period"
        },
        "endorser": {
          "description": "Who endorsed the content",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "experimental": {
          "description": "For testing purposes, not real usage",
          "type": "boolean"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Additional identifier for the research element definition",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "jurisdiction": {
          "description": "Intended jurisdiction for research element definition (if applicable)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "lastReviewDate": {
          "description": "When the research element definition was last reviewed",
          "type": "string"
        },
        "library": {
          "description": "Logic used by the ResearchElementDefinition",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Name for this research element definition (computer friendly)",
          "type": "string"
        },
        "publisher": {
          "description": "Name of the publisher (organization or individual)",
          "type": "string"
        },
        "purpose": {
          "description": "Why this research element definition is defined",
          "type": "string"
        },
        "relatedArtifact": {
          "description": "Additional documentation, citations, etc.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedArtifact"
          }
        },
        "reviewer": {
          "description": "Who reviewed the content",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "shortTitle": {
          "description": "Title for use in informal contexts",
          "type": "string"
        },
        "status": {
          "description": "draft | active | retired | unknown",
          "type": "string"
        },
        "subjectCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "subjectReference": {
          "$ref": "#/definitions/Reference"
        },
        "subtitle": {
          "description": "Subordinate title of the ResearchElementDefinition",
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "title": {
          "description": "Name for this research element definition (human friendly)",
          "type": "string"
        },
        "topic": {
          "description": "The category of the ResearchElementDefinition, such as Education, Treatment, Assessment, etc.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "type": {
          "description": "population | exposure | outcome",
          "type": "string"
        },
        "url": {
          "description": "Canonical identifier for this research element definition, represented as a URI (globally unique)",
          "type": "string"
        },
        "usage": {
          "description": "Describes the clinical usage of the ResearchElementDefinition",
          "type": "string"
        },
        "useContext": {
          "description": "The context that the content is intended to support",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UsageContext"
          }
        },
        "variableType": {
          "description": "dichotomous | continuous | descriptive",
          "type": "string"
        },
        "version": {
          "description": "Business version of the research element definition",
          "type": "string"
        }
      }
    },
    "ResearchStudyArmComponent": {
      "description": "Defined path through the study for a subject",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "description": {
          "description": "Short explanation of study path",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Label for study arm",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "ResearchStudyObjectiveComponent": {
      "description": "A goal for the study",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Label for the objective",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "ResearchStudy": {
      "description": "Investigation to increase healthcare-related patient-independent knowledge",
      "pattern": "ResearchStudy",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "arm": {
          "description": "Defined path through the study for a subject",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResearchStudyArmComponent"
          }
        },
        "category": {
          "description": "Classifications for the study",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "condition": {
          "description": "Condition being studied",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "contact": {
          "description": "Contact details for the study",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "description": {
          "description": "What this is study doing",
          "type": "string"
        },
        "enrollment": {
          "description": "Inclusion & exclusion criteria",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "focus": {
          "description": "Drugs, devices, etc. under study",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Business Identifier for study",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "keyword": {
          "description": "Used to search for the study",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "location": {
          "description": "Geographic region(s) for study",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "note": {
          "description": "Comments made about the study",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "objective": {
          "description": "A goal for the study",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResearchStudyObjectiveComponent"
          }
        },
        "partOf": {
          "description": "Part of larger study",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "period": {
          "$ref": "#/definitions/Period"
        },
        "phase": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "primaryPurposeType": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "principalInvestigator": {
          "$ref": "#/definitions/Reference"
        },
        "protocol": {
          "description": "Steps followed in executing study",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "reasonStopped": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "relatedArtifact": {
          "description": "References and dependencies",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedArtifact"
          }
        },
        "site": {
          "description": "Facility where study activities are conducted",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "sponsor": {
          "$ref": "#/definitions/Reference"
        },
        "status": {
          "description": "active | administratively-completed | approved | closed-to-accrual | closed-to-accrual-and-intervention | completed | disapproved | in-review | temporarily-closed-to-accrual | temporarily-closed-to-accrual-and-intervention | withdrawn",
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "title": {
          "description": "Name for this study",
          "type": "string"
        }
      }
    },
    "ResearchSubject": {
      "description": "Physical entity which is the primary unit of interest in the study",
      "pattern": "ResearchSubject",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "actualArm": {
          "description": "What path was followed",
          "type": "string"
        },
        "assignedArm": {
          "description": "What path should be followed",
          "type": "string"
        },
        "consent": {
          "$ref": "#/definitions/Reference"
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Business Identifier for research subject in a study",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "individual": {
          "$ref": "#/definitions/Reference"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "period": {
          "$ref": "#/definitions/Period"
        },
        "status": {
          "description": "candidate | eligible | follow-up | ineligible | not-registered | off-study | on-study | on-study-intervention | on-study-observation | pending-on-study | potential-candidate | screening | withdrawn",
          "type": "string"
        },
        "study": {
          "$ref": "#/definitions/Reference"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "Resource": {
      "description": "Base Resource",
      "required": [
        "resourceType"
      ],
      "type": "object",
      "properties": {
        "resourceType": {
          "description": "Resource type name",
          "type": "string"
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        }
      },
      "discriminator": "resourceType"
    },
    "RiskAssessmentPredictionComponent": {
      "description": "Outcome predicted",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "outcome": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "probabilityDecimal": {
          "format": "double",
          "description": "Likelihood of specified outcome",
          "type": "number"
        },
        "probabilityRange": {
          "$ref": "#/definitions/Range"
        },
        "qualitativeRisk": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "rationale": {
          "description": "Explanation of prediction",
          "type": "string"
        },
        "relativeRisk": {
          "format": "double",
          "description": "Relative likelihood",
          "type": "number"
        },
        "whenPeriod": {
          "$ref": "#/definitions/Period"
        },
        "whenRange": {
          "$ref": "#/definitions/Range"
        }
      }
    },
    "RiskAssessment": {
      "description": "Potential outcomes for a subject with likelihood",
      "pattern": "RiskAssessment",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "basedOn": {
          "$ref": "#/definitions/Reference"
        },
        "basis": {
          "description": "Information used in assessment",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "code": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "condition": {
          "$ref": "#/definitions/Reference"
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "encounter": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Unique identifier for the assessment",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "method": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "mitigation": {
          "description": "How to reduce risk",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "note": {
          "description": "Comments on the risk assessment",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "occurrenceDateTime": {
          "description": "When was assessment made?",
          "type": "string"
        },
        "occurrencePeriod": {
          "$ref": "#/definitions/Period"
        },
        "parent": {
          "$ref": "#/definitions/Reference"
        },
        "performer": {
          "$ref": "#/definitions/Reference"
        },
        "prediction": {
          "description": "Outcome predicted",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RiskAssessmentPredictionComponent"
          }
        },
        "reasonCode": {
          "description": "Why the assessment was necessary?",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "reasonReference": {
          "description": "Why the assessment was necessary?",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "status": {
          "description": "registered | preliminary | final | amended +",
          "type": "string"
        },
        "subject": {
          "$ref": "#/definitions/Reference"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "RiskEvidenceSynthesisCertaintySubcomponentComponent": {
      "description": "A component that contributes to the overall certainty",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "note": {
          "description": "Used for footnotes or explanatory notes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "rating": {
          "description": "Subcomponent certainty rating",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "RiskEvidenceSynthesisCertaintyComponent": {
      "description": "How certain is the risk",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "certaintySubcomponent": {
          "description": "A component that contributes to the overall certainty",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RiskEvidenceSynthesisCertaintySubcomponentComponent"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "note": {
          "description": "Used for footnotes or explanatory notes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "rating": {
          "description": "Certainty rating",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        }
      }
    },
    "RiskEvidenceSynthesisPrecisionEstimateComponent": {
      "description": "How precise the estimate is",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "from": {
          "format": "double",
          "description": "Lower bound",
          "type": "number"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "level": {
          "format": "double",
          "description": "Level of confidence interval",
          "type": "number"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "to": {
          "format": "double",
          "description": "Upper bound",
          "type": "number"
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "RiskEvidenceSynthesisRiskEstimateComponent": {
      "description": "What was the estimated risk",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "denominatorCount": {
          "format": "int32",
          "description": "Sample size for group measured",
          "type": "integer"
        },
        "description": {
          "description": "Description of risk estimate",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "numeratorCount": {
          "format": "int32",
          "description": "Number with the outcome",
          "type": "integer"
        },
        "precisionEstimate": {
          "description": "How precise the estimate is",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RiskEvidenceSynthesisPrecisionEstimateComponent"
          }
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "unitOfMeasure": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "value": {
          "format": "double",
          "description": "Point estimate",
          "type": "number"
        }
      }
    },
    "RiskEvidenceSynthesisSampleSizeComponent": {
      "description": "What sample size was involved?",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "description": {
          "description": "Description of sample size",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "numberOfParticipants": {
          "format": "int32",
          "description": "How many participants?",
          "type": "integer"
        },
        "numberOfStudies": {
          "format": "int32",
          "description": "How many studies?",
          "type": "integer"
        }
      }
    },
    "RiskEvidenceSynthesis": {
      "description": "A quantified estimate of risk based on a body of evidence",
      "pattern": "RiskEvidenceSynthesis",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "approvalDate": {
          "description": "When the risk evidence synthesis was approved by publisher",
          "type": "string"
        },
        "author": {
          "description": "Who authored the content",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "certainty": {
          "description": "How certain is the risk",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RiskEvidenceSynthesisCertaintyComponent"
          }
        },
        "contact": {
          "description": "Contact details for the publisher",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "copyright": {
          "description": "Use and/or publishing restrictions",
          "type": "string"
        },
        "date": {
          "description": "Date last changed",
          "type": "string"
        },
        "description": {
          "description": "Natural language description of the risk evidence synthesis",
          "type": "string"
        },
        "editor": {
          "description": "Who edited the content",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "effectivePeriod": {
          "$ref": "#/definitions/Period"
        },
        "endorser": {
          "description": "Who endorsed the content",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "exposure": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Additional identifier for the risk evidence synthesis",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "jurisdiction": {
          "description": "Intended jurisdiction for risk evidence synthesis (if applicable)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "lastReviewDate": {
          "description": "When the risk evidence synthesis was last reviewed",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Name for this risk evidence synthesis (computer friendly)",
          "type": "string"
        },
        "note": {
          "description": "Used for footnotes or explanatory notes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "outcome": {
          "$ref": "#/definitions/Reference"
        },
        "population": {
          "$ref": "#/definitions/Reference"
        },
        "publisher": {
          "description": "Name of the publisher (organization or individual)",
          "type": "string"
        },
        "relatedArtifact": {
          "description": "Additional documentation, citations, etc.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedArtifact"
          }
        },
        "reviewer": {
          "description": "Who reviewed the content",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "riskEstimate": {
          "$ref": "#/definitions/RiskEvidenceSynthesisRiskEstimateComponent"
        },
        "sampleSize": {
          "$ref": "#/definitions/RiskEvidenceSynthesisSampleSizeComponent"
        },
        "status": {
          "description": "draft | active | retired | unknown",
          "type": "string"
        },
        "studyType": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "synthesisType": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "title": {
          "description": "Name for this risk evidence synthesis (human friendly)",
          "type": "string"
        },
        "topic": {
          "description": "The category of the EffectEvidenceSynthesis, such as Education, Treatment, Assessment, etc.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "url": {
          "description": "Canonical identifier for this risk evidence synthesis, represented as a URI (globally unique)",
          "type": "string"
        },
        "useContext": {
          "description": "The context that the content is intended to support",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UsageContext"
          }
        },
        "version": {
          "description": "Business version of the risk evidence synthesis",
          "type": "string"
        }
      }
    },
    "Schedule": {
      "description": "A container for slots of time that may be available for booking appointments",
      "pattern": "Schedule",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "active": {
          "description": "Whether this schedule is in active use",
          "type": "boolean"
        },
        "actor": {
          "description": "Resource(s) that availability information is being provided for",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "comment": {
          "description": "Comments on availability",
          "type": "string"
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "External Ids for this item",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "planningHorizon": {
          "$ref": "#/definitions/Period"
        },
        "serviceCategory": {
          "description": "High-level category",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "serviceType": {
          "description": "Specific service",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "specialty": {
          "description": "Type of specialty needed",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "SearchParameterComponentComponent": {
      "description": "For Composite resources to define the parts",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "definition": {
          "description": "Defines how the part works",
          "type": "string"
        },
        "expression": {
          "description": "Subexpression relative to main expression",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "SearchParameter": {
      "description": "Search parameter for a resource",
      "pattern": "SearchParameter",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "base": {
          "description": "The resource type(s) this search parameter applies to",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "chain": {
          "description": "Chained names supported",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "code": {
          "description": "Code used in URL",
          "type": "string"
        },
        "comparator": {
          "description": "eq | ne | gt | lt | ge | le | sa | eb | ap",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "component": {
          "description": "For Composite resources to define the parts",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SearchParameterComponentComponent"
          }
        },
        "contact": {
          "description": "Contact details for the publisher",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "date": {
          "description": "Date last changed",
          "type": "string"
        },
        "derivedFrom": {
          "description": "Original definition for the search parameter",
          "type": "string"
        },
        "description": {
          "description": "Natural language description of the search parameter",
          "type": "string"
        },
        "experimental": {
          "description": "For testing purposes, not real usage",
          "type": "boolean"
        },
        "expression": {
          "description": "FHIRPath expression that extracts the values",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "jurisdiction": {
          "description": "Intended jurisdiction for search parameter (if applicable)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifier": {
          "description": "missing | exact | contains | not | text | in | not-in | below | above | type | identifier | ofType",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "multipleAnd": {
          "description": "Allow multiple parameters (and)",
          "type": "boolean"
        },
        "multipleOr": {
          "description": "Allow multiple values per parameter (or)",
          "type": "boolean"
        },
        "name": {
          "description": "Name for this search parameter (computer friendly)",
          "type": "string"
        },
        "publisher": {
          "description": "Name of the publisher (organization or individual)",
          "type": "string"
        },
        "purpose": {
          "description": "Why this search parameter is defined",
          "type": "string"
        },
        "status": {
          "description": "draft | active | retired | unknown",
          "type": "string"
        },
        "target": {
          "description": "Types of resource (if a resource reference)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "type": {
          "description": "number | date | string | token | reference | composite | quantity | uri | special",
          "type": "string"
        },
        "url": {
          "description": "Canonical identifier for this search parameter, represented as a URI (globally unique)",
          "type": "string"
        },
        "useContext": {
          "description": "The context that the content is intended to support",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UsageContext"
          }
        },
        "version": {
          "description": "Business version of the search parameter",
          "type": "string"
        },
        "xpath": {
          "description": "XPath that extracts the values",
          "type": "string"
        },
        "xpathUsage": {
          "description": "normal | phonetic | nearby | distance | other",
          "type": "string"
        }
      }
    },
    "ServiceRequest": {
      "description": "A request for a service to be performed",
      "pattern": "ServiceRequest",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "asNeededBoolean": {
          "description": "Preconditions for service",
          "type": "boolean"
        },
        "asNeededCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "authoredOn": {
          "description": "Date request signed",
          "type": "string"
        },
        "basedOn": {
          "description": "What request fulfills",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "bodySite": {
          "description": "Location on Body",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "category": {
          "description": "Classification of service",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "code": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "doNotPerform": {
          "description": "True if service/procedure should not be performed",
          "type": "boolean"
        },
        "encounter": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Identifiers assigned to this order",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "instantiatesCanonical": {
          "description": "Instantiates FHIR protocol or definition",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "instantiatesUri": {
          "description": "Instantiates external protocol or definition",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "insurance": {
          "description": "Associated insurance coverage",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "intent": {
          "description": "proposal | plan | directive | order | original-order | reflex-order | filler-order | instance-order | option",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "locationCode": {
          "description": "Requested location",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "locationReference": {
          "description": "Requested location",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "note": {
          "description": "Comments",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "occurrenceDateTime": {
          "description": "When service should occur",
          "type": "string"
        },
        "occurrencePeriod": {
          "$ref": "#/definitions/Period"
        },
        "occurrenceTiming": {
          "$ref": "#/definitions/Timing"
        },
        "orderDetail": {
          "description": "Additional order information",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "patientInstruction": {
          "description": "Patient or consumer-oriented instructions",
          "type": "string"
        },
        "performer": {
          "description": "Requested performer",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "performerType": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "priority": {
          "description": "routine | urgent | asap | stat",
          "type": "string"
        },
        "quantityQuantity": {
          "$ref": "#/definitions/Quantity"
        },
        "quantityRatio": {
          "$ref": "#/definitions/Ratio"
        },
        "quantityRange": {
          "$ref": "#/definitions/Range"
        },
        "reasonCode": {
          "description": "Explanation/Justification for procedure or service",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "reasonReference": {
          "description": "Explanation/Justification for service or service",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "relevantHistory": {
          "description": "Request provenance",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "replaces": {
          "description": "What request replaces",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "requester": {
          "$ref": "#/definitions/Reference"
        },
        "requisition": {
          "$ref": "#/definitions/Identifier"
        },
        "specimen": {
          "description": "Procedure Samples",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "status": {
          "description": "draft | active | on-hold | revoked | completed | entered-in-error | unknown",
          "type": "string"
        },
        "subject": {
          "$ref": "#/definitions/Reference"
        },
        "supportingInfo": {
          "description": "Additional clinical information",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "Slot": {
      "description": "A slot of time on a schedule that may be available for booking appointments",
      "pattern": "Slot",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "appointmentType": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "comment": {
          "description": "Comments on the slot to describe any extended information. Such as custom constraints on the slot",
          "type": "string"
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "end": {
          "description": "Date/Time that the slot is to conclude",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "External Ids for this item",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "overbooked": {
          "description": "This slot has already been overbooked, appointments are unlikely to be accepted for this time",
          "type": "boolean"
        },
        "schedule": {
          "$ref": "#/definitions/Reference"
        },
        "serviceCategory": {
          "description": "A broad categorization of the service that is to be performed during this appointment",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "serviceType": {
          "description": "The type of appointments that can be booked into this slot (ideally this would be an identifiable service - which is at a location, rather than the location itself). If provided then this overrides the value provided on the availability resource",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "specialty": {
          "description": "The specialty of a practitioner that would be required to perform the service requested in this appointment",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "start": {
          "description": "Date/Time that the slot is to begin",
          "type": "string"
        },
        "status": {
          "description": "busy | free | busy-unavailable | busy-tentative | entered-in-error",
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "SpecimenCollectionComponent": {
      "description": "Collection details",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "bodySite": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "collectedDateTime": {
          "description": "Collection time",
          "type": "string"
        },
        "collectedPeriod": {
          "$ref": "#/definitions/Period"
        },
        "collector": {
          "$ref": "#/definitions/Reference"
        },
        "duration": {
          "$ref": "#/definitions/Duration"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "fastingStatusCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "fastingStatusDuration": {
          "$ref": "#/definitions/Duration"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "method": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "quantity": {
          "$ref": "#/definitions/Quantity"
        }
      }
    },
    "SpecimenContainerComponent": {
      "description": "Direct container of specimen (tube/slide, etc.)",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "additiveCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "additiveReference": {
          "$ref": "#/definitions/Reference"
        },
        "capacity": {
          "$ref": "#/definitions/Quantity"
        },
        "description": {
          "description": "Textual description of the container",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "identifier": {
          "description": "Id for the container",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "specimenQuantity": {
          "$ref": "#/definitions/Quantity"
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "SpecimenProcessingComponent": {
      "description": "Processing and processing step details",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "additive": {
          "description": "Material used in the processing step",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "description": {
          "description": "Textual description of procedure",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "procedure": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "timeDateTime": {
          "description": "Date and time of specimen processing",
          "type": "string"
        },
        "timePeriod": {
          "$ref": "#/definitions/Period"
        }
      }
    },
    "Specimen": {
      "description": "Sample for analysis",
      "pattern": "Specimen",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "accessionIdentifier": {
          "$ref": "#/definitions/Identifier"
        },
        "collection": {
          "$ref": "#/definitions/SpecimenCollectionComponent"
        },
        "condition": {
          "description": "State of the specimen",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "container": {
          "description": "Direct container of specimen (tube/slide, etc.)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SpecimenContainerComponent"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "External Identifier",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "note": {
          "description": "Comments",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "parent": {
          "description": "Specimen from which this specimen originated",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "processing": {
          "description": "Processing and processing step details",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SpecimenProcessingComponent"
          }
        },
        "receivedTime": {
          "description": "The time when specimen was received for processing",
          "type": "string"
        },
        "request": {
          "description": "Why the specimen was collected",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "status": {
          "description": "available | unavailable | unsatisfactory | entered-in-error",
          "type": "string"
        },
        "subject": {
          "$ref": "#/definitions/Reference"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "SpecimenDefinitionAdditiveComponent": {
      "description": "Additive associated with container",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "additiveCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "additiveReference": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "SpecimenDefinitionContainerComponent": {
      "description": "The specimen's container",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "additive": {
          "description": "Additive associated with container",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SpecimenDefinitionAdditiveComponent"
          }
        },
        "cap": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "capacity": {
          "$ref": "#/definitions/Quantity"
        },
        "description": {
          "description": "Container description",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "material": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "minimumVolumeQuantity": {
          "$ref": "#/definitions/Quantity"
        },
        "minimumVolumeString": {
          "description": "Minimum volume",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "preparation": {
          "description": "Specimen container preparation",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "SpecimenDefinitionHandlingComponent": {
      "description": "Specimen handling before testing",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "instruction": {
          "description": "Preservation instruction",
          "type": "string"
        },
        "maxDuration": {
          "$ref": "#/definitions/Duration"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "temperatureQualifier": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "temperatureRange": {
          "$ref": "#/definitions/Range"
        }
      }
    },
    "SpecimenDefinitionTypeTestedComponent": {
      "description": "Specimen in container intended for testing by lab",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "container": {
          "$ref": "#/definitions/SpecimenDefinitionContainerComponent"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "handling": {
          "description": "Specimen handling before testing",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SpecimenDefinitionHandlingComponent"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "isDerived": {
          "description": "Primary or secondary specimen",
          "type": "boolean"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "preference": {
          "description": "preferred | alternate",
          "type": "string"
        },
        "rejectionCriterion": {
          "description": "Rejection criterion",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "requirement": {
          "description": "Specimen requirements",
          "type": "string"
        },
        "retentionTime": {
          "$ref": "#/definitions/Duration"
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "SpecimenDefinition": {
      "description": "Kind of specimen",
      "pattern": "SpecimenDefinition",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "collection": {
          "description": "Specimen collection procedure",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "$ref": "#/definitions/Identifier"
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "patientPreparation": {
          "description": "Patient preparation for collection",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "timeAspect": {
          "description": "Time aspect for collection",
          "type": "string"
        },
        "typeCollected": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "typeTested": {
          "description": "Specimen in container intended for testing by lab",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SpecimenDefinitionTypeTestedComponent"
          }
        }
      }
    },
    "StructureDefinitionContextComponent": {
      "description": "If an extension, where it can be used in instances",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "expression": {
          "description": "Where the extension can be used in instances",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "type": {
          "description": "fhirpath | element | extension",
          "type": "string"
        }
      }
    },
    "StructureDefinitionDifferentialComponent": {
      "description": "Differential view of the structure",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "element": {
          "description": "Definition of elements in the resource (if no StructureDefinition)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ElementDefinition"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "StructureDefinitionMappingComponent": {
      "description": "External specification that the content is mapped to",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "comment": {
          "description": "Versions, Issues, Scope limitations etc.",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "identity": {
          "description": "Internal id when this mapping is used",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Names what this mapping refers to",
          "type": "string"
        },
        "uri": {
          "description": "Identifies what this mapping refers to",
          "type": "string"
        }
      }
    },
    "StructureDefinitionSnapshotComponent": {
      "description": "Snapshot view of the structure",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "element": {
          "description": "Definition of elements in the resource (if no StructureDefinition)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ElementDefinition"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "StructureDefinition": {
      "description": "Structural Definition",
      "pattern": "StructureDefinition",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "abstract": {
          "description": "Whether the structure is abstract",
          "type": "boolean"
        },
        "baseDefinition": {
          "description": "Definition that this type is constrained/specialized from",
          "type": "string"
        },
        "contact": {
          "description": "Contact details for the publisher",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "context": {
          "description": "If an extension, where it can be used in instances",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StructureDefinitionContextComponent"
          }
        },
        "contextInvariant": {
          "description": "FHIRPath invariants - when the extension can be used",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "copyright": {
          "description": "Use and/or publishing restrictions",
          "type": "string"
        },
        "date": {
          "description": "Date last changed",
          "type": "string"
        },
        "derivation": {
          "description": "specialization | constraint - How relates to base definition",
          "type": "string"
        },
        "description": {
          "description": "Natural language description of the structure definition",
          "type": "string"
        },
        "differential": {
          "$ref": "#/definitions/StructureDefinitionDifferentialComponent"
        },
        "experimental": {
          "description": "For testing purposes, not real usage",
          "type": "boolean"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "fhirVersion": {
          "description": "FHIR Version this StructureDefinition targets",
          "type": "string"
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Additional identifier for the structure definition",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "jurisdiction": {
          "description": "Intended jurisdiction for structure definition (if applicable)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "keyword": {
          "description": "Assist with indexing and finding",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Coding"
          }
        },
        "kind": {
          "description": "primitive-type | complex-type | resource | logical",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "mapping": {
          "description": "External specification that the content is mapped to",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StructureDefinitionMappingComponent"
          }
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Name for this structure definition (computer friendly)",
          "type": "string"
        },
        "publisher": {
          "description": "Name of the publisher (organization or individual)",
          "type": "string"
        },
        "purpose": {
          "description": "Why this structure definition is defined",
          "type": "string"
        },
        "snapshot": {
          "$ref": "#/definitions/StructureDefinitionSnapshotComponent"
        },
        "status": {
          "description": "draft | active | retired | unknown",
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "title": {
          "description": "Name for this structure definition (human friendly)",
          "type": "string"
        },
        "type": {
          "description": "Type defined or constrained by this structure",
          "type": "string"
        },
        "url": {
          "description": "Canonical identifier for this structure definition, represented as a URI (globally unique)",
          "type": "string"
        },
        "useContext": {
          "description": "The context that the content is intended to support",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UsageContext"
          }
        },
        "version": {
          "description": "Business version of the structure definition",
          "type": "string"
        }
      }
    },
    "StructureMapInputComponent": {
      "description": "Named instance provided when invoking the map",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "documentation": {
          "description": "Documentation for this instance of data",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "mode": {
          "description": "source | target",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Name for this instance of data",
          "type": "string"
        },
        "type": {
          "description": "Type for this instance of data",
          "type": "string"
        }
      }
    },
    "StructureMapDependentComponent": {
      "description": "Which other rules to apply in the context of this rule",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Name of a rule or group to apply",
          "type": "string"
        },
        "variable": {
          "description": "Variable to pass to the rule or group",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "StructureMapSourceComponent": {
      "description": "Source inputs to the mapping",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "check": {
          "description": "FHIRPath expression  - must be true or the mapping engine throws an error instead of completing",
          "type": "string"
        },
        "condition": {
          "description": "FHIRPath expression  - must be true or the rule does not apply",
          "type": "string"
        },
        "context": {
          "description": "Type or variable this rule applies to",
          "type": "string"
        },
        "defaultValueBase64Binary": {
          "format": "byte",
          "description": "Default value if no value exists",
          "type": "string"
        },
        "defaultValueBoolean": {
          "description": "Default value if no value exists",
          "type": "boolean"
        },
        "defaultValueCanonical": {
          "description": "Default value if no value exists",
          "type": "string"
        },
        "defaultValueCode": {
          "description": "Default value if no value exists",
          "type": "string"
        },
        "defaultValueDate": {
          "description": "Default value if no value exists",
          "type": "string"
        },
        "defaultValueDateTime": {
          "description": "Default value if no value exists",
          "type": "string"
        },
        "defaultValueDecimal": {
          "format": "double",
          "description": "Default value if no value exists",
          "type": "number"
        },
        "defaultValueId": {
          "description": "Default value if no value exists",
          "type": "string"
        },
        "defaultValueInstant": {
          "description": "Default value if no value exists",
          "type": "string"
        },
        "defaultValueInteger": {
          "format": "int32",
          "description": "Default value if no value exists",
          "type": "integer"
        },
        "defaultValueMarkdown": {
          "description": "Default value if no value exists",
          "type": "string"
        },
        "defaultValueOid": {
          "description": "Default value if no value exists",
          "type": "string"
        },
        "defaultValuePositiveInt": {
          "format": "int32",
          "description": "Default value if no value exists",
          "type": "integer"
        },
        "defaultValueString": {
          "description": "Default value if no value exists",
          "type": "string"
        },
        "defaultValueTime": {
          "description": "Default value if no value exists",
          "type": "string"
        },
        "defaultValueUnsignedInt": {
          "format": "int32",
          "description": "Default value if no value exists",
          "type": "integer"
        },
        "defaultValueUri": {
          "description": "Default value if no value exists",
          "type": "string"
        },
        "defaultValueUrl": {
          "description": "Default value if no value exists",
          "type": "string"
        },
        "defaultValueUuid": {
          "description": "Default value if no value exists",
          "type": "string"
        },
        "defaultValueAddress": {
          "$ref": "#/definitions/Address"
        },
        "defaultValueAge": {
          "$ref": "#/definitions/Age"
        },
        "defaultValueAnnotation": {
          "$ref": "#/definitions/Annotation"
        },
        "defaultValueAttachment": {
          "$ref": "#/definitions/Attachment"
        },
        "defaultValueCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "defaultValueCoding": {
          "$ref": "#/definitions/Coding"
        },
        "defaultValueContactPoint": {
          "$ref": "#/definitions/ContactPoint"
        },
        "defaultValueCount": {
          "$ref": "#/definitions/Count"
        },
        "defaultValueDistance": {
          "$ref": "#/definitions/Distance"
        },
        "defaultValueDuration": {
          "$ref": "#/definitions/Duration"
        },
        "defaultValueHumanName": {
          "$ref": "#/definitions/HumanName"
        },
        "defaultValueIdentifier": {
          "$ref": "#/definitions/Identifier"
        },
        "defaultValueMoney": {
          "$ref": "#/definitions/Money"
        },
        "defaultValuePeriod": {
          "$ref": "#/definitions/Period"
        },
        "defaultValueQuantity": {
          "$ref": "#/definitions/Quantity"
        },
        "defaultValueRange": {
          "$ref": "#/definitions/Range"
        },
        "defaultValueRatio": {
          "$ref": "#/definitions/Ratio"
        },
        "defaultValueReference": {
          "$ref": "#/definitions/Reference"
        },
        "defaultValueSampledData": {
          "$ref": "#/definitions/SampledData"
        },
        "defaultValueSignature": {
          "$ref": "#/definitions/Signature"
        },
        "defaultValueTiming": {
          "$ref": "#/definitions/Timing"
        },
        "defaultValueContactDetail": {
          "$ref": "#/definitions/ContactDetail"
        },
        "defaultValueContributor": {
          "$ref": "#/definitions/Contributor"
        },
        "defaultValueDataRequirement": {
          "$ref": "#/definitions/DataRequirement"
        },
        "defaultValueExpression": {
          "$ref": "#/definitions/Expression"
        },
        "defaultValueParameterDefinition": {
          "$ref": "#/definitions/ParameterDefinition"
        },
        "defaultValueRelatedArtifact": {
          "$ref": "#/definitions/RelatedArtifact"
        },
        "defaultValueTriggerDefinition": {
          "$ref": "#/definitions/TriggerDefinition"
        },
        "defaultValueUsageContext": {
          "$ref": "#/definitions/UsageContext"
        },
        "defaultValueDosage": {
          "$ref": "#/definitions/Dosage"
        },
        "defaultValueMeta": {
          "$ref": "#/definitions/Meta"
        },
        "element": {
          "description": "Optional field for this source",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "listMode": {
          "description": "first | not_first | last | not_last | only_one",
          "type": "string"
        },
        "logMessage": {
          "description": "Message to put in log if source exists (FHIRPath)",
          "type": "string"
        },
        "max": {
          "description": "Specified maximum cardinality (number or *)",
          "type": "string"
        },
        "min": {
          "format": "int32",
          "description": "Specified minimum cardinality",
          "type": "integer"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "type": {
          "description": "Rule only applies if source has this type",
          "type": "string"
        },
        "variable": {
          "description": "Named context for field, if a field is specified",
          "type": "string"
        }
      }
    },
    "StructureMapParameterComponent": {
      "description": "Parameters to the transform",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "valueId": {
          "description": "Parameter value - variable or literal",
          "type": "string"
        },
        "valueString": {
          "description": "Parameter value - variable or literal",
          "type": "string"
        },
        "valueBoolean": {
          "description": "Parameter value - variable or literal",
          "type": "boolean"
        },
        "valueInteger": {
          "format": "int32",
          "description": "Parameter value - variable or literal",
          "type": "integer"
        },
        "valueDecimal": {
          "format": "double",
          "description": "Parameter value - variable or literal",
          "type": "number"
        }
      }
    },
    "StructureMapTargetComponent": {
      "description": "Content to create because of this mapping rule",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "context": {
          "description": "Type or variable this rule applies to",
          "type": "string"
        },
        "contextType": {
          "description": "type | variable",
          "type": "string"
        },
        "element": {
          "description": "Field to create in the context",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "listMode": {
          "description": "first | share | last | collate",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "listRuleId": {
          "description": "Internal rule reference for shared list items",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "parameter": {
          "description": "Parameters to the transform",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StructureMapParameterComponent"
          }
        },
        "transform": {
          "description": "create | copy +",
          "type": "string"
        },
        "variable": {
          "description": "Named context for field, if desired, and a field is specified",
          "type": "string"
        }
      }
    },
    "StructureMapRuleComponent": {
      "description": "Transform Rule from source to target",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "dependent": {
          "description": "Which other rules to apply in the context of this rule",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StructureMapDependentComponent"
          }
        },
        "documentation": {
          "description": "Documentation for this instance of data",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Name of the rule for internal references",
          "type": "string"
        },
        "rule": {
          "description": "Rules contained in this rule",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StructureMapRuleComponent"
          }
        },
        "source": {
          "description": "Source inputs to the mapping",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StructureMapSourceComponent"
          }
        },
        "target": {
          "description": "Content to create because of this mapping rule",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StructureMapTargetComponent"
          }
        }
      }
    },
    "StructureMapGroupComponent": {
      "description": "Named sections for reader convenience",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "documentation": {
          "description": "Additional description/explanation for group",
          "type": "string"
        },
        "extends": {
          "description": "Another group that this group adds rules to",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "input": {
          "description": "Named instance provided when invoking the map",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StructureMapInputComponent"
          }
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Human-readable label",
          "type": "string"
        },
        "rule": {
          "description": "Transform Rule from source to target",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StructureMapRuleComponent"
          }
        },
        "typeMode": {
          "description": "none | types | type-and-types",
          "type": "string"
        }
      }
    },
    "StructureMapStructureComponent": {
      "description": "Structure Definition used by this map",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "alias": {
          "description": "Name for type in this map",
          "type": "string"
        },
        "documentation": {
          "description": "Documentation on use of structure",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "mode": {
          "description": "source | queried | target | produced",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "url": {
          "description": "Canonical reference to structure definition",
          "type": "string"
        }
      }
    },
    "StructureMap": {
      "description": "A Map of relationships between 2 structures that can be used to transform data",
      "pattern": "StructureMap",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "contact": {
          "description": "Contact details for the publisher",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "copyright": {
          "description": "Use and/or publishing restrictions",
          "type": "string"
        },
        "date": {
          "description": "Date last changed",
          "type": "string"
        },
        "description": {
          "description": "Natural language description of the structure map",
          "type": "string"
        },
        "experimental": {
          "description": "For testing purposes, not real usage",
          "type": "boolean"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "group": {
          "description": "Named sections for reader convenience",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StructureMapGroupComponent"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Additional identifier for the structure map",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "import": {
          "description": "Other maps used by this map (canonical URLs)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "jurisdiction": {
          "description": "Intended jurisdiction for structure map (if applicable)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Name for this structure map (computer friendly)",
          "type": "string"
        },
        "publisher": {
          "description": "Name of the publisher (organization or individual)",
          "type": "string"
        },
        "purpose": {
          "description": "Why this structure map is defined",
          "type": "string"
        },
        "status": {
          "description": "draft | active | retired | unknown",
          "type": "string"
        },
        "structure": {
          "description": "Structure Definition used by this map",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StructureMapStructureComponent"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "title": {
          "description": "Name for this structure map (human friendly)",
          "type": "string"
        },
        "url": {
          "description": "Canonical identifier for this structure map, represented as a URI (globally unique)",
          "type": "string"
        },
        "useContext": {
          "description": "The context that the content is intended to support",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UsageContext"
          }
        },
        "version": {
          "description": "Business version of the structure map",
          "type": "string"
        }
      }
    },
    "SubscriptionChannelComponent": {
      "description": "The channel on which to report matches to the criteria",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "endpoint": {
          "description": "Where the channel points to",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "header": {
          "description": "Usage depends on the channel type",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "payload": {
          "description": "MIME type to send, or omit for no payload",
          "type": "string"
        },
        "type": {
          "description": "rest-hook | websocket | email | sms | message",
          "type": "string"
        }
      }
    },
    "Subscription": {
      "description": "Server push subscription criteria",
      "pattern": "Subscription",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "channel": {
          "$ref": "#/definitions/SubscriptionChannelComponent"
        },
        "contact": {
          "description": "Contact details for source (e.g. troubleshooting)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactPoint"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "criteria": {
          "description": "Rule for server push",
          "type": "string"
        },
        "end": {
          "description": "When to automatically delete the subscription",
          "type": "string"
        },
        "error": {
          "description": "Latest error note",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "reason": {
          "description": "Description of why this subscription was created",
          "type": "string"
        },
        "status": {
          "description": "requested | active | error | off",
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "SubstanceIngredientComponent": {
      "description": "Composition information about the substance",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "quantity": {
          "$ref": "#/definitions/Ratio"
        },
        "substanceCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "substanceReference": {
          "$ref": "#/definitions/Reference"
        }
      }
    },
    "SubstanceInstanceComponent": {
      "description": "If this describes a specific package/container of the substance",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "expiry": {
          "description": "When no longer valid to use",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "identifier": {
          "$ref": "#/definitions/Identifier"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "quantity": {
          "$ref": "#/definitions/Quantity"
        }
      }
    },
    "Substance": {
      "description": "A homogeneous material with a definite composition",
      "pattern": "Substance",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "category": {
          "description": "What class/type of substance this is",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "code": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "description": {
          "description": "Textual description of the substance, comments",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Unique identifier",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "ingredient": {
          "description": "Composition information about the substance",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubstanceIngredientComponent"
          }
        },
        "instance": {
          "description": "If this describes a specific package/container of the substance",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubstanceInstanceComponent"
          }
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "status": {
          "description": "active | inactive | entered-in-error",
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "SubstanceNucleicAcidLinkageComponent": {
      "description": "The linkages between sugar residues will also be captured",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "connectivity": {
          "description": "The entity that links the sugar residues together should also be captured for nearly all naturally occurring nucleic acid the linkage is a phosphate group. For many synthetic oligonucleotides phosphorothioate linkages are often seen. Linkage connectivity is assumed to be 3’-5’. If the linkage is either 3’-3’ or 5’-5’ this should be specified",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "identifier": {
          "$ref": "#/definitions/Identifier"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Each linkage will be registered as a fragment and have at least one name. A single name shall be assigned to each linkage",
          "type": "string"
        },
        "residueSite": {
          "description": "Residues shall be captured as described in 5.3.6.8.3",
          "type": "string"
        }
      }
    },
    "SubstanceNucleicAcidSugarComponent": {
      "description": "5.3.6.8.1 Sugar ID (Mandatory)",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "identifier": {
          "$ref": "#/definitions/Identifier"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "The name of the sugar or sugar-like component that make up the nucleotide",
          "type": "string"
        },
        "residueSite": {
          "description": "The residues that contain a given sugar will be captured. The order of given residues will be captured in the 5‘-3‘direction consistent with the base sequences listed above",
          "type": "string"
        }
      }
    },
    "SubstanceNucleicAcidSubunitComponent": {
      "description": "Subunits are listed in order of decreasing length; sequences of the same length will be ordered by molecular weight; subunits that have identical sequences will be repeated multiple times",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "fivePrime": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "length": {
          "format": "int32",
          "description": "The length of the sequence shall be captured",
          "type": "integer"
        },
        "linkage": {
          "description": "The linkages between sugar residues will also be captured",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubstanceNucleicAcidLinkageComponent"
          }
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "sequence": {
          "description": "Actual nucleotide sequence notation from 5' to 3' end using standard single letter codes. In addition to the base sequence, sugar and type of phosphate or non-phosphate linkage should also be captured",
          "type": "string"
        },
        "sequenceAttachment": {
          "$ref": "#/definitions/Attachment"
        },
        "subunit": {
          "format": "int32",
          "description": "Index of linear sequences of nucleic acids in order of decreasing length. Sequences of the same length will be ordered by molecular weight. Subunits that have identical sequences will be repeated and have sequential subscripts",
          "type": "integer"
        },
        "sugar": {
          "description": "5.3.6.8.1 Sugar ID (Mandatory)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubstanceNucleicAcidSugarComponent"
          }
        },
        "threePrime": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "SubstanceNucleicAcid": {
      "description": "Nucleic acids are defined by three distinct elements: the base, sugar and linkage. Individual substance/moiety IDs will be created for each of these elements. The nucleotide sequence will be always entered in the 5’-3’ direction",
      "pattern": "SubstanceNucleicAcid",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "areaOfHybridisation": {
          "description": "The area of hybridisation shall be described if applicable for double stranded RNA or DNA. The number associated with the subunit followed by the number associated to the residue shall be specified in increasing order. The underscore “” shall be used as separator as follows: “Subunitnumber Residue”",
          "type": "string"
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "numberOfSubunits": {
          "format": "int32",
          "description": "The number of linear sequences of nucleotides linked through phosphodiester bonds shall be described. Subunits would be strands of nucleic acids that are tightly associated typically through Watson-Crick base pairing. NOTE: If not specified in the reference source, the assumption is that there is 1 subunit",
          "type": "integer"
        },
        "oligoNucleotideType": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "sequenceType": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "subunit": {
          "description": "Subunits are listed in order of decreasing length; sequences of the same length will be ordered by molecular weight; subunits that have identical sequences will be repeated multiple times",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubstanceNucleicAcidSubunitComponent"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "SubstancePolymerStartingMaterialComponent": {
      "description": "Todo",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/SubstanceAmount"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "isDefining": {
          "description": "Todo",
          "type": "boolean"
        },
        "material": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "SubstancePolymerMonomerSetComponent": {
      "description": "Todo",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "ratioType": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "startingMaterial": {
          "description": "Todo",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubstancePolymerStartingMaterialComponent"
          }
        }
      }
    },
    "SubstancePolymerDegreeOfPolymerisationComponent": {
      "description": "Todo",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/SubstanceAmount"
        },
        "degree": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "SubstancePolymerStructuralRepresentationComponent": {
      "description": "Todo",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "attachment": {
          "$ref": "#/definitions/Attachment"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "representation": {
          "description": "Todo",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "SubstancePolymerRepeatUnitComponent": {
      "description": "Todo",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/SubstanceAmount"
        },
        "degreeOfPolymerisation": {
          "description": "Todo",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubstancePolymerDegreeOfPolymerisationComponent"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "orientationOfPolymerisation": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "repeatUnit": {
          "description": "Todo",
          "type": "string"
        },
        "structuralRepresentation": {
          "description": "Todo",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubstancePolymerStructuralRepresentationComponent"
          }
        }
      }
    },
    "SubstancePolymerRepeatComponent": {
      "description": "Todo",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "averageMolecularFormula": {
          "description": "Todo",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "numberOfUnits": {
          "format": "int32",
          "description": "Todo",
          "type": "integer"
        },
        "repeatUnit": {
          "description": "Todo",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubstancePolymerRepeatUnitComponent"
          }
        },
        "repeatUnitAmountType": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "SubstancePolymer": {
      "description": "Todo",
      "pattern": "SubstancePolymer",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "class": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "copolymerConnectivity": {
          "description": "Todo",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "geometry": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modification": {
          "description": "Todo",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "monomerSet": {
          "description": "Todo",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubstancePolymerMonomerSetComponent"
          }
        },
        "repeat": {
          "description": "Todo",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubstancePolymerRepeatComponent"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "SubstanceProteinSubunitComponent": {
      "description": "This subclause refers to the description of each subunit constituting the SubstanceProtein. A subunit is a linear sequence of amino acids linked through peptide bonds. The Subunit information shall be provided when the finished SubstanceProtein is a complex of multiple sequences; subunits are not used to delineate domains within a single sequence. Subunits are listed in order of decreasing length; sequences of the same length will be ordered by decreasing molecular weight; subunits that have identical sequences will be repeated multiple times",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "cTerminalModification": {
          "description": "The modification at the C-terminal shall be specified",
          "type": "string"
        },
        "cTerminalModificationId": {
          "$ref": "#/definitions/Identifier"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "length": {
          "format": "int32",
          "description": "Length of linear sequences of amino acids contained in the subunit",
          "type": "integer"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "nTerminalModification": {
          "description": "The name of the fragment modified at the N-terminal of the SubstanceProtein shall be specified",
          "type": "string"
        },
        "nTerminalModificationId": {
          "$ref": "#/definitions/Identifier"
        },
        "sequence": {
          "description": "The sequence information shall be provided enumerating the amino acids from N- to C-terminal end using standard single-letter amino acid codes. Uppercase shall be used for L-amino acids and lowercase for D-amino acids. Transcribed SubstanceProteins will always be described using the translated sequence; for synthetic peptide containing amino acids that are not represented with a single letter code an X should be used within the sequence. The modified amino acids will be distinguished by their position in the sequence",
          "type": "string"
        },
        "sequenceAttachment": {
          "$ref": "#/definitions/Attachment"
        },
        "subunit": {
          "format": "int32",
          "description": "Index of primary sequences of amino acids linked through peptide bonds in order of decreasing length. Sequences of the same length will be ordered by molecular weight. Subunits that have identical sequences will be repeated and have sequential subscripts",
          "type": "integer"
        }
      }
    },
    "SubstanceProtein": {
      "description": "A SubstanceProtein is defined as a single unit of a linear amino acid sequence, or a combination of subunits that are either covalently linked or have a defined invariant stoichiometric relationship. This includes all synthetic, recombinant and purified SubstanceProteins of defined sequence, whether the use is therapeutic or prophylactic. This set of elements will be used to describe albumins, coagulation factors, cytokines, growth factors, peptide/SubstanceProtein hormones, enzymes, toxins, toxoids, recombinant vaccines, and immunomodulators",
      "pattern": "SubstanceProtein",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "disulfideLinkage": {
          "description": "The disulphide bond between two cysteine residues either on the same subunit or on two different subunits shall be described. The position of the disulfide bonds in the SubstanceProtein shall be listed in increasing order of subunit number and position within subunit followed by the abbreviation of the amino acids involved. The disulfide linkage positions shall actually contain the amino acid Cysteine at the respective positions",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "numberOfSubunits": {
          "format": "int32",
          "description": "Number of linear sequences of amino acids linked through peptide bonds. The number of subunits constituting the SubstanceProtein shall be described. It is possible that the number of subunits can be variable",
          "type": "integer"
        },
        "sequenceType": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "subunit": {
          "description": "This subclause refers to the description of each subunit constituting the SubstanceProtein. A subunit is a linear sequence of amino acids linked through peptide bonds. The Subunit information shall be provided when the finished SubstanceProtein is a complex of multiple sequences; subunits are not used to delineate domains within a single sequence. Subunits are listed in order of decreasing length; sequences of the same length will be ordered by decreasing molecular weight; subunits that have identical sequences will be repeated multiple times",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubstanceProteinSubunitComponent"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "SubstanceReferenceInformationClassificationComponent": {
      "description": "Todo",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "classification": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "domain": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "source": {
          "description": "Todo",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "subtype": {
          "description": "Todo",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        }
      }
    },
    "SubstanceReferenceInformationGeneComponent": {
      "description": "Todo",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "gene": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "geneSequenceOrigin": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "source": {
          "description": "Todo",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        }
      }
    },
    "SubstanceReferenceInformationGeneElementComponent": {
      "description": "Todo",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "element": {
          "$ref": "#/definitions/Identifier"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "source": {
          "description": "Todo",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "SubstanceReferenceInformationTargetComponent": {
      "description": "Todo",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "amountQuantity": {
          "$ref": "#/definitions/Quantity"
        },
        "amountRange": {
          "$ref": "#/definitions/Range"
        },
        "amountString": {
          "description": "Todo",
          "type": "string"
        },
        "amountType": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "interaction": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "organism": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "organismType": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "source": {
          "description": "Todo",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "target": {
          "$ref": "#/definitions/Identifier"
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "SubstanceReferenceInformation": {
      "description": "Todo",
      "pattern": "SubstanceReferenceInformation",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "classification": {
          "description": "Todo",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubstanceReferenceInformationClassificationComponent"
          }
        },
        "comment": {
          "description": "Todo",
          "type": "string"
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "gene": {
          "description": "Todo",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubstanceReferenceInformationGeneComponent"
          }
        },
        "geneElement": {
          "description": "Todo",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubstanceReferenceInformationGeneElementComponent"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "target": {
          "description": "Todo",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubstanceReferenceInformationTargetComponent"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "SubstanceSourceMaterialFractionDescriptionComponent": {
      "description": "Many complex materials are fractions of parts of plants, animals, or minerals. Fraction elements are often necessary to define both Substances and Specified Group 1 Substances. For substances derived from Plants, fraction information will be captured at the Substance information level ( . Oils, Juices and Exudates). Additional information for Extracts, such as extraction solvent composition, will be captured at the Specified Substance Group 1 information level. For plasma-derived products fraction information will be captured at the Substance and the Specified Substance Group 1 levels",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "fraction": {
          "description": "This element is capturing information about the fraction of a plant part, or human plasma for fractionation",
          "type": "string"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "materialType": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "SubstanceSourceMaterialAuthorComponent": {
      "description": "4.9.13.6.1 Author type (Conditional)",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "authorDescription": {
          "description": "The author of an organism species shall be specified. The author year of an organism shall also be specified when applicable; refers to the year in which the first author(s) published the infraspecific plant/animal name (of any rank)",
          "type": "string"
        },
        "authorType": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "SubstanceSourceMaterialHybridComponent": {
      "description": "4.9.13.8.1 Hybrid species maternal organism ID (Optional)",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "hybridType": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "maternalOrganismId": {
          "description": "The identifier of the maternal species constituting the hybrid organism shall be specified based on a controlled vocabulary. For plants, the parents aren’t always known, and it is unlikely that it will be known which is maternal and which is paternal",
          "type": "string"
        },
        "maternalOrganismName": {
          "description": "The name of the maternal species constituting the hybrid organism shall be specified. For plants, the parents aren’t always known, and it is unlikely that it will be known which is maternal and which is paternal",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "paternalOrganismId": {
          "description": "The identifier of the paternal species constituting the hybrid organism shall be specified based on a controlled vocabulary",
          "type": "string"
        },
        "paternalOrganismName": {
          "description": "The name of the paternal species constituting the hybrid organism shall be specified",
          "type": "string"
        }
      }
    },
    "SubstanceSourceMaterialOrganismGeneralComponent": {
      "description": "4.9.13.7.1 Kingdom (Conditional)",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "class": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "kingdom": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "order": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "phylum": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "SubstanceSourceMaterialOrganismComponent": {
      "description": "This subclause describes the organism which the substance is derived from. For vaccines, the parent organism shall be specified based on these subclause elements. As an example, full taxonomy will be described for the Substance Name: ., Leaf",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "author": {
          "description": "4.9.13.6.1 Author type (Conditional)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubstanceSourceMaterialAuthorComponent"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "family": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "genus": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "hybrid": {
          "$ref": "#/definitions/SubstanceSourceMaterialHybridComponent"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "intraspecificDescription": {
          "description": "The intraspecific description of an organism shall be specified based on a controlled vocabulary. For Influenza Vaccine, the intraspecific description shall contain the syntax of the antigen in line with the WHO convention",
          "type": "string"
        },
        "intraspecificType": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "organismGeneral": {
          "$ref": "#/definitions/SubstanceSourceMaterialOrganismGeneralComponent"
        },
        "species": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "SubstanceSourceMaterialPartDescriptionComponent": {
      "description": "To do",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "part": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "partLocation": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "SubstanceSourceMaterial": {
      "description": "Source material shall capture information on the taxonomic and anatomical origins as well as the fraction of a material that can result in or can be modified to form a substance. This set of data elements shall be used to define polymer substances isolated from biological matrices. Taxonomic and anatomical origins shall be described using a controlled vocabulary as required. This information is captured for naturally derived polymers ( . starch) and structurally diverse substances. For Organisms belonging to the Kingdom Plantae the Substance level defines the fresh material of a single species or infraspecies, the Herbal Drug and the Herbal preparation. For Herbal preparations, the fraction information will be captured at the Substance information level and additional information for herbal extracts will be captured at the Specified Substance Group 1 information level. See for further explanation the Substance Class: Structurally Diverse and the herbal annex",
      "pattern": "SubstanceSourceMaterial",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "countryOfOrigin": {
          "description": "The country where the plant material is harvested or the countries where the plasma is sourced from as laid down in accordance with the Plasma Master File. For “Plasma-derived substances” the attribute country of origin provides information about the countries used for the manufacturing of the Cryopoor plama or Crioprecipitate",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "developmentStage": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "fractionDescription": {
          "description": "Many complex materials are fractions of parts of plants, animals, or minerals. Fraction elements are often necessary to define both Substances and Specified Group 1 Substances. For substances derived from Plants, fraction information will be captured at the Substance information level ( . Oils, Juices and Exudates). Additional information for Extracts, such as extraction solvent composition, will be captured at the Specified Substance Group 1 information level. For plasma-derived products fraction information will be captured at the Substance and the Specified Substance Group 1 levels",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubstanceSourceMaterialFractionDescriptionComponent"
          }
        },
        "geographicalLocation": {
          "description": "The place/region where the plant is harvested or the places/regions where the animal source material has its habitat",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "organism": {
          "$ref": "#/definitions/SubstanceSourceMaterialOrganismComponent"
        },
        "organismId": {
          "$ref": "#/definitions/Identifier"
        },
        "organismName": {
          "description": "The organism accepted Scientific name shall be provided based on the organism taxonomy",
          "type": "string"
        },
        "parentSubstanceId": {
          "description": "The parent of the herbal drug Ginkgo biloba, Leaf is the substance ID of the substance (fresh) of Ginkgo biloba L. or Ginkgo biloba L. (Whole plant)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "parentSubstanceName": {
          "description": "The parent substance of the Herbal Drug, or Herbal preparation",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "partDescription": {
          "description": "To do",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubstanceSourceMaterialPartDescriptionComponent"
          }
        },
        "sourceMaterialClass": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "sourceMaterialState": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "sourceMaterialType": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "SubstanceSpecificationCodeComponent": {
      "description": "Codes associated with the substance",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "code": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "comment": {
          "description": "Any comment can be provided in this field, if necessary",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "source": {
          "description": "Supporting literature",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "status": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "statusDate": {
          "description": "The date at which the code status is changed as part of the terminology maintenance",
          "type": "string"
        }
      }
    },
    "SubstanceSpecificationMoietyComponent": {
      "description": "Moiety, for structural modifications",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "amountQuantity": {
          "$ref": "#/definitions/Quantity"
        },
        "amountString": {
          "description": "Quantitative value for this moiety",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "identifier": {
          "$ref": "#/definitions/Identifier"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "molecularFormula": {
          "description": "Molecular formula",
          "type": "string"
        },
        "name": {
          "description": "Textual name for this moiety substance",
          "type": "string"
        },
        "opticalActivity": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "role": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "stereochemistry": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "SubstanceSpecificationOfficialComponent": {
      "description": "Details of the official nature of this name",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "authority": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "date": {
          "description": "Date of official name change",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "status": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "SubstanceSpecificationNameComponent": {
      "description": "Names applicable to this substance",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "domain": {
          "description": "The use context of this name for example if there is a different name a drug active ingredient as opposed to a food colour additive",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "jurisdiction": {
          "description": "The jurisdiction where this name applies",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "language": {
          "description": "Language of the name",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "The actual name",
          "type": "string"
        },
        "official": {
          "description": "Details of the official nature of this name",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubstanceSpecificationOfficialComponent"
          }
        },
        "preferred": {
          "description": "If this is the preferred name for this substance",
          "type": "boolean"
        },
        "source": {
          "description": "Supporting literature",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "status": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "synonym": {
          "description": "A synonym of this name",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubstanceSpecificationNameComponent"
          }
        },
        "translation": {
          "description": "A translation for this name",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubstanceSpecificationNameComponent"
          }
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "SubstanceSpecificationPropertyComponent": {
      "description": "General specifications for this substance, including how it is related to other substances",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "amountQuantity": {
          "$ref": "#/definitions/Quantity"
        },
        "amountString": {
          "description": "Quantitative value for this property",
          "type": "string"
        },
        "category": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "code": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "definingSubstanceReference": {
          "$ref": "#/definitions/Reference"
        },
        "definingSubstanceCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "parameters": {
          "description": "Parameters that were used in the measurement of a property (e.g. for viscosity: measured at 20C with a pH of 7.1)",
          "type": "string"
        }
      }
    },
    "SubstanceSpecificationRelationshipComponent": {
      "description": "A link between this substance and another, with details of the relationship",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "amountQuantity": {
          "$ref": "#/definitions/Quantity"
        },
        "amountRange": {
          "$ref": "#/definitions/Range"
        },
        "amountRatio": {
          "$ref": "#/definitions/Ratio"
        },
        "amountString": {
          "description": "A numeric factor for the relationship, for instance to express that the salt of a substance has some percentage of the active substance in relation to some other",
          "type": "string"
        },
        "amountRatioLowLimit": {
          "$ref": "#/definitions/Ratio"
        },
        "amountType": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "isDefining": {
          "description": "For example where an enzyme strongly bonds with a particular substance, this is a defining relationship for that enzyme, out of several possible substance relationships",
          "type": "boolean"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "relationship": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "source": {
          "description": "Supporting literature",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "substanceReference": {
          "$ref": "#/definitions/Reference"
        },
        "substanceCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "SubstanceSpecificationMolecularWeightComponent": {
      "description": "The molecular weight or weight range (for proteins, polymers or nucleic acids)",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Quantity"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "method": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "SubstanceSpecificationIsotopeComponent": {
      "description": "Applicable for single substances that contain a radionuclide or a non-natural isotopic ratio",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "halfLife": {
          "$ref": "#/definitions/Quantity"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "identifier": {
          "$ref": "#/definitions/Identifier"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "molecularWeight": {
          "$ref": "#/definitions/SubstanceSpecificationMolecularWeightComponent"
        },
        "name": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "substitution": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "SubstanceSpecificationRepresentationComponent": {
      "description": "Molecular structural representation",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "attachment": {
          "$ref": "#/definitions/Attachment"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "representation": {
          "description": "The structural representation as text string in a format e.g. InChI, SMILES, MOLFILE, CDX",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "SubstanceSpecificationStructureComponent": {
      "description": "Structural information",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "isotope": {
          "description": "Applicable for single substances that contain a radionuclide or a non-natural isotopic ratio",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubstanceSpecificationIsotopeComponent"
          }
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "molecularFormula": {
          "description": "Molecular formula",
          "type": "string"
        },
        "molecularFormulaByMoiety": {
          "description": "Specified per moiety according to the Hill system, i.e. first C, then H, then alphabetical, each moiety separated by a dot",
          "type": "string"
        },
        "molecularWeight": {
          "$ref": "#/definitions/SubstanceSpecificationMolecularWeightComponent"
        },
        "opticalActivity": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "representation": {
          "description": "Molecular structural representation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubstanceSpecificationRepresentationComponent"
          }
        },
        "source": {
          "description": "Supporting literature",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "stereochemistry": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "SubstanceSpecification": {
      "description": "The detailed description of a substance, typically at a level beyond what is used for prescribing",
      "pattern": "SubstanceSpecification",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "code": {
          "description": "Codes associated with the substance",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubstanceSpecificationCodeComponent"
          }
        },
        "comment": {
          "description": "Textual comment about this record of a substance",
          "type": "string"
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "description": {
          "description": "Textual description of the substance",
          "type": "string"
        },
        "domain": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "$ref": "#/definitions/Identifier"
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "moiety": {
          "description": "Moiety, for structural modifications",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubstanceSpecificationMoietyComponent"
          }
        },
        "molecularWeight": {
          "description": "The molecular weight or weight range (for proteins, polymers or nucleic acids)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubstanceSpecificationMolecularWeightComponent"
          }
        },
        "name": {
          "description": "Names applicable to this substance",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubstanceSpecificationNameComponent"
          }
        },
        "nucleicAcid": {
          "$ref": "#/definitions/Reference"
        },
        "polymer": {
          "$ref": "#/definitions/Reference"
        },
        "property": {
          "description": "General specifications for this substance, including how it is related to other substances",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubstanceSpecificationPropertyComponent"
          }
        },
        "protein": {
          "$ref": "#/definitions/Reference"
        },
        "referenceInformation": {
          "$ref": "#/definitions/Reference"
        },
        "relationship": {
          "description": "A link between this substance and another, with details of the relationship",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubstanceSpecificationRelationshipComponent"
          }
        },
        "source": {
          "description": "Supporting literature",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "sourceMaterial": {
          "$ref": "#/definitions/Reference"
        },
        "status": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "structure": {
          "$ref": "#/definitions/SubstanceSpecificationStructureComponent"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "SupplyDeliverySuppliedItemComponent": {
      "description": "The item that is delivered or supplied",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "itemCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "itemReference": {
          "$ref": "#/definitions/Reference"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "quantity": {
          "$ref": "#/definitions/Quantity"
        }
      }
    },
    "SupplyDelivery": {
      "description": "Delivery of bulk Supplies",
      "pattern": "SupplyDelivery",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "basedOn": {
          "description": "Fulfills plan, proposal or order",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "destination": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "External identifier",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "occurrenceDateTime": {
          "description": "When event occurred",
          "type": "string"
        },
        "occurrencePeriod": {
          "$ref": "#/definitions/Period"
        },
        "occurrenceTiming": {
          "$ref": "#/definitions/Timing"
        },
        "partOf": {
          "description": "Part of referenced event",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "patient": {
          "$ref": "#/definitions/Reference"
        },
        "receiver": {
          "description": "Who collected the Supply",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "status": {
          "description": "in-progress | completed | abandoned | entered-in-error",
          "type": "string"
        },
        "suppliedItem": {
          "$ref": "#/definitions/SupplyDeliverySuppliedItemComponent"
        },
        "supplier": {
          "$ref": "#/definitions/Reference"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        }
      }
    },
    "SupplyRequestParameterComponent": {
      "description": "Ordered item details",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "code": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "valueCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueQuantity": {
          "$ref": "#/definitions/Quantity"
        },
        "valueRange": {
          "$ref": "#/definitions/Range"
        },
        "valueBoolean": {
          "description": "Value of detail",
          "type": "boolean"
        }
      }
    },
    "SupplyRequest": {
      "description": "Request for a medication, substance or device",
      "pattern": "SupplyRequest",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "authoredOn": {
          "description": "When the request was made",
          "type": "string"
        },
        "category": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "deliverFrom": {
          "$ref": "#/definitions/Reference"
        },
        "deliverTo": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Business Identifier for SupplyRequest",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "itemCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "itemReference": {
          "$ref": "#/definitions/Reference"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "occurrenceDateTime": {
          "description": "When the request should be fulfilled",
          "type": "string"
        },
        "occurrencePeriod": {
          "$ref": "#/definitions/Period"
        },
        "occurrenceTiming": {
          "$ref": "#/definitions/Timing"
        },
        "parameter": {
          "description": "Ordered item details",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupplyRequestParameterComponent"
          }
        },
        "priority": {
          "description": "routine | urgent | asap | stat",
          "type": "string"
        },
        "quantity": {
          "$ref": "#/definitions/Quantity"
        },
        "reasonCode": {
          "description": "The reason why the supply item was requested",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "reasonReference": {
          "description": "The reason why the supply item was requested",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "requester": {
          "$ref": "#/definitions/Reference"
        },
        "status": {
          "description": "draft | active | suspended +",
          "type": "string"
        },
        "supplier": {
          "description": "Who is intended to fulfill the request",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "TaskParameterComponent": {
      "description": "Information used to perform task",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueBase64Binary": {
          "format": "byte",
          "description": "Content to use in performing the task",
          "type": "string"
        },
        "valueBoolean": {
          "description": "Content to use in performing the task",
          "type": "boolean"
        },
        "valueCanonical": {
          "description": "Content to use in performing the task",
          "type": "string"
        },
        "valueCode": {
          "description": "Content to use in performing the task",
          "type": "string"
        },
        "valueDate": {
          "description": "Content to use in performing the task",
          "type": "string"
        },
        "valueDateTime": {
          "description": "Content to use in performing the task",
          "type": "string"
        },
        "valueDecimal": {
          "format": "double",
          "description": "Content to use in performing the task",
          "type": "number"
        },
        "valueId": {
          "description": "Content to use in performing the task",
          "type": "string"
        },
        "valueInstant": {
          "description": "Content to use in performing the task",
          "type": "string"
        },
        "valueInteger": {
          "format": "int32",
          "description": "Content to use in performing the task",
          "type": "integer"
        },
        "valueMarkdown": {
          "description": "Content to use in performing the task",
          "type": "string"
        },
        "valueOid": {
          "description": "Content to use in performing the task",
          "type": "string"
        },
        "valuePositiveInt": {
          "format": "int32",
          "description": "Content to use in performing the task",
          "type": "integer"
        },
        "valueString": {
          "description": "Content to use in performing the task",
          "type": "string"
        },
        "valueTime": {
          "description": "Content to use in performing the task",
          "type": "string"
        },
        "valueUnsignedInt": {
          "format": "int32",
          "description": "Content to use in performing the task",
          "type": "integer"
        },
        "valueUri": {
          "description": "Content to use in performing the task",
          "type": "string"
        },
        "valueUrl": {
          "description": "Content to use in performing the task",
          "type": "string"
        },
        "valueUuid": {
          "description": "Content to use in performing the task",
          "type": "string"
        },
        "valueAddress": {
          "$ref": "#/definitions/Address"
        },
        "valueAge": {
          "$ref": "#/definitions/Age"
        },
        "valueAnnotation": {
          "$ref": "#/definitions/Annotation"
        },
        "valueAttachment": {
          "$ref": "#/definitions/Attachment"
        },
        "valueCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueCoding": {
          "$ref": "#/definitions/Coding"
        },
        "valueContactPoint": {
          "$ref": "#/definitions/ContactPoint"
        },
        "valueCount": {
          "$ref": "#/definitions/Count"
        },
        "valueDistance": {
          "$ref": "#/definitions/Distance"
        },
        "valueDuration": {
          "$ref": "#/definitions/Duration"
        },
        "valueHumanName": {
          "$ref": "#/definitions/HumanName"
        },
        "valueIdentifier": {
          "$ref": "#/definitions/Identifier"
        },
        "valueMoney": {
          "$ref": "#/definitions/Money"
        },
        "valuePeriod": {
          "$ref": "#/definitions/Period"
        },
        "valueQuantity": {
          "$ref": "#/definitions/Quantity"
        },
        "valueRange": {
          "$ref": "#/definitions/Range"
        },
        "valueRatio": {
          "$ref": "#/definitions/Ratio"
        },
        "valueReference": {
          "$ref": "#/definitions/Reference"
        },
        "valueSampledData": {
          "$ref": "#/definitions/SampledData"
        },
        "valueSignature": {
          "$ref": "#/definitions/Signature"
        },
        "valueTiming": {
          "$ref": "#/definitions/Timing"
        },
        "valueContactDetail": {
          "$ref": "#/definitions/ContactDetail"
        },
        "valueContributor": {
          "$ref": "#/definitions/Contributor"
        },
        "valueDataRequirement": {
          "$ref": "#/definitions/DataRequirement"
        },
        "valueExpression": {
          "$ref": "#/definitions/Expression"
        },
        "valueParameterDefinition": {
          "$ref": "#/definitions/ParameterDefinition"
        },
        "valueRelatedArtifact": {
          "$ref": "#/definitions/RelatedArtifact"
        },
        "valueTriggerDefinition": {
          "$ref": "#/definitions/TriggerDefinition"
        },
        "valueUsageContext": {
          "$ref": "#/definitions/UsageContext"
        },
        "valueDosage": {
          "$ref": "#/definitions/Dosage"
        },
        "valueMeta": {
          "$ref": "#/definitions/Meta"
        }
      }
    },
    "TaskOutputComponent": {
      "description": "Information produced as part of task",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "type": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueBase64Binary": {
          "format": "byte",
          "description": "Result of output",
          "type": "string"
        },
        "valueBoolean": {
          "description": "Result of output",
          "type": "boolean"
        },
        "valueCanonical": {
          "description": "Result of output",
          "type": "string"
        },
        "valueCode": {
          "description": "Result of output",
          "type": "string"
        },
        "valueDate": {
          "description": "Result of output",
          "type": "string"
        },
        "valueDateTime": {
          "description": "Result of output",
          "type": "string"
        },
        "valueDecimal": {
          "format": "double",
          "description": "Result of output",
          "type": "number"
        },
        "valueId": {
          "description": "Result of output",
          "type": "string"
        },
        "valueInstant": {
          "description": "Result of output",
          "type": "string"
        },
        "valueInteger": {
          "format": "int32",
          "description": "Result of output",
          "type": "integer"
        },
        "valueMarkdown": {
          "description": "Result of output",
          "type": "string"
        },
        "valueOid": {
          "description": "Result of output",
          "type": "string"
        },
        "valuePositiveInt": {
          "format": "int32",
          "description": "Result of output",
          "type": "integer"
        },
        "valueString": {
          "description": "Result of output",
          "type": "string"
        },
        "valueTime": {
          "description": "Result of output",
          "type": "string"
        },
        "valueUnsignedInt": {
          "format": "int32",
          "description": "Result of output",
          "type": "integer"
        },
        "valueUri": {
          "description": "Result of output",
          "type": "string"
        },
        "valueUrl": {
          "description": "Result of output",
          "type": "string"
        },
        "valueUuid": {
          "description": "Result of output",
          "type": "string"
        },
        "valueAddress": {
          "$ref": "#/definitions/Address"
        },
        "valueAge": {
          "$ref": "#/definitions/Age"
        },
        "valueAnnotation": {
          "$ref": "#/definitions/Annotation"
        },
        "valueAttachment": {
          "$ref": "#/definitions/Attachment"
        },
        "valueCodeableConcept": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueCoding": {
          "$ref": "#/definitions/Coding"
        },
        "valueContactPoint": {
          "$ref": "#/definitions/ContactPoint"
        },
        "valueCount": {
          "$ref": "#/definitions/Count"
        },
        "valueDistance": {
          "$ref": "#/definitions/Distance"
        },
        "valueDuration": {
          "$ref": "#/definitions/Duration"
        },
        "valueHumanName": {
          "$ref": "#/definitions/HumanName"
        },
        "valueIdentifier": {
          "$ref": "#/definitions/Identifier"
        },
        "valueMoney": {
          "$ref": "#/definitions/Money"
        },
        "valuePeriod": {
          "$ref": "#/definitions/Period"
        },
        "valueQuantity": {
          "$ref": "#/definitions/Quantity"
        },
        "valueRange": {
          "$ref": "#/definitions/Range"
        },
        "valueRatio": {
          "$ref": "#/definitions/Ratio"
        },
        "valueReference": {
          "$ref": "#/definitions/Reference"
        },
        "valueSampledData": {
          "$ref": "#/definitions/SampledData"
        },
        "valueSignature": {
          "$ref": "#/definitions/Signature"
        },
        "valueTiming": {
          "$ref": "#/definitions/Timing"
        },
        "valueContactDetail": {
          "$ref": "#/definitions/ContactDetail"
        },
        "valueContributor": {
          "$ref": "#/definitions/Contributor"
        },
        "valueDataRequirement": {
          "$ref": "#/definitions/DataRequirement"
        },
        "valueExpression": {
          "$ref": "#/definitions/Expression"
        },
        "valueParameterDefinition": {
          "$ref": "#/definitions/ParameterDefinition"
        },
        "valueRelatedArtifact": {
          "$ref": "#/definitions/RelatedArtifact"
        },
        "valueTriggerDefinition": {
          "$ref": "#/definitions/TriggerDefinition"
        },
        "valueUsageContext": {
          "$ref": "#/definitions/UsageContext"
        },
        "valueDosage": {
          "$ref": "#/definitions/Dosage"
        },
        "valueMeta": {
          "$ref": "#/definitions/Meta"
        }
      }
    },
    "TaskRestrictionComponent": {
      "description": "Constraints on fulfillment tasks",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "period": {
          "$ref": "#/definitions/Period"
        },
        "recipient": {
          "description": "For whom is fulfillment sought?",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "repetitions": {
          "format": "int32",
          "description": "How many times to repeat",
          "type": "integer"
        }
      }
    },
    "Task": {
      "description": "A task to be performed",
      "pattern": "Task",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "authoredOn": {
          "description": "Task Creation Date",
          "type": "string"
        },
        "basedOn": {
          "description": "Request fulfilled by this task",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "businessStatus": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "code": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "description": {
          "description": "Human-readable explanation of task",
          "type": "string"
        },
        "encounter": {
          "$ref": "#/definitions/Reference"
        },
        "executionPeriod": {
          "$ref": "#/definitions/Period"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "focus": {
          "$ref": "#/definitions/Reference"
        },
        "for": {
          "$ref": "#/definitions/Reference"
        },
        "groupIdentifier": {
          "$ref": "#/definitions/Identifier"
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Task Instance Identifier",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "input": {
          "description": "Information used to perform task",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskParameterComponent"
          }
        },
        "instantiatesCanonical": {
          "description": "Formal definition of task",
          "type": "string"
        },
        "instantiatesUri": {
          "description": "Formal definition of task",
          "type": "string"
        },
        "insurance": {
          "description": "Associated insurance coverage",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "intent": {
          "description": "unknown | proposal | plan | order | original-order | reflex-order | filler-order | instance-order | option",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "lastModified": {
          "description": "Task Last Modified Date",
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/Reference"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "note": {
          "description": "Comments made about the task",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "output": {
          "description": "Information produced as part of task",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskOutputComponent"
          }
        },
        "owner": {
          "$ref": "#/definitions/Reference"
        },
        "partOf": {
          "description": "Composite task",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "performerType": {
          "description": "Requested performer",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "priority": {
          "description": "routine | urgent | asap | stat",
          "type": "string"
        },
        "reasonCode": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "reasonReference": {
          "$ref": "#/definitions/Reference"
        },
        "relevantHistory": {
          "description": "Key events in history of the Task",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "requester": {
          "$ref": "#/definitions/Reference"
        },
        "restriction": {
          "$ref": "#/definitions/TaskRestrictionComponent"
        },
        "status": {
          "description": "draft | requested | received | accepted | +",
          "type": "string"
        },
        "statusReason": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "TerminologyCapabilitiesClosureComponent": {
      "description": "Information about the [ConceptMap/$closure](conceptmap-operation-closure.html) operation",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "translation": {
          "description": "If cross-system closure is supported",
          "type": "boolean"
        }
      }
    },
    "TerminologyCapabilitiesFilterComponent": {
      "description": "Filter Properties supported",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "code": {
          "description": "Code of the property supported",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "op": {
          "description": "Operations supported for the property",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TerminologyCapabilitiesVersionComponent": {
      "description": "Version of Code System supported",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "code": {
          "description": "Version identifier for this version",
          "type": "string"
        },
        "compositional": {
          "description": "If compositional grammar is supported",
          "type": "boolean"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "filter": {
          "description": "Filter Properties supported",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TerminologyCapabilitiesFilterComponent"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "isDefault": {
          "description": "If this is the default version for this code system",
          "type": "boolean"
        },
        "language": {
          "description": "Language Displays supported",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "property": {
          "description": "Properties supported for $lookup",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TerminologyCapabilitiesCodeSystemComponent": {
      "description": "A code system supported by the server",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "subsumption": {
          "description": "Whether subsumption is supported",
          "type": "boolean"
        },
        "uri": {
          "description": "URI for the Code System",
          "type": "string"
        },
        "version": {
          "description": "Version of Code System supported",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TerminologyCapabilitiesVersionComponent"
          }
        }
      }
    },
    "TerminologyCapabilitiesParameterComponent": {
      "description": "Supported expansion parameter",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "documentation": {
          "description": "Description of support for parameter",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Expansion Parameter name",
          "type": "string"
        }
      }
    },
    "TerminologyCapabilitiesExpansionComponent": {
      "description": "Information about the [ValueSet/$expand](valueset-operation-expand.html) operation",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "hierarchical": {
          "description": "Whether the server can return nested value sets",
          "type": "boolean"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "incomplete": {
          "description": "Allow request for incomplete expansions?",
          "type": "boolean"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "paging": {
          "description": "Whether the server supports paging on expansion",
          "type": "boolean"
        },
        "parameter": {
          "description": "Supported expansion parameter",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TerminologyCapabilitiesParameterComponent"
          }
        },
        "textFilter": {
          "description": "Documentation about text searching works",
          "type": "string"
        }
      }
    },
    "TerminologyCapabilitiesImplementationComponent": {
      "description": "If this describes a specific instance",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "description": {
          "description": "Describes this specific instance",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "url": {
          "description": "Base URL for the implementation",
          "type": "string"
        }
      }
    },
    "TerminologyCapabilitiesSoftwareComponent": {
      "description": "Software that is covered by this terminology capability statement",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "A name the software is known by",
          "type": "string"
        },
        "version": {
          "description": "Version covered by this statement",
          "type": "string"
        }
      }
    },
    "TerminologyCapabilitiesTranslationComponent": {
      "description": "Information about the [ConceptMap/$translate](conceptmap-operation-translate.html) operation",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "needsMap": {
          "description": "Whether the client must identify the map",
          "type": "boolean"
        }
      }
    },
    "TerminologyCapabilitiesValidateCodeComponent": {
      "description": "Information about the [ValueSet/$validate-code](valueset-operation-validate-code.html) operation",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "translations": {
          "description": "Whether translations are validated",
          "type": "boolean"
        }
      }
    },
    "TerminologyCapabilities": {
      "description": "A statement of system capabilities",
      "pattern": "TerminologyCapabilities",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "closure": {
          "$ref": "#/definitions/TerminologyCapabilitiesClosureComponent"
        },
        "codeSearch": {
          "description": "explicit | all",
          "type": "string"
        },
        "codeSystem": {
          "description": "A code system supported by the server",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TerminologyCapabilitiesCodeSystemComponent"
          }
        },
        "contact": {
          "description": "Contact details for the publisher",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "copyright": {
          "description": "Use and/or publishing restrictions",
          "type": "string"
        },
        "date": {
          "description": "Date last changed",
          "type": "string"
        },
        "description": {
          "description": "Natural language description of the terminology capabilities",
          "type": "string"
        },
        "expansion": {
          "$ref": "#/definitions/TerminologyCapabilitiesExpansionComponent"
        },
        "experimental": {
          "description": "For testing purposes, not real usage",
          "type": "boolean"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "implementation": {
          "$ref": "#/definitions/TerminologyCapabilitiesImplementationComponent"
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "jurisdiction": {
          "description": "Intended jurisdiction for terminology capabilities (if applicable)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "kind": {
          "description": "instance | capability | requirements",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "lockedDate": {
          "description": "Whether lockedDate is supported",
          "type": "boolean"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Name for this terminology capabilities (computer friendly)",
          "type": "string"
        },
        "publisher": {
          "description": "Name of the publisher (organization or individual)",
          "type": "string"
        },
        "purpose": {
          "description": "Why this terminology capabilities is defined",
          "type": "string"
        },
        "software": {
          "$ref": "#/definitions/TerminologyCapabilitiesSoftwareComponent"
        },
        "status": {
          "description": "draft | active | retired | unknown",
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "title": {
          "description": "Name for this terminology capabilities (human friendly)",
          "type": "string"
        },
        "translation": {
          "$ref": "#/definitions/TerminologyCapabilitiesTranslationComponent"
        },
        "url": {
          "description": "Canonical identifier for this terminology capabilities, represented as a URI (globally unique)",
          "type": "string"
        },
        "useContext": {
          "description": "The context that the content is intended to support",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UsageContext"
          }
        },
        "validateCode": {
          "$ref": "#/definitions/TerminologyCapabilitiesValidateCodeComponent"
        },
        "version": {
          "description": "Business version of the terminology capabilities",
          "type": "string"
        }
      }
    },
    "TestReportParticipantComponent": {
      "description": "A participant in the test execution, either the execution engine, a client, or a server",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "display": {
          "description": "The display name of the participant",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "type": {
          "description": "test-engine | client | server",
          "type": "string"
        },
        "uri": {
          "description": "The uri of the participant. An absolute URL is preferred",
          "type": "string"
        }
      }
    },
    "TestReportAssertComponent": {
      "description": "The assertion to perform",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "detail": {
          "description": "A link to further details on the result",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "message": {
          "description": "A message associated with the result",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "result": {
          "description": "pass | skip | fail | warning | error",
          "type": "string"
        }
      }
    },
    "TestReportOperationComponent": {
      "description": "The operation to perform",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "detail": {
          "description": "A link to further details on the result",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "message": {
          "description": "A message associated with the result",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "result": {
          "description": "pass | skip | fail | warning | error",
          "type": "string"
        }
      }
    },
    "TestReportSetupActionComponent": {
      "description": "A setup operation or assert that was executed",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "assert": {
          "$ref": "#/definitions/TestReportAssertComponent"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "operation": {
          "$ref": "#/definitions/TestReportOperationComponent"
        }
      }
    },
    "TestReportSetupComponent": {
      "description": "The results of the series of required setup operations before the tests were executed",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "action": {
          "description": "A setup operation or assert that was executed",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestReportSetupActionComponent"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "TestReportTeardownActionComponent": {
      "description": "One or more teardown operations performed",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "operation": {
          "$ref": "#/definitions/TestReportOperationComponent"
        }
      }
    },
    "TestReportTeardownComponent": {
      "description": "The results of running the series of required clean up steps",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "action": {
          "description": "One or more teardown operations performed",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestReportTeardownActionComponent"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "TestReportTestActionComponent": {
      "description": "A test operation or assert that was performed",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "assert": {
          "$ref": "#/definitions/TestReportAssertComponent"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "operation": {
          "$ref": "#/definitions/TestReportOperationComponent"
        }
      }
    },
    "TestReportTestComponent": {
      "description": "A test executed from the test script",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "action": {
          "description": "A test operation or assert that was performed",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestReportTestActionComponent"
          }
        },
        "description": {
          "description": "Tracking/reporting short description of the test",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Tracking/logging name of this test",
          "type": "string"
        }
      }
    },
    "TestReport": {
      "description": "Describes the results of a TestScript execution",
      "pattern": "TestReport",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "$ref": "#/definitions/Identifier"
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "issued": {
          "description": "When the TestScript was executed and this TestReport was generated",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Informal name of the executed TestScript",
          "type": "string"
        },
        "participant": {
          "description": "A participant in the test execution, either the execution engine, a client, or a server",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestReportParticipantComponent"
          }
        },
        "result": {
          "description": "pass | fail | pending",
          "type": "string"
        },
        "score": {
          "format": "double",
          "description": "The final score (percentage of tests passed) resulting from the execution of the TestScript",
          "type": "number"
        },
        "setup": {
          "$ref": "#/definitions/TestReportSetupComponent"
        },
        "status": {
          "description": "completed | in-progress | waiting | stopped | entered-in-error",
          "type": "string"
        },
        "teardown": {
          "$ref": "#/definitions/TestReportTeardownComponent"
        },
        "test": {
          "description": "A test executed from the test script",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestReportTestComponent"
          }
        },
        "tester": {
          "description": "Name of the tester producing this report (Organization or individual)",
          "type": "string"
        },
        "testScript": {
          "$ref": "#/definitions/Reference"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    },
    "TestScriptDestinationComponent": {
      "description": "An abstract server representing a destination or receiver in a message exchange",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "index": {
          "format": "int32",
          "description": "The index of the abstract destination server starting at 1",
          "type": "integer"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "profile": {
          "$ref": "#/definitions/Coding"
        }
      }
    },
    "TestScriptFixtureComponent": {
      "description": "Fixture in the test script - by reference (uri)",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "autocreate": {
          "description": "Whether or not to implicitly create the fixture during setup",
          "type": "boolean"
        },
        "autodelete": {
          "description": "Whether or not to implicitly delete the fixture during teardown",
          "type": "boolean"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "resource": {
          "$ref": "#/definitions/Reference"
        }
      }
    },
    "TestScriptCapabilityComponent": {
      "description": "Capabilities  that are assumed to function correctly on the FHIR server being tested",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "capabilities": {
          "description": "Required Capability Statement",
          "type": "string"
        },
        "description": {
          "description": "The expected capabilities of the server",
          "type": "string"
        },
        "destination": {
          "format": "int32",
          "description": "Which server these requirements apply to",
          "type": "integer"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "link": {
          "description": "Links to the FHIR specification",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "origin": {
          "description": "Which origin server these requirements apply to",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "required": {
          "description": "Are the capabilities required?",
          "type": "boolean"
        },
        "validated": {
          "description": "Are the capabilities validated?",
          "type": "boolean"
        }
      }
    },
    "TestScriptLinkComponent": {
      "description": "Links to the FHIR specification",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "description": {
          "description": "Short description",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "url": {
          "description": "URL to the specification",
          "type": "string"
        }
      }
    },
    "TestScriptMetadataComponent": {
      "description": "Required capability that is assumed to function correctly on the FHIR server being tested",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "capability": {
          "description": "Capabilities  that are assumed to function correctly on the FHIR server being tested",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestScriptCapabilityComponent"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "link": {
          "description": "Links to the FHIR specification",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestScriptLinkComponent"
          }
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "TestScriptOriginComponent": {
      "description": "An abstract server representing a client or sender in a message exchange",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "index": {
          "format": "int32",
          "description": "The index of the abstract origin server starting at 1",
          "type": "integer"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "profile": {
          "$ref": "#/definitions/Coding"
        }
      }
    },
    "TestScriptAssertComponent": {
      "description": "The assertion to perform",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "compareToSourceExpression": {
          "description": "The FHIRPath expression to evaluate against the source fixture",
          "type": "string"
        },
        "compareToSourceId": {
          "description": "Id of the source fixture to be evaluated",
          "type": "string"
        },
        "compareToSourcePath": {
          "description": "XPath or JSONPath expression to evaluate against the source fixture",
          "type": "string"
        },
        "contentType": {
          "description": "Mime type to compare against the 'Content-Type' header",
          "type": "string"
        },
        "description": {
          "description": "Tracking/reporting assertion description",
          "type": "string"
        },
        "direction": {
          "description": "response | request",
          "type": "string"
        },
        "expression": {
          "description": "The FHIRPath expression to be evaluated",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "headerField": {
          "description": "HTTP header field name",
          "type": "string"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "label": {
          "description": "Tracking/logging assertion label",
          "type": "string"
        },
        "minimumId": {
          "description": "Fixture Id of minimum content resource",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "navigationLinks": {
          "description": "Perform validation on navigation links?",
          "type": "boolean"
        },
        "operator": {
          "description": "equals | notEquals | in | notIn | greaterThan | lessThan | empty | notEmpty | contains | notContains | eval",
          "type": "string"
        },
        "path": {
          "description": "XPath or JSONPath expression",
          "type": "string"
        },
        "requestMethod": {
          "description": "delete | get | options | patch | post | put | head",
          "type": "string"
        },
        "requestURL": {
          "description": "Request URL comparison value",
          "type": "string"
        },
        "resource": {
          "description": "Resource type",
          "type": "string"
        },
        "response": {
          "description": "okay | created | noContent | notModified | bad | forbidden | notFound | methodNotAllowed | conflict | gone | preconditionFailed | unprocessable",
          "type": "string"
        },
        "responseCode": {
          "description": "HTTP response code to test",
          "type": "string"
        },
        "sourceId": {
          "description": "Fixture Id of source expression or headerField",
          "type": "string"
        },
        "validateProfileId": {
          "description": "Profile Id of validation profile reference",
          "type": "string"
        },
        "value": {
          "description": "The value to compare to",
          "type": "string"
        },
        "warningOnly": {
          "description": "Will this assert produce a warning only on error?",
          "type": "boolean"
        }
      }
    },
    "TestScriptRequestHeaderComponent": {
      "description": "Each operation can have one or more header elements",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "field": {
          "description": "HTTP header field name",
          "type": "string"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "value": {
          "description": "HTTP headerfield value",
          "type": "string"
        }
      }
    },
    "TestScriptOperationComponent": {
      "description": "The setup operation to perform",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "accept": {
          "description": "Mime type to accept in the payload of the response, with charset etc.",
          "type": "string"
        },
        "contentType": {
          "description": "Mime type of the request payload contents, with charset etc.",
          "type": "string"
        },
        "description": {
          "description": "Tracking/reporting operation description",
          "type": "string"
        },
        "destination": {
          "format": "int32",
          "description": "Server responding to the request",
          "type": "integer"
        },
        "encodeRequestUrl": {
          "description": "Whether or not to send the request url in encoded format",
          "type": "boolean"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "label": {
          "description": "Tracking/logging operation label",
          "type": "string"
        },
        "method": {
          "description": "delete | get | options | patch | post | put | head",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "origin": {
          "format": "int32",
          "description": "Server initiating the request",
          "type": "integer"
        },
        "params": {
          "description": "Explicitly defined path parameters",
          "type": "string"
        },
        "requestHeader": {
          "description": "Each operation can have one or more header elements",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestScriptRequestHeaderComponent"
          }
        },
        "requestId": {
          "description": "Fixture Id of mapped request",
          "type": "string"
        },
        "resource": {
          "description": "Resource type",
          "type": "string"
        },
        "responseId": {
          "description": "Fixture Id of mapped response",
          "type": "string"
        },
        "sourceId": {
          "description": "Fixture Id of body for PUT and POST requests",
          "type": "string"
        },
        "targetId": {
          "description": "Id of fixture used for extracting the [id],  [type], and [vid] for GET requests",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/Coding"
        },
        "url": {
          "description": "Request URL",
          "type": "string"
        }
      }
    },
    "TestScriptSetupActionComponent": {
      "description": "A setup operation or assert to perform",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "assert": {
          "$ref": "#/definitions/TestScriptAssertComponent"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "operation": {
          "$ref": "#/definitions/TestScriptOperationComponent"
        }
      }
    },
    "TestScriptSetupComponent": {
      "description": "A series of required setup operations before tests are executed",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "action": {
          "description": "A setup operation or assert to perform",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestScriptSetupActionComponent"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "TestScriptTeardownActionComponent": {
      "description": "One or more teardown operations to perform",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "operation": {
          "$ref": "#/definitions/TestScriptOperationComponent"
        }
      }
    },
    "TestScriptTeardownComponent": {
      "description": "A series of required clean up steps",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "action": {
          "description": "One or more teardown operations to perform",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestScriptTeardownActionComponent"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "TestScriptTestActionComponent": {
      "description": "A test operation or assert to perform",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "assert": {
          "$ref": "#/definitions/TestScriptAssertComponent"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "operation": {
          "$ref": "#/definitions/TestScriptOperationComponent"
        }
      }
    },
    "TestScriptTestComponent": {
      "description": "A test in this script",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "action": {
          "description": "A test operation or assert to perform",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestScriptTestActionComponent"
          }
        },
        "description": {
          "description": "Tracking/reporting short description of the test",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Tracking/logging name of this test",
          "type": "string"
        }
      }
    },
    "TestScriptVariableComponent": {
      "description": "Placeholder for evaluated elements",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "defaultValue": {
          "description": "Default, hard-coded, or user-defined value for this variable",
          "type": "string"
        },
        "description": {
          "description": "Natural language description of the variable",
          "type": "string"
        },
        "expression": {
          "description": "The FHIRPath expression against the fixture body",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "headerField": {
          "description": "HTTP header field name for source",
          "type": "string"
        },
        "hint": {
          "description": "Hint help text for default value to enter",
          "type": "string"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Descriptive name for this variable",
          "type": "string"
        },
        "path": {
          "description": "XPath or JSONPath against the fixture body",
          "type": "string"
        },
        "sourceId": {
          "description": "Fixture Id of source expression or headerField within this variable",
          "type": "string"
        }
      }
    },
    "TestScript": {
      "description": "Describes a set of tests",
      "pattern": "TestScript",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "contact": {
          "description": "Contact details for the publisher",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "copyright": {
          "description": "Use and/or publishing restrictions",
          "type": "string"
        },
        "date": {
          "description": "Date last changed",
          "type": "string"
        },
        "description": {
          "description": "Natural language description of the test script",
          "type": "string"
        },
        "destination": {
          "description": "An abstract server representing a destination or receiver in a message exchange",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestScriptDestinationComponent"
          }
        },
        "experimental": {
          "description": "For testing purposes, not real usage",
          "type": "boolean"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "fixture": {
          "description": "Fixture in the test script - by reference (uri)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestScriptFixtureComponent"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "$ref": "#/definitions/Identifier"
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "jurisdiction": {
          "description": "Intended jurisdiction for test script (if applicable)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "metadata": {
          "$ref": "#/definitions/TestScriptMetadataComponent"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Name for this test script (computer friendly)",
          "type": "string"
        },
        "origin": {
          "description": "An abstract server representing a client or sender in a message exchange",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestScriptOriginComponent"
          }
        },
        "profile": {
          "description": "Reference of the validation profile",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "publisher": {
          "description": "Name of the publisher (organization or individual)",
          "type": "string"
        },
        "purpose": {
          "description": "Why this test script is defined",
          "type": "string"
        },
        "setup": {
          "$ref": "#/definitions/TestScriptSetupComponent"
        },
        "status": {
          "description": "draft | active | retired | unknown",
          "type": "string"
        },
        "teardown": {
          "$ref": "#/definitions/TestScriptTeardownComponent"
        },
        "test": {
          "description": "A test in this script",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestScriptTestComponent"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "title": {
          "description": "Name for this test script (human friendly)",
          "type": "string"
        },
        "url": {
          "description": "Canonical identifier for this test script, represented as a URI (globally unique)",
          "type": "string"
        },
        "useContext": {
          "description": "The context that the content is intended to support",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UsageContext"
          }
        },
        "variable": {
          "description": "Placeholder for evaluated elements",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestScriptVariableComponent"
          }
        },
        "version": {
          "description": "Business version of the test script",
          "type": "string"
        }
      }
    },
    "ValueSetDesignationComponent": {
      "description": "Additional representations for this concept",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "language": {
          "description": "Human language of the designation",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "use": {
          "$ref": "#/definitions/Coding"
        },
        "value": {
          "description": "The text value for this designation",
          "type": "string"
        }
      }
    },
    "ValueSetConceptReferenceComponent": {
      "description": "A concept defined in the system",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "code": {
          "description": "Code or expression from system",
          "type": "string"
        },
        "designation": {
          "description": "Additional representations for this concept",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValueSetDesignationComponent"
          }
        },
        "display": {
          "description": "Text to display for this code for this value set in this valueset",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "ValueSetFilterComponent": {
      "description": "Select codes/concepts by their properties (including relationships)",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "op": {
          "description": "= | is-a | descendent-of | is-not-a | regex | in | not-in | generalizes | exists",
          "type": "string"
        },
        "property": {
          "description": "A property/filter defined by the code system",
          "type": "string"
        },
        "value": {
          "description": "Code from the system, or regex criteria, or boolean value for exists",
          "type": "string"
        }
      }
    },
    "ValueSetConceptSetComponent": {
      "description": "Include one or more codes from a code system or other value set(s)",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "concept": {
          "description": "A concept defined in the system",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValueSetConceptReferenceComponent"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "filter": {
          "description": "Select codes/concepts by their properties (including relationships)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValueSetFilterComponent"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "system": {
          "description": "The system the codes come from",
          "type": "string"
        },
        "valueSet": {
          "description": "Select the contents included in this value set",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "version": {
          "description": "Specific version of the code system referred to",
          "type": "string"
        }
      }
    },
    "ValueSetComposeComponent": {
      "description": "Content logical definition of the value set (CLD)",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "exclude": {
          "description": "Explicitly exclude codes from a code system or other value sets",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValueSetConceptSetComponent"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "inactive": {
          "description": "Whether inactive codes are in the value set",
          "type": "boolean"
        },
        "include": {
          "description": "Include one or more codes from a code system or other value set(s)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValueSetConceptSetComponent"
          }
        },
        "lockedDate": {
          "description": "Fixed date for references with no specified version (transitive)",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "ValueSetContainsComponent": {
      "description": "Codes in the value set",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "abstract": {
          "description": "If user cannot select this entry",
          "type": "boolean"
        },
        "code": {
          "description": "Code - if blank, this is not a selectable code",
          "type": "string"
        },
        "contains": {
          "description": "Codes contained under this entry",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValueSetContainsComponent"
          }
        },
        "designation": {
          "description": "Additional representations for this item",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValueSetDesignationComponent"
          }
        },
        "display": {
          "description": "User display for the concept",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "inactive": {
          "description": "If concept is inactive in the code system",
          "type": "boolean"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "system": {
          "description": "System value for the code",
          "type": "string"
        },
        "version": {
          "description": "Version in which this code/display is defined",
          "type": "string"
        }
      }
    },
    "ValueSetParameterComponent": {
      "description": "Parameter that controlled the expansion process",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Name as assigned by the client or server",
          "type": "string"
        },
        "valueString": {
          "description": "Value of the named parameter",
          "type": "string"
        },
        "valueBoolean": {
          "description": "Value of the named parameter",
          "type": "boolean"
        },
        "valueInteger": {
          "format": "int32",
          "description": "Value of the named parameter",
          "type": "integer"
        },
        "valueDecimal": {
          "format": "double",
          "description": "Value of the named parameter",
          "type": "number"
        },
        "valueUri": {
          "description": "Value of the named parameter",
          "type": "string"
        },
        "valueCode": {
          "description": "Value of the named parameter",
          "type": "string"
        },
        "valueDateTime": {
          "description": "Value of the named parameter",
          "type": "string"
        }
      }
    },
    "ValueSetExpansionComponent": {
      "description": "Used when the value set is \"expanded\"",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "contains": {
          "description": "Codes in the value set",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValueSetContainsComponent"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "identifier": {
          "description": "Identifies the value set expansion (business identifier)",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "offset": {
          "format": "int32",
          "description": "Offset at which this resource starts",
          "type": "integer"
        },
        "parameter": {
          "description": "Parameter that controlled the expansion process",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValueSetParameterComponent"
          }
        },
        "timestamp": {
          "description": "Time ValueSet expansion happened",
          "type": "string"
        },
        "total": {
          "format": "int32",
          "description": "Total number of codes in the expansion",
          "type": "integer"
        }
      }
    },
    "ValueSet": {
      "description": "A set of codes drawn from one or more code systems",
      "pattern": "ValueSet",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "compose": {
          "$ref": "#/definitions/ValueSetComposeComponent"
        },
        "contact": {
          "description": "Contact details for the publisher",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactDetail"
          }
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "copyright": {
          "description": "Use and/or publishing restrictions",
          "type": "string"
        },
        "date": {
          "description": "Date last changed",
          "type": "string"
        },
        "description": {
          "description": "Natural language description of the value set",
          "type": "string"
        },
        "expansion": {
          "$ref": "#/definitions/ValueSetExpansionComponent"
        },
        "experimental": {
          "description": "For testing purposes, not real usage",
          "type": "boolean"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Additional identifier for the value set (business identifier)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "immutable": {
          "description": "Indicates whether or not any change to the content logical definition may occur",
          "type": "boolean"
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "jurisdiction": {
          "description": "Intended jurisdiction for value set (if applicable)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "name": {
          "description": "Name for this value set (computer friendly)",
          "type": "string"
        },
        "publisher": {
          "description": "Name of the publisher (organization or individual)",
          "type": "string"
        },
        "purpose": {
          "description": "Why this value set is defined",
          "type": "string"
        },
        "status": {
          "description": "draft | active | retired | unknown",
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "title": {
          "description": "Name for this value set (human friendly)",
          "type": "string"
        },
        "url": {
          "description": "Canonical identifier for this value set, represented as a URI (globally unique)",
          "type": "string"
        },
        "useContext": {
          "description": "The context that the content is intended to support",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UsageContext"
          }
        },
        "version": {
          "description": "Business version of the value set",
          "type": "string"
        }
      }
    },
    "VerificationResultAttestationComponent": {
      "description": "Information about the entity attesting to information",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "communicationMethod": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "date": {
          "description": "The date the information was attested to",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "onBehalfOf": {
          "$ref": "#/definitions/Reference"
        },
        "proxyIdentityCertificate": {
          "description": "A digital identity certificate associated with the proxy entity submitting attested information on behalf of the attestation source",
          "type": "string"
        },
        "proxySignature": {
          "$ref": "#/definitions/Signature"
        },
        "sourceIdentityCertificate": {
          "description": "A digital identity certificate associated with the attestation source",
          "type": "string"
        },
        "sourceSignature": {
          "$ref": "#/definitions/Signature"
        },
        "who": {
          "$ref": "#/definitions/Reference"
        }
      }
    },
    "VerificationResultPrimarySourceComponent": {
      "description": "Information about the primary source(s) involved in validation",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "canPushUpdates": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "communicationMethod": {
          "description": "Method for exchanging information with the primary source",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "pushTypeAvailable": {
          "description": "specific | any | source",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "type": {
          "description": "Type of primary source (License Board; Primary Education; Continuing Education; Postal Service; Relationship owner; Registration Authority; legal source; issuing source; authoritative source)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "validationDate": {
          "description": "When the target was validated against the primary source",
          "type": "string"
        },
        "validationStatus": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "who": {
          "$ref": "#/definitions/Reference"
        }
      }
    },
    "VerificationResultValidatorComponent": {
      "description": "Information about the entity validating information",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "attestationSignature": {
          "$ref": "#/definitions/Signature"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "identityCertificate": {
          "description": "A digital identity certificate associated with the validator",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "organization": {
          "$ref": "#/definitions/Reference"
        }
      }
    },
    "VerificationResult": {
      "description": "Describes validation requirements, source(s), status and dates for one or more elements",
      "pattern": "VerificationResult",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "attestation": {
          "$ref": "#/definitions/VerificationResultAttestationComponent"
        },
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "failureAction": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "frequency": {
          "$ref": "#/definitions/Timing"
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "lastPerformed": {
          "description": "The date/time validation was last completed (including failed validations)",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "need": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "nextScheduled": {
          "description": "The date when target is next validated, if appropriate",
          "type": "string"
        },
        "primarySource": {
          "description": "Information about the primary source(s) involved in validation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VerificationResultPrimarySourceComponent"
          }
        },
        "status": {
          "description": "attested | validated | in-process | req-revalid | val-fail | reval-fail",
          "type": "string"
        },
        "statusDate": {
          "description": "When the validation status was updated",
          "type": "string"
        },
        "target": {
          "description": "A resource that was validated",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          }
        },
        "targetLocation": {
          "description": "The fhirpath location(s) within the resource that was validated",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        },
        "validationProcess": {
          "description": "The primary process by which the target is validated (edit check; value set; primary source; multiple sources; standalone; in context)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          }
        },
        "validationType": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "validator": {
          "description": "Information about the entity validating information",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VerificationResultValidatorComponent"
          }
        }
      }
    },
    "VisionPrescriptionPrismComponent": {
      "description": "Eye alignment compensation",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "amount": {
          "format": "double",
          "description": "Amount of adjustment",
          "type": "number"
        },
        "base": {
          "description": "up | down | in | out",
          "type": "string"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        }
      }
    },
    "VisionPrescriptionLensSpecificationComponent": {
      "description": "Vision lens authorization",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackboneElement"
        }
      ],
      "properties": {
        "add": {
          "format": "double",
          "description": "Added power for multifocal levels",
          "type": "number"
        },
        "axis": {
          "format": "int32",
          "description": "Lens meridian which contain no power for astigmatism",
          "type": "integer"
        },
        "backCurve": {
          "format": "double",
          "description": "Contact lens back curvature",
          "type": "number"
        },
        "brand": {
          "description": "Brand required",
          "type": "string"
        },
        "color": {
          "description": "Color required",
          "type": "string"
        },
        "cylinder": {
          "format": "double",
          "description": "Lens power for astigmatism",
          "type": "number"
        },
        "diameter": {
          "format": "double",
          "description": "Contact lens diameter",
          "type": "number"
        },
        "duration": {
          "$ref": "#/definitions/Quantity"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "eye": {
          "description": "right | left",
          "type": "string"
        },
        "id": {
          "description": "Unique id for inter-element referencing",
          "type": "string"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored even if unrecognized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "note": {
          "description": "Notes for coatings",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "power": {
          "format": "double",
          "description": "Contact lens power",
          "type": "number"
        },
        "prism": {
          "description": "Eye alignment compensation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VisionPrescriptionPrismComponent"
          }
        },
        "product": {
          "$ref": "#/definitions/CodeableConcept"
        },
        "sphere": {
          "format": "double",
          "description": "Power of the lens",
          "type": "number"
        }
      }
    },
    "VisionPrescription": {
      "description": "Prescription for vision correction products for a patient",
      "pattern": "VisionPrescription",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DomainResource"
        }
      ],
      "properties": {
        "contained": {
          "description": "Contained, inline Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "created": {
          "description": "Response creation date",
          "type": "string"
        },
        "dateWritten": {
          "description": "When prescription was authorized",
          "type": "string"
        },
        "encounter": {
          "$ref": "#/definitions/Reference"
        },
        "extension": {
          "description": "Additional content defined by implementations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "Logical id of this artifact",
          "type": "string"
        },
        "identifier": {
          "description": "Business Identifier for vision prescription",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "implicitRules": {
          "description": "A set of rules under which this content was created",
          "type": "string"
        },
        "language": {
          "description": "Language of the resource content",
          "type": "string"
        },
        "lensSpecification": {
          "description": "Vision lens authorization",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VisionPrescriptionLensSpecificationComponent"
          }
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "modifierExtension": {
          "description": "Extensions that cannot be ignored",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "patient": {
          "$ref": "#/definitions/Reference"
        },
        "prescriber": {
          "$ref": "#/definitions/Reference"
        },
        "status": {
          "description": "active | cancelled | draft | entered-in-error",
          "type": "string"
        },
        "text": {
          "$ref": "#/definitions/Narrative"
        }
      }
    }
  },
  "parameters": {
    "id": {
      "in": "path",
      "name": "id",
      "description": "Resource ID",
      "type": "string"
    },
    "vid": {
      "in": "path",
      "name": "vid",
      "description": "Resource Version ID",
      "type": "string"
    },
    "_format": {
      "in": "query",
      "name": "_format",
      "description": "Override the HTTP content negotiation",
      "type": "string",
      "collectionFormat": "multi"
    },
    "_pretty": {
      "in": "query",
      "name": "_pretty",
      "description": "Ask for a pretty printed response for human convenience",
      "type": "string",
      "collectionFormat": "multi"
    },
    "_summary": {
      "in": "query",
      "name": "_summary",
      "description": "Ask for a predefined short form of the resource in response",
      "type": "string",
      "enum": [
        "true",
        "text",
        "data",
        "count",
        "false"
      ],
      "collectionFormat": "multi"
    },
    "_elements": {
      "in": "query",
      "name": "_elements",
      "description": "Ask for a particular set of elements to be returned",
      "type": "string",
      "collectionFormat": "multi"
    },
    "_content": {
      "in": "query",
      "name": "_content",
      "description": "Search on the entire content of the resource",
      "type": "string",
      "collectionFormat": "multi"
    },
    "_id": {
      "in": "query",
      "name": "_id",
      "description": "Logical id of this artifact",
      "type": "string",
      "collectionFormat": "multi"
    },
    "_in": {
      "in": "query",
      "name": "_in",
      "description": "Allows for the retrieval of resources that are active members of a CareTeam, Group, or List",
      "type": "string",
      "collectionFormat": "multi"
    },
    "_language": {
      "in": "query",
      "name": "_language",
      "description": "Language of the resource content",
      "type": "string",
      "collectionFormat": "multi"
    },
    "_lastUpdated": {
      "in": "query",
      "name": "_lastUpdated",
      "description": "When the resource version last changed",
      "type": "string",
      "collectionFormat": "multi"
    },
    "_list": {
      "in": "query",
      "name": "_list",
      "description": "Allows for the retrieval of resources that are referenced by a List resource or by one of the pre-defined functional lists",
      "type": "string",
      "collectionFormat": "multi"
    },
    "_profile": {
      "in": "query",
      "name": "_profile",
      "description": "Profiles this resource claims to conform to",
      "type": "string",
      "collectionFormat": "multi"
    },
    "_query": {
      "in": "query",
      "name": "_query",
      "description": "A custom search profile that describes a specific defined query operation",
      "type": "string",
      "collectionFormat": "multi"
    },
    "_security": {
      "in": "query",
      "name": "_security",
      "description": "Security Labels applied to this resource",
      "type": "string",
      "collectionFormat": "multi"
    },
    "_source": {
      "in": "query",
      "name": "_source",
      "description": "Identifies where the resource comes from",
      "type": "string",
      "collectionFormat": "multi"
    },
    "_tag": {
      "in": "query",
      "name": "_tag",
      "description": "Tags applied to this resource",
      "type": "string",
      "collectionFormat": "multi"
    },
    "_type": {
      "in": "query",
      "name": "_type",
      "description": "A resource type filter",
      "type": "string",
      "collectionFormat": "multi"
    }
  }
}